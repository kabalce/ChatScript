
#
# CONCEPTS
#

concept: ~my_negation (~negation "don't")
concept: ~greater (greater bigger)
concept: ~lesser (lesser smaller)
concept: ~equal (equal same equivalent equally identical)
concept: ~comparison (~greater ~lesser ~equal)
concept: ~finish (finish complete pass)
concept: ~have (have collect earn complete gather)

# ATTRIBUTES
concept: ~ects (ects ECTS point "ects point" "ECTS point" "ects points" "ECTS points")
concept: ~course (course subject lecture class exercise laboratory)
concept: ~term (term semester "winter semester" "summer semester" "winter term" "summer term" winter summer)
concept: ~teacher (tutor teacher "academic teacher" practitioner professor trainer)
concept: ~classtype (lecture class lab exercise project type)

# COURSES  # TODO
concept: ~course_name ("project: coreforge" "financial services" "course: game development in unreal engine 5" "combinatorial optimization under uncertainty" "tutoring" "combinatorial optimization" "digital image processing" "algebra" "deep learning (project)" "artificial intelligence" "from mordor to matrix. the fantastic political philosophy" "professional practice" "mentoring for data science" "sport programming in practice" "clone: financial services" "tutoring isim" "seminar: analysis of algorithmic problems" "geometric optimization" "diploma project" "object-oriented software development" "project: development of the enrollment system" "seminar: software engineering" "digital logic" "programming methodology" "economic policy policy" "c++ course" "numerical optimization" "algorithms and data structures" "cryptography" "neural networks and natural language processing" "computer networks" "game testing" "theoretical foundations of programming languages" "advanced distributed algorithms" "seminar: computer graphics" "clone: ethics for the thinking" "scala in practice" "design and development of .net windows applications" "seminar: software testing" "object-oriented programming" "design of database applications" "advanced data mining" "ethics for the thinking" "warsztaty: jak założyć firmę?" "formal languages and computational complexity" "introduction to databases" "curves and surfaces in computer graphics" "linux system administration" "probability and statistics" "computer architecture for programmers" "project: competitive artificial intelligence" "project: machine learning for temporal data mining" "spectral graph theory" "concurrent programming" "seminarium: klasyka informatyki" "submodular optimization" "seminar on algorithms 2015" "course on practical c enterprise software development" "seminar: computer systems architecture" "przedmiot w wersji roboczej" "evolutionary algorithms" "seminar: efficient implementation of algorithms" "clone: computing for computer scientists" "compiler construction" "seminar: agile software development" "theoretical foundations of concurrent processes" "mathematical analysis 2" "seminar: the implementation of functional languages" "computer architecture" "software testing" "algorithmic game theory" "photorealistic computer graphics" "analysis of variance" "seminar on computer graphics 2017" "operating system principles" "operating system - tutoring" "seminar on foundations of object-oriented languages" "logic programming" "modern platforms for big data analytics, graphics and visualisation" "course: practical c enterprise software development" "artificial intelligence for games: team projects" "artificial intelligence for games" "digitizing the real world" "it architecture" "it security in practice" "programmers' team engineering" "synthesis and sound processing" "seminar: information safety and security" "computational photography" "computer vision and photogrammetry" "seminar: program certification in coq" "seminar: it security" "introduction to lambda calculus" "application security" "methods of convergence acceleration" "student apprenticeship" "category theory" "design i deployment of cloud systems" "seminar on networks and clouds" "capturing 3d humans project" "computational photography b" "course: practical software development" "project: autonomous martian rover" "automated verification" "games, automata, logics, and formal verification" "scientific writing" "design and implementation of advanced php applications" "project: creating a chatbot" "principles of programming languages" "project: evolutionary construction of 2d wheeled vehicles" "internet of things" "seminar: probabilistic graphical models" "ray tracing project" "seminar on it security, cloud computing, microservices, and devops" "blockchain and its applications" "programming in scala" "seminar: parameterized algorithms" "seminar: theory of linear and integer programming" "seminarium: pathfinding algorithms" "operating systems (advanced)" "semantics of programming languages" "seminar: games and game playing" "seminar: algebraic effects" "course: graph databases" "53m1n4r1um dl4 h4k3r0w" "seminar: category theory and programming languages" "seminarium: silnik unity i wirtualna rzeczywistość" "projekt zespołowy: silnik unity3d i wirtualna rzeczywistość lato" "program interaction: bisimulation and coinduction" "project: digital experience & internet of things" "artificial intelligence. seminar" "information and coding theory" "half-semester course: quantum algorithms" "seminar: selected topics in proof theory" "scheduling theory" "workshop on deep learning" "seminar: data mining - data classification and clustering" "programming project: online judge system" "data mining" "java course" "data compression" "history of philosophy (w)" "data science@nokia" "logic for computer science" "seminar on systems" "designing asp.net web applications" "simulation-based artificial intelligence" "algorithmic fairness, or politically correct computer science" "seminar: tricks in c++" "natural language processing" "introduction to programming in python" "software foundations in coq" "seminar: lambda calculus: evaluation and normalization" "clone: history of moral reflection" "research seminar: formal logic and databases" "seminar: communication complexity" "cross-cultural psychology" "fundamentals of computer graphics" "tools and methods in big data processing" "project: scheduler" "seminar on advanced algorithmics" "neural networks and deep learning" "seminar: algorithmics in networks" "seminar: theory of automata" "seminar: non-classical logics: theory and applications" "verification and synthesis of multi-agent systems" "half-course: data recovery" "internet technologies" "seminar on approximation algorithms and combinatorial optimization" "course: rust language" "lua course" "error correction codes" "algorithms on strings" "randomized algorithms" "what you need to know for your first job" "theory of linear and integer programming" "project: programming programming games" "history of moral reflection" "team management" "machine learning" "logical methods in computer science" "i/o-efficient algorithms and data structures" "seminar on internet of things" "seminar: combinatorial theory of finite automata" "seminar: front-end programming frameworks" "seminar on blockchain and its applications" "innovative projects by nokia" "deductive verification" "project: mimiker operating system" "algorithmic seminar" "word equations" "practical aspects of computer networks" "computational learning theory" "text mining" "discrete mathematics" "digital archeology" "seminar: artificial intelligence for games" "information systems security" "fine-grained complexity" "seminar: reinforcement learning for games" "programming languages" "unix kernel design" "embedded systems" "eu economic policy" "clone: eu economic policy" "design and implementation of systems in the cloud" "parallel computing with cuda (q2)" "term logic" "project: demoscene production" "intelligence services in state security system and international relations" "decision problems in logic" "software engineering" "probability theory for computer scientists" "course: modeling 3d and visualization in sketchup" "introduction to computer science" "c minicourse" "logic for computer science (advanced)" "computational complexity in practice" "algorithms for big data" "seminar: numerical and computer graphics algorithms" "distributed algorithms" "olympic algorithms" "workshops: linux device drivers programming" "fpga programming" "principles of program analysis" "computing for computer scientists" "advanced data structures" "proseminar: blockchain beyond buzzwords" "combinatorics" "selected aspects of practical software development" "human-computer interaction or computer-human interaction (hci or chi)" "seminar: advanced topics in semantics of programming languages" "distributed systems" "algorithms for planar graphs" "theory of argumentation and elements of logical semiotics" "project: artifical intelligence for regular boardgames" "decidability and complexity of logics motivated by computer science" "automata theory" "seminar: advanced algorithmics" "numerical analysis (b)" "competition protection in the market economy" "half-course: hacking for everyone" "scheduling theory" "computer systems" "operating systems" "introduction to linear optimization" "course: game development in unity3d" "seminar: competitive artificial intelligence" "seminar: probability and algorithms" "manipulation and abuses on the financial market" "seminar on cryptography and computer security" "armies and wars: hybrid and conventional" "introduction to philosophical logic" "soft power and its tools in international" "project: martian rover analog construction and development" "introduction to programming in c" "advanced techniques in c++ and stl" "advanced python programming" "databases 2" "modeling financial derivatives using the f functional language" "calculus" "clone: seminar on systems" "ideas of post-humanism: the artificial intelligence project and the problem of possible minds" "seminar: finite and algorithmic model theory" "seminar: fine-grained complexity" "project: machine learning for recommender systems" "course: technical writing (q2)" "freebsd device drivers" "modern web development" "seminar: advances in computer systems" "linux device drivers" "an introduction to finite and classical model theory" "introduction to algorithms in telecommunication" "algorithmic causality with applications" "seminar: modern data mining" "proseminar: data visualisation" "introduction to cloud computing" "online algorithms" "history of philosophy" "functional programming" "numerical analysis (m)" "efficient implementation of algorithms" "front-end apps development" "computational complexity")

# NUMBERS
concept: ~one    (one    "1"  1 1st first)
concept: ~two    (two    "2"  2 2nd second)
concept: ~three  (three  "3"  3 3rd third)
concept: ~four   (four   "4"  4 4th fourth)
concept: ~five   (five   "5"  5 5th fifth)
concept: ~six    (six    "6"  6 6th sixth)
concept: ~seven  (seven  "7"  7 7th seventh)
concept: ~eight  (eight  "8"  8)
concept: ~nine   (nine   "9"  9)
concept: ~ten    (ten    "10" 10)
concept: ~eleven (eleven "11" 11)
concept: ~twelve (twelve "12" 12)

concept: ~number (~one ~two ~three ~four ~five ~six ~seven ~eight ~nine ~ten ~eleven ~twelve)


#
# DATA
#

# BASIC COURSE INFO
table: ~subjectects(^subject ^ects ^classtype ^term ^offered ^firstyear ^maintutor)

if (^ects != *) { createfact(^subject ects ^ects) }
if (^classtype != *) { createfact(^subject classtype ^classtype) }
if (^term != *) { createfact(^subject term ^term) }
if (^offered != *) { createfact(^subject offer ^offered) }

DATA:
"project: coreforge" "4" "analiza kodu źródłowego, prezentacja, projekt programistyczny" "winter" "true" "false" * 
"financial services" "5" "wykład, ćwiczenia" "winter" "true" "false" * 
"course: game development in unreal engine 5" "5" "wykład, indywidualny lub zespołowy projekt programistyczny, samodzielna praca przy komputerze" "winter" "true" "false" * 
"combinatorial optimization under uncertainty" "6" "wykład" "winter" "true" "false" * 
"tutoring" "0" 0 "winter" "true" "true" * 
"combinatorial optimization" "6" "ćwiczenia audytoryjne wykład monograficzny" "winter" "true" "false" * 
"digital image processing" "6" "lecture programming lab programming project tutorial individual computer work" "winter" "true" "false" * 
"algebra" "7" "ćwiczenia audytoryjne wykład" "winter" "true" "true" * 
"deep learning (project)" "6" "projekt programistyczny" "winter" "true" "false" * 
"artificial intelligence" "6" "wykład, prezentacja, rozwiązywanie zadań z komentowaniem, dyskusja, konsultowanie pomysłów na rozwiązywanie zadań programistycznych, samodzielna praca przy komputerze, indywidualny projekt programistyczny" "winter" "true" "false" * 
"from mordor to matrix. the fantastic political philosophy" "3" "wykład" "winter" "true" "true" * 
"professional practice" "4" "realizacja zadań postawionych przez pracodawcę." "winter" "true" "false" * 
"mentoring for data science" "0" 0 "winter" "true" "false" * 
"sport programming in practice" "2" 0 "winter" "true" "false" * 
"clone: financial services" "3" "wykład, ćwiczenia" "winter" "true" "false" * 
"tutoring isim" "0" 0 "winter" "true" "true" * 
"seminar: analysis of algorithmic problems" "3" 0 "winter" "true" "true" * 
"geometric optimization" "6" 0 "winter" "true" "false" * 
"diploma project" "4" "studenci prezentują wyniki etapów realizacji pracy dyplomowejpodczas zajęć następuje systematyzacja wiedzy i rozwinięcie umiejętności planowania zakresu i przebiegu produktu przedsięwzięcia informatycznego.przedmiot  projekt dyplomy ma charakter wspomagający przygotowanie, redakcje i kompletacje  dokumentacji  i innych produktów wytwarzanych w celu osiągnięcia celu pracy dyplomowej. zajęcia przygotowują do samodzielnego i świadomego współudziału w analizie zagadnień, kształtowaniu i planowaniu projektów informatycznych." "winter" "true" "false" * 
"object-oriented software development" "6" "pracownia programistyczna wykładw razie konieczności nauczania zdalnego - materiały online." "winter" "true" "false" * 
"project: development of the enrollment system" "4" "projekt programistyczny pracownia programistyczna" "winter" "true" "false" * 
"seminar: software engineering" "3" "prepared by students lectures" "winter" "true" "false" * 
"digital logic" "6" "ćwiczenia audytoryjne pracownia programistyczna wykład" "winter" "true" "true" * 
"programming methodology" "9" "wykład, live coding, dyskusja, rozwiązywanie zadań z komentowaniem, indywidualne/grupowe rozwiązywanie zadań, samodzielna praca przy komputerze" "winter" "true" "true" * 
"economic policy policy" "3" "wykład" "winter" "true" "false" * 
"c++ course" "5" "wykład, live coding, analiza programów dostarczonych przez wykładowcę, konsultowanie pomysłów na rozwiązania zadań, samodzielna praca programistyczna w domu oraz na zajęciach." "winter" "true" "true" * 
"numerical optimization" "8" "lecture, problem solving in class, individual work at the computer, programming project" "winter" "true" "false" * 
"algorithms and data structures" "9" "wykład, rozwiązywanie zadań z komentowaniem, indywidualne rozwiązywanie zadań, analiza algorytmów (poprawność, złożoność), indywidualne rozwiązywanie zadań programistycznych" "winter" "true" "false" * 
"cryptography" "6" "wykład, wykład interaktywny, rozwiązywanie zadań z komentowaniem, indywidualne/grupowe rozwiązywanie zadań/problemów" "winter" "true" "false" * 
"neural networks and natural language processing" "6" "programming project programming laboratories research project lecturein case of further university lockdown the course will be offered remotely: lectures will be delivered over a videconference system and recorded assignments will be graded using a combination of automatic grading tools and presentations over conferencing systems the project will feature presentations given to other students the final exam may be held remotely in the form of quizzes and oral evaluations during 1-on-1 calls" "winter" "true" "false" * 
"computer networks" "6" "wykład  ćwiczenia warsztatowe rozwiązywanie zadań z komentowaniem  indywidualne/grupowe rozwiązywanie zadań indywidualny  projekt programistyczny" "winter" "true" "false" * 
"game testing" "6" "wykłady, wykłady interaktywne, nadzorowane rozwiązywanie problemów,indywidualne / zbiorowe rozwiązywanie problemów, analiza wymagań i przypadków testowych (poprawność, testowalność, złożoność, planowanie i wykonywanie testów)" "winter" "true" "false" * 
"theoretical foundations of programming languages" "6" "wykład ćwiczenia" "winter" "true" "false" * 
"advanced distributed algorithms" "6" "ćwiczenia audytoryjne wykład" "winter" "true" "false" * 
"seminar: computer graphics" "3" "samodzielna praca przygotowanie prezentacji prezentacja dyskusja" "winter" "true" "false" * 
"clone: ethics for the thinking" "3" "wykład, dyskusja" "winter" "true" "false" * 
"scala in practice" "5" "lectures (theory & live-coding) programming exercises & demos code reviews reading" "winter" "true" "false" * 
"design and development of .net windows applications" "5" "pracownia programistyczna wykładw razie konieczności nauczania zdalnego - materiały online." "winter" "true" "false" * 
"seminar: software testing" "3" "- samodzielny wybór i lektura materiałów,- przygotowanie i wygłoszenie prezentacji,- wysłuchanie i zrozumienie wygłoszonych referatów,- uczestnictwo w dyskusji." "winter" "true" "false" * 
"object-oriented programming" "6" "wykład prezentacja rozwiązań i live coding samodzielna implementacja zadań realizacja i prezentacja projektu programistycznego" "winter" "true" "true" * 
"design of database applications" "5" "pracownia programistyczna wykład" "winter" "true" "false" * 
"advanced data mining" "6" "samodzielne czytanie literatury, prezentacja, dyskusja" "winter" "true" "false" * 
"ethics for the thinking" "5" "wykład, dyskusja" "winter" "true" "false" * 
"warsztaty: jak założyć firmę?" "3" 0 "winter" "true" "false" * 
"formal languages and computational complexity" "9" "wykład i ćwiczenia" "winter" "true" "false" * 
"introduction to databases" "6" "wykład, wykład interaktywny, samodzielne rozwiązywanie zadań, dyskusja, rozwiązywanie zadań z komentowaniem, ćwiczenia warsztatowe, samodzielny projekt programistyczny" "winter" "true" "false" * 
"curves and surfaces in computer graphics" "6" "wykład, wykład interaktywny, ćwiczenia audytoryjne, pracownia programistyczna, projekt programistyczny." "winter" "true" "false" * 
"linux system administration" "5" "wykład pracownia komputerowa, w tym prezentacja rozwiązań zadań przy komputerze" "winter" "true" "false" * 
"probability and statistics" "6" "wykład rozwiązywanie zadań z komentowaniem indywidualne rozwiązywanie zadań samodzielna praca przy komputerze" "winter" "true" "false" * 
"computer architecture for programmers" "8" "wykład, rozwiązywanie zadań z komentowaniem, indywidualne rozwiązywanie zadań, indywidualna analiza kodu źródłowego i kodu maszynowego, konsultowanie pomysłów na rozwiązywanie zadań programistycznych, samodzielna praca przy komputerze." "winter" "true" "false" * 
"project: competitive artificial intelligence" "4" "- grupowy projekt programistyczny- prezentacja- dyskusja, konsultowanie pomysłów" "winter" "true" "false" * 
"project: machine learning for temporal data mining" "4" "zespołowy projekt programistyczny z elementami studiów literatury i prac badawczych" "winter" "true" "false" * 
"spectral graph theory" "6" 0 "winter" "true" "false" * 
"project: coreforge" "4" "analiza kodu źródłowego, prezentacja, projekt programistyczny" "summer" "true" "false" * 
"financial services" "5" "wykład, ćwiczenia" "summer" "true" "false" * 
"course: game development in unreal engine 5" "5" "wykład, indywidualny lub zespołowy projekt programistyczny, samodzielna praca przy komputerze" "summer" "true" "false" * 
"combinatorial optimization under uncertainty" "6" "wykład" "summer" "true" "false" * 
"tutoring" "0" 0 "summer" "true" "true" * 
"combinatorial optimization" "6" "ćwiczenia audytoryjne wykład monograficzny" "summer" "true" "false" * 
"digital image processing" "6" "lecture programming lab programming project tutorial individual computer work" "summer" "true" "false" * 
"algebra" "7" "ćwiczenia audytoryjne wykład" "summer" "true" "true" * 
"deep learning (project)" "6" "projekt programistyczny" "summer" "true" "false" * 
"artificial intelligence" "6" "wykład, prezentacja, rozwiązywanie zadań z komentowaniem, dyskusja, konsultowanie pomysłów na rozwiązywanie zadań programistycznych, samodzielna praca przy komputerze, indywidualny projekt programistyczny" "summer" "true" "false" * 
"from mordor to matrix. the fantastic political philosophy" "3" "wykład" "summer" "true" "true" * 
"professional practice" "4" "realizacja zadań postawionych przez pracodawcę." "summer" "true" "false" * 
"mentoring for data science" "0" 0 "summer" "true" "false" * 
"sport programming in practice" "2" 0 "summer" "true" "false" * 
"clone: financial services" "3" "wykład, ćwiczenia" "summer" "true" "false" * 
"tutoring isim" "0" 0 "summer" "true" "true" * 
"seminar: analysis of algorithmic problems" "3" 0 "summer" "true" "true" * 
"geometric optimization" "6" 0 "summer" "true" "false" * 
"diploma project" "4" "studenci prezentują wyniki etapów realizacji pracy dyplomowejpodczas zajęć następuje systematyzacja wiedzy i rozwinięcie umiejętności planowania zakresu i przebiegu produktu przedsięwzięcia informatycznego.przedmiot  projekt dyplomy ma charakter wspomagający przygotowanie, redakcje i kompletacje  dokumentacji  i innych produktów wytwarzanych w celu osiągnięcia celu pracy dyplomowej. zajęcia przygotowują do samodzielnego i świadomego współudziału w analizie zagadnień, kształtowaniu i planowaniu projektów informatycznych." "summer" "true" "false" * 
"object-oriented software development" "6" "pracownia programistyczna wykładw razie konieczności nauczania zdalnego - materiały online." "summer" "true" "false" * 
"project: development of the enrollment system" "4" "projekt programistyczny pracownia programistyczna" "summer" "true" "false" * 
"seminar: software engineering" "3" "prepared by students lectures" "summer" "true" "false" * 
"digital logic" "6" "ćwiczenia audytoryjne pracownia programistyczna wykład" "summer" "true" "true" * 
"programming methodology" "9" "wykład, live coding, dyskusja, rozwiązywanie zadań z komentowaniem, indywidualne/grupowe rozwiązywanie zadań, samodzielna praca przy komputerze" "summer" "true" "true" * 
"economic policy policy" "3" "wykład" "summer" "true" "false" * 
"c++ course" "5" "wykład, live coding, analiza programów dostarczonych przez wykładowcę, konsultowanie pomysłów na rozwiązania zadań, samodzielna praca programistyczna w domu oraz na zajęciach." "summer" "true" "true" * 
"numerical optimization" "8" "lecture, problem solving in class, individual work at the computer, programming project" "summer" "true" "false" * 
"algorithms and data structures" "9" "wykład, rozwiązywanie zadań z komentowaniem, indywidualne rozwiązywanie zadań, analiza algorytmów (poprawność, złożoność), indywidualne rozwiązywanie zadań programistycznych" "summer" "true" "false" * 
"cryptography" "6" "wykład, wykład interaktywny, rozwiązywanie zadań z komentowaniem, indywidualne/grupowe rozwiązywanie zadań/problemów" "summer" "true" "false" * 
"neural networks and natural language processing" "6" "programming project programming laboratories research project lecturein case of further university lockdown the course will be offered remotely: lectures will be delivered over a videconference system and recorded assignments will be graded using a combination of automatic grading tools and presentations over conferencing systems the project will feature presentations given to other students the final exam may be held remotely in the form of quizzes and oral evaluations during 1-on-1 calls" "summer" "true" "false" * 
"computer networks" "6" "wykład  ćwiczenia warsztatowe rozwiązywanie zadań z komentowaniem  indywidualne/grupowe rozwiązywanie zadań indywidualny  projekt programistyczny" "summer" "true" "false" * 
"game testing" "6" "wykłady, wykłady interaktywne, nadzorowane rozwiązywanie problemów,indywidualne / zbiorowe rozwiązywanie problemów, analiza wymagań i przypadków testowych (poprawność, testowalność, złożoność, planowanie i wykonywanie testów)" "summer" "true" "false" * 
"theoretical foundations of programming languages" "6" "wykład ćwiczenia" "summer" "true" "false" * 
"advanced distributed algorithms" "6" "ćwiczenia audytoryjne wykład" "summer" "true" "false" * 
"seminar: computer graphics" "3" "samodzielna praca przygotowanie prezentacji prezentacja dyskusja" "summer" "true" "false" * 
"clone: ethics for the thinking" "3" "wykład, dyskusja" "summer" "true" "false" * 
"scala in practice" "5" "lectures (theory & live-coding) programming exercises & demos code reviews reading" "summer" "true" "false" * 
"design and development of .net windows applications" "5" "pracownia programistyczna wykładw razie konieczności nauczania zdalnego - materiały online." "summer" "true" "false" * 
"seminar: software testing" "3" "- samodzielny wybór i lektura materiałów,- przygotowanie i wygłoszenie prezentacji,- wysłuchanie i zrozumienie wygłoszonych referatów,- uczestnictwo w dyskusji." "summer" "true" "false" * 
"object-oriented programming" "6" "wykład prezentacja rozwiązań i live coding samodzielna implementacja zadań realizacja i prezentacja projektu programistycznego" "summer" "true" "true" * 
"design of database applications" "5" "pracownia programistyczna wykład" "summer" "true" "false" * 
"advanced data mining" "6" "samodzielne czytanie literatury, prezentacja, dyskusja" "summer" "true" "false" * 
"ethics for the thinking" "5" "wykład, dyskusja" "summer" "true" "false" * 
"warsztaty: jak założyć firmę?" "3" 0 "summer" "true" "false" * 
"formal languages and computational complexity" "9" "wykład i ćwiczenia" "summer" "true" "false" * 
"introduction to databases" "6" "wykład, wykład interaktywny, samodzielne rozwiązywanie zadań, dyskusja, rozwiązywanie zadań z komentowaniem, ćwiczenia warsztatowe, samodzielny projekt programistyczny" "summer" "true" "false" * 
"curves and surfaces in computer graphics" "6" "wykład, wykład interaktywny, ćwiczenia audytoryjne, pracownia programistyczna, projekt programistyczny." "summer" "true" "false" * 
"linux system administration" "5" "wykład pracownia komputerowa, w tym prezentacja rozwiązań zadań przy komputerze" "summer" "true" "false" * 
"probability and statistics" "6" "wykład rozwiązywanie zadań z komentowaniem indywidualne rozwiązywanie zadań samodzielna praca przy komputerze" "summer" "true" "false" * 
"computer architecture for programmers" "8" "wykład, rozwiązywanie zadań z komentowaniem, indywidualne rozwiązywanie zadań, indywidualna analiza kodu źródłowego i kodu maszynowego, konsultowanie pomysłów na rozwiązywanie zadań programistycznych, samodzielna praca przy komputerze." "summer" "true" "false" * 
"project: competitive artificial intelligence" "4" "- grupowy projekt programistyczny- prezentacja- dyskusja, konsultowanie pomysłów" "summer" "true" "false" * 
"project: machine learning for temporal data mining" "4" "zespołowy projekt programistyczny z elementami studiów literatury i prac badawczych" "summer" "true" "false" * 
"spectral graph theory" "6" 0 "summer" "true" "false" * 
"concurrent programming" "3" 0 0 "false" "false" * 
"seminarium: klasyka informatyki" "3" 0 0 "false" "false" * 
"submodular optimization" "6" "wykład, czytanie prac naukowych" 0 "false" "false" * 
"seminar on algorithms 2015" "3" 0 0 "false" "false" * 
"course on practical c enterprise software development" "4" 0 0 "false" "false" * 
"seminar: computer systems architecture" "3" 0 0 "false" "false" * 
"przedmiot w wersji roboczej" "6" "ćwiczenia audytoryjne pracownia programistyczna wykład" 0 "false" "false" * 
"evolutionary algorithms" "6" "projekt programistyczny pracownia programistyczna projekt badawczy wykład" 0 "false" "false" * 
"seminar: efficient implementation of algorithms" "3" 0 0 "false" "false" * 
"clone: computing for computer scientists" "6" "wykład interaktywny prezentacja samodzielna praca przy komputerze pracownia programistyczna dyskusja" 0 "false" "true" * 
"compiler construction" "6" 0 0 "false" "false" * 
"seminar: agile software development" "3" 0 0 "false" "false" * 
"theoretical foundations of concurrent processes" "6" "ćwiczenia audytoryjne wykład" 0 "false" "false" * 
"mathematical analysis 2" "6" "wykładćwicienia audytoryjne" 0 "false" "true" * 
"seminar: the implementation of functional languages" "3" "prezentacja studencka" 0 "false" "false" * 
"computer architecture" "6" 0 0 "false" "false" * 
"software testing" "6" "ćwiczenia audytoryjne pracownia programistyczna wykład monograficzny" 0 "false" "false" * 
"algorithmic game theory" "6" "ćwiczenia audytoryjne wykład" 0 "false" "false" * 
"photorealistic computer graphics" "6" "projekt programistyczny pracownia programistyczna wykład" 0 "false" "false" * 
"analysis of variance" "6" "pracownia programistyczna wykład" 0 "false" "false" * 
"seminar on computer graphics 2017" "3" 0 0 "false" "false" * 
"operating system principles" "6" "ćwiczenia audytoryjne pracownia programistyczna wykład" 0 "false" "false" * 
"operating system - tutoring" "0" 0 0 "false" "false" * 
"seminar on foundations of object-oriented languages" "3" 0 0 "false" "false" * 
"logic programming" "6" 0 0 "false" "false" * 
"modern platforms for big data analytics, graphics and visualisation" "2" 0 0 "false" "false" * 
"course: practical c enterprise software development" "4" 0 0 "false" "false" * 
"artificial intelligence for games: team projects" "4" "projekt programistyczny" 0 "false" "false" * 
"artificial intelligence for games" "6" "projekt programistyczny pracownia programistyczna wykład" 0 "false" "false" * 
"digitizing the real world" "6" 0 0 "false" "false" * 
"it architecture" "6" "ćwiczenia audytoryjne wykład" 0 "false" "false" * 
"it security in practice" "6" 0 0 "false" "false" * 
"programmers' team engineering" "3" "pracownia programistyczna wykład" 0 "false" "false" * 
"synthesis and sound processing" "6" 0 0 "false" "false" * 
"seminar: information safety and security" "3" "- samodzielny wybór i lektura materiałów,- przygotowanie i wygłoszenie prezentacji,- uczestnictwo w dyskusji." 0 "false" "false" * 
"computational photography" "6" "pracownia programistyczna wykład" 0 "false" "false" * 
"computer vision and photogrammetry" "6" "ćwiczenia audytoryjne pracownia programistyczna wykład" 0 "false" "false" * 
"seminar: program certification in coq" "3" 0 0 "false" "false" * 
"seminar: it security" "3" "wykład" 0 "false" "false" * 
"introduction to lambda calculus" "6" "wykład, rozwiązywanie zadań z komentowaniem, indywidualne i grupowe, dyskusja, samodzielne studiowanie literatury" 0 "false" "false" * 
"application security" "5" "pracownia programistyczna wykład" 0 "false" "false" * 
"methods of convergence acceleration" "6" 0 0 "false" "false" * 
"student apprenticeship" "6" 0 0 "false" "false" * 
"category theory" "6" "ćwiczenia audytoryjne wykład" 0 "false" "false" * 
"design i deployment of cloud systems" "6" 0 0 "false" "false" * 
"seminar on networks and clouds" "3" 0 0 "false" "false" * 
"capturing 3d humans project" "4" "wykład interaktywny projekt programistyczny projekt badawczy" 0 "false" "false" * 
"computational photography b" "6" 0 0 "false" "false" * 
"course: practical software development" "5" 0 0 "false" "false" * 
"project: autonomous martian rover" "4" "projekt programistyczny projekt badawczy" 0 "false" "false" * 
"automated verification" "3" "lectures, blackboard problem solving, programming exercises" 0 "false" "false" * 
"games, automata, logics, and formal verification" "6" "ćwiczenia audytoryjne wykład" 0 "false" "false" * 
"scientific writing" "4" 0 0 "false" "false" * 
"design and implementation of advanced php applications" "5" "projekt programistyczny pracownia programistyczna wykład" 0 "false" "false" * 
"project: creating a chatbot" "6" 0 0 "false" "false" * 
"principles of programming languages" "6" "projekt programistyczny pracownia programistyczna wykład" 0 "false" "false" * 
"project: evolutionary construction of 2d wheeled vehicles" "6" "projekt programistyczny pracownia programistyczna projekt badawczy" 0 "false" "false" * 
"internet of things" "6" 0 0 "false" "false" * 
"seminar: probabilistic graphical models" "3" 0 0 "false" "false" * 
"ray tracing project" "4" "projekt programistyczny pracownia programistyczna wykład" 0 "false" "false" * 
"seminar on it security, cloud computing, microservices, and devops" "3" 0 0 "false" "false" * 
"blockchain and its applications" "6" 0 0 "false" "false" * 
"programming in scala" "5" "pracownia programistyczna wykład" 0 "false" "false" * 
"seminar: parameterized algorithms" "3" "wykład interaktywny" 0 "false" "false" * 
"seminar: theory of linear and integer programming" "3" 0 0 "false" "false" * 
"seminarium: pathfinding algorithms" "3" 0 0 "false" "false" * 
"operating systems (advanced)" "6" "ćwiczenia audytoryjne pracownia programistyczna wykład" 0 "false" "false" * 
"semantics of programming languages" "6" "ćwiczenia audytoryjne wykład" 0 "false" "false" * 
"seminar: software engineering" "3" "wykład monograficzny" 0 "false" "false" * 
"seminar: games and game playing" "3" "wykład, prezentacja, dyskusja, indywidualna praca badawcza." 0 "false" "false" * 
"seminar: algebraic effects" "3" 0 0 "false" "false" * 
"course: graph databases" "3" 0 0 "false" "false" * 
"53m1n4r1um dl4 h4k3r0w" "3" 0 0 "false" "false" * 
"seminar: category theory and programming languages" "3" 0 0 "false" "false" * 
"seminarium: silnik unity i wirtualna rzeczywistość" "3" 0 0 "false" "false" * 
"projekt zespołowy: silnik unity3d i wirtualna rzeczywistość lato" "4" "projekt programistyczny pracownia programistyczna prezentacja dyskusja konsultowanie pomysłów na rozwiązywanie zadań programistycznych samodzielna praca przy komputerze grupowy projekt programistyczny" 0 "false" "false" * 
"program interaction: bisimulation and coinduction" "3" "student presentation, discussion, problem solving" 0 "false" "false" * 
"project: digital experience & internet of things" "4" 0 0 "false" "false" * 
"artificial intelligence. seminar" "3" 0 0 "false" "false" * 
"information and coding theory" "3" "wykład, prezentacja, rozwiązywanie zadań z prezentowaniem, dyskusja." 0 "false" "false" * 
"half-semester course: quantum algorithms" "3" "wykład, ćwiczenia" 0 "false" "false" * 
"seminar: selected topics in proof theory" "3" "wykład, prezentacja" 0 "false" "false" * 
"scheduling theory" "6" "lecture, including interactive lecture supervised and unsupervised problem solving, both individual and collective discussions" 0 "false" "false" * 
"workshop on deep learning" "4" 0 0 "false" "false" * 
"seminar: data mining - data classification and clustering" "3" 0 0 "false" "false" * 
"programming project: online judge system" "4" 0 0 "false" "false" * 
"data mining" "6" "wykład, prezentacja, dyskusja, rozwiązywanie zadań z komentowaniem, indywidualne/grupowe rozwiązywanie zadań, indywidualny/zespołowy projekt programistyczny, samodzielna praca przy komputerze" 0 "false" "false" * 
"java course" "5" "wykład, live coding, analiza programów dostarczonych przez wykładowcę, konsultowanie pomysłów na rozwiązania zadań, samodzielna praca programistyczna w domu oraz na zajęciach." 0 "false" "false" * 
"data compression" "6" "wykład, prezentacja, rozwiązywanie zadań z komentowaniem, dyskusja, konsultowanie pomysłów na rozwiązywanie zadań programistycznych, samodzielna praca przy komputerze, indywidualne zadanie programistyczne" 0 "false" "false" * 
"history of philosophy (w)" "3" 0 0 "false" "false" * 
"data science@nokia" "3" 0 0 "false" "false" * 
"logic for computer science" "8" "ćwiczenia audytoryjne wykład" 0 "false" "true" * 
"seminar on systems" "3" 0 0 "false" "false" * 
"designing asp.net web applications" "5" "pracownia programistyczna wykładw razie konieczności nauczania zdalnego - materiały online." 0 "false" "false" * 
"simulation-based artificial intelligence" "6" "- lecture- programming assignments with comments- theoretical+programming team project" 0 "false" "false" * 
"algorithmic fairness, or politically correct computer science" "3" "seminarium" 0 "false" "false" * 
"compiler construction" "6" "projekt programistyczny ćwiczenia audytoryjne wykład" 0 "false" "false" * 
"seminar: tricks in c++" "3" "ćwiczenia audytoryjne projekt eksperymentalno-badawczy" 0 "false" "false" * 
"natural language processing" "6" "ćwiczenia audytoryjne pracownia programistyczna wykład" 0 "false" "false" * 
"introduction to programming in python" "5" "wykład, live coding, samodzielna praca programistyczna w domu oraz na zajęciach, analiza i modyfikacja programów dostarczonych przez prowadzącego" 0 "false" "true" * 
"software foundations in coq" "6" "wykład · samodzielna praca przy komputerze · samodzielne wykonywanie zadań zawodowych · indywidualny/zespołowy projekt programistyczny" 0 "false" "false" * 
"seminar: lambda calculus: evaluation and normalization" "3" "prezentacja studencka, rozwiązywanie ćwiczeń programistycznych" 0 "false" "false" * 
"clone: history of moral reflection" "3" 0 0 "false" "true" * 
"research seminar: formal logic and databases" "3" "wykład - wykład interaktywny - prezentacja - dyskusja - analiza tekstu - rozwiązywanie zadań z komentowaniem" 0 "false" "false" * 
"algorithms and data structures" "9" 0 0 "false" "false" * 
"seminar: communication complexity" "3" 0 0 "false" "false" * 
"cross-cultural psychology" "3" 0 0 "false" "false" * 
"fundamentals of computer graphics" "6" "wykład prezentacja pracownia programistyczna projekt programistyczny samodzielna praca przy komputerze" 0 "false" "false" * 
"cross-cultural psychology" "5" 0 0 "false" "false" * 
"tools and methods in big data processing" "5" "interactive lectures,  individual/collective problem solving,  discussion,  implementation of programming assignments and a programming project" 0 "false" "false" * 
"project: scheduler" "4" "projekt programistyczny     pracownia programistyczna" 0 "false" "false" * 
"seminar on advanced algorithmics" "3" 0 0 "false" "false" * 
"algorithmic game theory" "6" "wykład ćwiczenia audytoryjne przygotowanie i prezentacja wybranych zagadnień przez studentów" 0 "false" "false" * 
"neural networks and deep learning" "6" "programming project programming laboratories research project lecturein case of further university lockdown the course will be offered remotely: lectures will be delivered over a videconference system and recorded assignments will be graded using a combination of automatic grading tools and presentations over conferencing systems the project will feature presentations given to other students the final exam may be held remotely in the form of quizzes and oral evaluations during 1-on-1 calls" 0 "false" "false" * 
"seminar: algorithmics in networks" "3" 0 0 "false" "false" * 
"seminar: theory of automata" "3" 0 0 "false" "false" * 
"seminar: non-classical logics: theory and applications" "3" 0 0 "false" "false" * 
"verification and synthesis of multi-agent systems" "3" "czytanie prac naukowych, prezentowanie prac naukowych, dyskusja" 0 "false" "false" * 
"half-course: data recovery" "3" "wykład pracownia komputerowa, w tym:    samodzielna praca przy komputerze    grupowe rozwiązywanie zadań przy komputerze    prezentacja rozwiązań przy komputerze" 0 "false" "false" * 
"internet technologies" "5" "wykład pracownia programistyczna" 0 "false" "false" * 
"seminar on approximation algorithms and combinatorial optimization" "3" "prezentacja, samodzielna lektura prac naukowych" 0 "false" "false" * 
"course: rust language" "5" "wykład - wykład interaktywny, rozwiązywanie zadań z komentowaniem, samodzielna praca przy komputerze - indywidualne programowanie" 0 "false" "false" * 
"lua course" "5" "wykład pracownia programistyczna projekt programistyczny" 0 "false" "false" * 
"error correction codes" "6" "ćwiczenia audytoryjne wykład" 0 "false" "false" * 
"algorithms on strings" "6" "projekt programistyczny projekt badawczy wykład" 0 "false" "false" * 
"randomized algorithms" "6" "ćwiczenia audytoryjne wykład" 0 "false" "false" * 
"what you need to know for your first job" "2" "wykład" 0 "false" "false" * 
"theory of linear and integer programming" "6" "ćwiczenia audytoryjne wykład" 0 "false" "false" * 
"project: programming programming games" "4" "- grupowy projekt programistyczny- prezentacja- dyskusja, konsultowanie pomysłów" 0 "false" "false" * 
"history of moral reflection" "5" 0 0 "false" "true" * 
"team management" "3" 0 0 "false" "false" * 
"machine learning" "6" "lecture programming assignments written assignments programming projectin case of further university lockdown the course will be offered remotely: lectures will be delivered over a videconference system and recorded assignments will be graded using a combination of automatic grading tools and presentations over conferencing systems the project will feature presentations given to other students the final exam may be held remotely in the form of quizzes and oral evaluations during 1-on-1 calls" 0 "false" "false" * 
"logical methods in computer science" "6" "wykład, rozwiązywanie zadań z komentowaniem, rozwiązywanie zadań programistycznych" 0 "false" "true" * 
"i/o-efficient algorithms and data structures" "6" "lectures, supervised problem solving, individual/collective problem solving, individual project" 0 "false" "false" * 
"seminar on internet of things" "3" 0 0 "false" "false" * 
"seminar: combinatorial theory of finite automata" "3" "prezentacja, czytanie pracy naukowej, dyskusja." 0 "false" "false" * 
"seminar: front-end programming frameworks" "3" "prezentacja seminaryjna dyskusja w trakcie prezentacji" 0 "false" "false" * 
"seminar on blockchain and its applications" "3" "prezentacja, czytanie prac naukowych, dyskusja" 0 "false" "false" * 
"innovative projects by nokia" "4" "zespołowy projekt programistyczny" 0 "false" "false" * 
"deductive verification" "3" "lecture, individual programming tasks, blackboard problem solving" 0 "false" "false" * 
"project: mimiker operating system" "6" "analiza kodu źródłowego, prezentacja, projekt programistyczny" 0 "false" "false" * 
"algorithmic seminar" "3" "prezentacja, samodzielna lektura prac naukowych" 0 "false" "false" * 
"word equations" "6" "ćwiczenia audytoryjne wykład" 0 "false" "false" * 
"practical aspects of computer networks" "5" 0 0 "false" "false" * 
"computational learning theory" "6" "lecture, blackboard problem-solving, homeworks." 0 "false" "false" * 
"text mining" "6" "wykład, prezentacja, rozwiązywanie zadań z komentowaniem, dyskusja, konsultowanie pomysłów na rozwiązywanie zadań programistycznych, samodzielna praca przy komputerze, indywidualny projekt programistyczny" 0 "false" "false" * 
"discrete mathematics" "6" "wykład, prezentacja, dyskusja, rozwiązywanie zadań z komentowaniem." 0 "false" "false" * 
"seminar: information safety and security" "3" "- samodzielny wybór i lektura materiałów- przygotowanie i wygłoszenie prezentacji- uczestnictwo w dyskusji" 0 "false" "false" * 
"digital archeology" "3" "prezentacja" 0 "false" "false" * 
"seminar: artificial intelligence for games" "3" "prezentacja, czytanie prac naukowych, dyskusja." 0 "false" "false" * 
"information systems security" "6" "ćwiczenia audytoryjne pracownia programistyczna wykład" 0 "false" "false" * 
"fine-grained complexity" "6" "wykład, rozwiązywanie zadań z komentowaniem, indywidualne/grupowe rozwiązywanie zadań/problemów, indywidualny/zespołowy projekt programistyczny" 0 "false" "false" * 
"seminar: reinforcement learning for games" "3" "prezentacja, czytanie pracy naukowej, dyskusja." 0 "false" "false" * 
"programming languages" "7" "wykład, dyskusja, rozwiązywanie zadań z komentowaniem, indywidualne/grupowe rozwiązywanie zadań, indywidualny/zespołowy projekt programistyczny" 0 "false" "false" * 
"discrete mathematics" "9" "wykład, wykład interaktywny, rozwiązywanie zadań z komentowaniem, indywidualne/grupowe rozwiązywanie zadań/problemów" 0 "false" "false" * 
"unix kernel design" "6" "wykład, rozwiązywanie zadań z komentowaniem, konsultowanie pomysłów na rozwiązywanie zadań programistycznych, indywidualna analiza kodu źródłowego, samodzielna praca przy komputerze, indywidualny projekt programistyczny." 0 "false" "false" * 
"embedded systems" "6" "wykład, rozwiązywanie zadań z komentowaniem, samodzielna praca przy komputerze, prototypowanie układów elektronicznych" 0 "false" "false" * 
"eu economic policy" "5" 0 0 "false" "false" * 
"clone: eu economic policy" "3" 0 0 "false" "false" * 
"design and implementation of systems in the cloud" "6" "- wykład, wykład interaktywny- indywidualne rozwiązywanie zadań- grupowe omawianie rozwiązań- samodzielna praca przy komputerze- grupowe warsztaty programistyczne- grupowe dzielenie się problemami i rozwiązaniami" 0 "false" "false" * 
"parallel computing with cuda (q2)" "3" "wykład,prezentacja,dyskusja,konsultowanie pomysłów rozwiązań zadań programistycznych,samodzielna praca przy komputerze,indywidualny projekt programistyczny" 0 "false" "false" * 
"term logic" "3" "wykład" 0 "false" "false" * 
"project: demoscene production" "4" 0 0 "false" "false" * 
"intelligence services in state security system and international relations" "3" "wykład" 0 "false" "false" * 
"decision problems in logic" "6" "wykład indywidualne/grupowe rozwiązywanie zadań rozwiązywanie zadań z komentowaniem dyskusja" 0 "false" "false" * 
"software engineering" "6" "projekt programistyczny ćwiczenia audytoryjne wykład monograficzny" 0 "false" "false" * 
"probability theory for computer scientists" "6" "wykład rozwiązywanie zadań z komentowaniem indywidualne rozwiązywanie zadań" 0 "false" "false" * 
"course: modeling 3d and visualization in sketchup" "5" "wykład, pracownia komputerowa" 0 "false" "false" * 
"introduction to computer science" "6" "wykład, wykład interaktywny, rozwiązywanie zadań z komentowaniem, indywidualne/grupowe rozwiązywanie zadań/problemów, analiza algorytmu (poprawność, złożoność)" 0 "false" "true" * 
"c minicourse" "2" "samodzielna praca przy komputerze - indywidualne programowanie" 0 "false" "true" * 
"logic for computer science (advanced)" "8" "wykład, ćwiczenia tablicowe." 0 "false" "true" * 
"computational complexity in practice" "6" "wykład, rozwiązywanie zadań w grupie, zadania domowe" 0 "false" "false" * 
"photorealistic computer graphics" "6" "lecture programming lab   programming project tutorial individual computer work" 0 "false" "false" * 
"artificial intelligence for games" "6" "- lecture- programming assignments with comments- programming project" 0 "false" "false" * 
"algorithms for big data" "6" "lectures, supervised problem solving, individual/collective problem solving" 0 "false" "false" * 
"seminar: numerical and computer graphics algorithms" "3" "projekt programistyczny projekt badawczy" 0 "false" "false" * 
"distributed algorithms" "6" "wykład - wykład interaktywny - ćwiczenia audytoryjne" 0 "false" "false" * 
"olympic algorithms" "5" "wykład prezentacja dyskusja indywidualne rozwiązywanie zadań indywidualny projekt programistyczny" 0 "false" "false" * 
"workshops: linux device drivers programming" "4" "wykład, samodzielne rozwiązywanie zadań programistycznych, czytanie i analiza kodu jądra systemu linux." 0 "false" "false" * 
"fpga programming" "6" "wykład, samodzielna praca przy komputerze, indywidualny/zespołowy projekt programistyczny" 0 "false" "false" * 
"principles of program analysis" "6" "lecture, individual programming tasks, blackboard problem solving" 0 "false" "false" * 
"computing for computer scientists" "3" "wykład interaktywny prezentacja samodzielna praca przy komputerze pracownia programistyczna dyskusja" 0 "false" "true" * 
"advanced data structures" "6" "wykład, rozwiązywanie zadań z komentowaniem, indywidualne/grupowe rozwiązywanie zadań/problemów, indywidualny/zespołowy projekt programistyczny" 0 "false" "false" * 
"proseminar: blockchain beyond buzzwords" "3" "praca z materiałami źródłowymi, przygotowanie i wygłoszenie wystąpienia, konsultacje z prowadzącym, wystąpienia innych osób uczestniczących w seminarium, dyskusja" 0 "false" "false" * 
"combinatorics" "6" "wykład, wykład interaktywny, rozwiązywanie zadań z komentowaniem, indywidualne/grupowe rozwiązywanie zadań" 0 "false" "false" * 
"selected aspects of practical software development" "6" "projekt programistyczny pracownia programistyczna wykładw razie konieczności nauczania zdalnego - materiały online." 0 "false" "false" * 
"human-computer interaction or computer-human interaction (hci or chi)" "6" "wykład bogato ilustrowany materiałami audiowizualnymi   ćwiczenia audytoryjne (ok. 300 zadań, pytania, omówienia, dyskusje, spory) pracownia programistyczna (4 projekty rozwojowe realizowane w grupach 2-, 3-osobowych) komplet materiałów wykładowych i innych na stronie wykładu w sieci" 0 "false" "false" * 
"seminar: advanced topics in semantics of programming languages" "3" 0 0 "false" "false" * 
"distributed systems" "6" "wykład wsparty materiałami audiowizualnymi ćwiczenia audytoryjne (rozwiązywanie zadań, analiza problemów, sprawy dyskusyjne i wątpliwe)" 0 "false" "false" * 
"algorithms for planar graphs" "6" 0 0 "false" "false" * 
"theory of argumentation and elements of logical semiotics" "3" "wykład" 0 "false" "false" * 
"project: artifical intelligence for regular boardgames" "4" "projekt programistyczny, dyskusja." 0 "false" "false" * 
"decidability and complexity of logics motivated by computer science" "3" "samodzielne przygotowanie i wygłoszenie prezentacji. dyskusja na temat prezentacji własnej i innych uczestników." 0 "false" "false" * 
"automata theory" "6" "wykład, rozwiązywanie zadań" 0 "false" "false" * 
"selected aspects of practical software development" "5" "projekt programistyczny pracownia programistyczna wykładw razie konieczności nauczania zdalnego - materiały online." 0 "false" "false" * 
"seminar: advanced algorithmics" "3" 0 0 "false" "false" * 
"numerical analysis (b)" "8" "wykład  wykład interaktywny  ćwiczenia z systemem deklaracji (rozwiązywanie zadań teoretycznych i typu _włącz komputer_ z komentowaniem, indywidualne/grupowe rozwiązywanie zadań/problemów, analiza algorytmów pod kątem ich poprawności, złożoności i aspektów numerycznych)" 0 "false" "false" * 
"competition protection in the market economy" "3" "wykład" 0 "false" "false" * 
"half-course: hacking for everyone" "3" "prezentacja, praca własna na dedykowanej platformie, dyskusja i wymiana doświadczeń." 0 "false" "false" * 
"scheduling theory" "6" "a lecture with blackboard and/or slide presentation an exercise session with collaborative supervised problem solving individual student work on homework sheets discussions" 0 "false" "false" * 
"computer systems" "6" "wykład ćwiczenia audytoryjne pracownia programistyczna samodzielna praca przy komputerze" 0 "false" "false" * 
"operating systems" "8" "wykład, grupowa analiza kodu źródłowego, rozwiązywanie zadań z komentowaniem, indywidualne rozwiązywanie zadań, konsultowanie pomysłów na rozwiązywanie zadań programistycznych, samodzielna praca przy komputerze, indywidualny projekt programistyczny." 0 "false" "false" * 
"introduction to linear optimization" "6" "lectures with blackboard and/or slide presentation exercise sessions with collaborative supervised problem solving  individual student work on homework sheets simple programming tasks (usage of lp solvers)" 0 "false" "false" * 
"course: game development in unity3d" "5" "wykład pracownia programistyczna projekt programistyczny" 0 "false" "false" * 
"seminar: competitive artificial intelligence" "3" "prezentacja, czytanie prac naukowych / dokumentacji zawodów, dyskusja." 0 "false" "false" * 
"seminar: probability and algorithms" "3" 0 0 "false" "false" * 
"manipulation and abuses on the financial market" "5" "wykład, ćwiczenia" 0 "false" "false" * 
"seminar on cryptography and computer security" "3" "wykład, prezentacja, dyskusja, samodzielna praca przy komputerze, studium przypadku" 0 "false" "false" * 
"armies and wars: hybrid and conventional" "5" "wykład, dyskusja" 0 "false" "false" * 
"introduction to philosophical logic" "3" "wykład" 0 "false" "false" * 
"soft power and its tools in international" "3" "wykład" 0 "false" "false" * 
"project: martian rover analog construction and development" "4" "indywidualny/zespołowy projekt programistyczny" 0 "false" "false" * 
"introduction to programming in c" "5" "wykład - wykład interaktywny - samodzielna praca przy komputerze - indywidualne programowanie - indywidualny projekt programistyczny" 0 "false" "true" * 
"advanced techniques in c++ and stl" "5" "wykład, analiza przykładowych programów, samodzielna praca programistyczna w domu oraz na zajęciach." 0 "false" "false" * 
"advanced python programming" "5" "wykład live coding indywidualna implementacja zadań projekt programistyczny" 0 "false" "false" * 
"databases 2" "6" "wykładprojekt" 0 "false" "false" * 
"modeling financial derivatives using the f functional language" "2" "wykład, pracownia" 0 "false" "false" * 
"calculus" "10" "wykład, rozwiązywanie zadań z komentowaniem, dyskusja" 0 "false" "true" * 
"clone: seminar on systems" "3" 0 0 "false" "false" * 
"ideas of post-humanism: the artificial intelligence project and the problem of possible minds" "5" "wykład, dyskusja, praca semestralna" 0 "false" "false" * 
"seminar: finite and algorithmic model theory" "6" "wykład - wykład interaktywny - prezentacja - dyskusja - analiza tekstu - rozwiązywanie zadań z komentowaniem" 0 "false" "false" * 
"seminar: fine-grained complexity" "3" "wykład, rozwiązywanie zadań z komentowaniem, indywidualne/grupowe rozwiązywanie zadań/problemów, indywidualny/zespołowy projekt programistyczny" 0 "false" "false" * 
"project: machine learning for recommender systems" "4" "zespołowy projekt programistyczny z elementami studiów literatury i prac badawczych" 0 "false" "false" * 
"course: technical writing (q2)" "3" "wykład, analiza tekstu, ćwiczenia warsztatowe, krótka praca zaliczeniowa" 0 "false" "false" * 
"freebsd device drivers" "5" "wykład. ćwiczenia: czytanie kodu jądra _freebsd_, analiza zachowania jądra przy użyciu _dtrace_, konsultacje do pracowni w zakresie projektowania. pracownia: implementacja sterowników, szukanie błędów, rozszerzanie `gdb`." 0 "false" "false" * 
"modern web development" "5" "wykład, pracownia, implementacja projektu w grupach" 0 "false" "false" * 
"seminar: advances in computer systems" "3" "wykład, prezentacja" 0 "false" "false" * 
"linux device drivers" "6" "wykład, rozwiązywanie zadań z komentowaniem, konsultowanie pomysłów na rozwiązywanie zadań programistycznych, indywidualna analiza kodu źródłowego, samodzielna praca programistyczna, indywidualny projekt programistyczny." 0 "false" "false" * 
"an introduction to finite and classical model theory" "6" "wykład indywidualne/grupowe rozwiązywanie zadań rozwiązywanie zadań z komentowaniem dyskusja" 0 "false" "false" * 
"introduction to algorithms in telecommunication" "3" "1. wykład z użyciem środków multimedialnych2. ćwiczenia praktyczne z dyskusją możliwych rozwiązań oraz praktycznym rozwiązaniemproblemów.3. studium przypadków na bazie podanych przykładów4. konsultacje bezpośrednio po wykładzie5. praca własna - samodzielne studia oraz przygotowanie do wykładu6. praca własna - samodzielne studia oraz przygotowanie do ćwiczeń7. praca własna - samodzielne studia oraz przygotowanie do laboratorium" 0 "false" "false" * 
"algorithmic causality with applications" "2" "wykład, rozwiązywanie zadań" 0 "false" "false" * 
"seminar: modern data mining" "3" "samodzielne czytanie literatury, prezentacja, dyskusja" 0 "false" "false" * 
"machine learning" "7" "lecture programming assignments written assignments programming project" 0 "false" "false" * 
"proseminar: data visualisation" "3" "samodzielnie studiowanie książki, samodzielne poszukiwanie innych źródeł, prezentowanie przez studentów w czasie zajęć, samodzielna implementacja." 0 "false" "false" * 
"information and coding theory" "6" "ćwiczenia audytoryjne wykład" 0 "false" "false" * 
"introduction to cloud computing" "2" "work with technological documentation and teaching materials in the form of videos, remote labs in the form of exercises on cloud platforms, including challenge exercises.  consultation of progress of own work and project ideas. group discussions. individual design of a technology solution running in the cloud (e.g., application, cd/ci solution, data science project)." 0 "false" "false" * 
"online algorithms" "6" "wykład rozwiązywanie zadań z komentowaniem indywidualne/grupowe rozwiązywanie zadań" 0 "false" "false" * 
"history of philosophy" "5" "wykład, ćwiczenia" 0 "false" "false" * 
"functional programming" "6" "wykład pracownia programistyczna" 0 "false" "false" * 
"numerical analysis (m)" "12" "wykład, wykład interaktywny, prezentacja, live coding, ćwiczenia z systemem deklaracji (rozwiązywanie zadań teoretycznych i typu włącz komputer z komentowaniem), indywidualne/grupowe rozwiązywanie zadań/problemów, analiza algorytmów pod kątem ich poprawności, złożoności i efektywności." 0 "false" "false" * 
"efficient implementation of algorithms" "4" "indywidualne rozwiązywanie zadań, prezentacja pomysłów i rozwiązań" 0 "false" "false" * 
"front-end apps development" "5" "wykład interaktywny, live coding, dyskusja, indywidualne rozwiązywanie zadań" 0 "false" "false" * 
"computational complexity" "6" "wykład, rozwiązywanie zadań z komentowaniem, indywidualne i zespołowe rozwiązywanie zadań." 0 "false" "false" * 
#
#
# TOPICS
#
#

#
# COURSE INFO
#

topic: ~course_info (~course_name)

t: $finished_classes = ^jsoncreate(PERMANENT array)
Hello, talk to me!

t: Do you want to learn about the offer of CS institute? ^keep()
	a: ([~yes yes]) Which of the subjects are you interested in? Maybe $cur=^pick(~course_name) $cur?
		b: (~ects) ^reuse( CHECKECTS )
		b: ([when ~term]) ^reuse( CHECKTERM )
		b: (~classtype) ^reuse ( CHECKTYPE )
		b: (offer) ^reuse( CHECKOFFER )
		b: (~finish) ^reuse( COURSEFINISHED )

u: COMPULSORYCOURSES (compulsory !~course_info)
	The compulsory courses are: AN, MD, LdI...

u: COURSEFINISHED (~finish {_~course_name}) ^repeat() ^keep()
    $temp = ^join( $cur '_0 )
    if ($cur != $temp) { $cur = '_0' }
    ^jsonarrayinsert( UNIQUE $finished_classes $cur )
    $_formatted_classes = ^jsonwrite( $finished_classes )
    Okay, so you've already finished this course. Your finished classes are: $_formatted_classes.

u: CHECKECTS ([many ~number] ~ects <<get>> {_~course_name}) ^repeat() ^keep()
    $temp = ^join( $cur '_0 )
    if ($cur != $temp) { $cur = '_0' }
  	if (^query(direct_sv $cur ects ?)) { You can get @0object ECTS points for the @0subject. }
  	else {I have no idea about $cur}

u: CHECKTERM ([when ~term] < * {_~course_name}) ^repeat() ^keep()
    $temp = ^join( $cur '_0 )
    if ($cur != $temp) { $cur = '_0' }
  	if (^query(direct_sv $cur term ?)) { The course @0subject is offered in the @0object term. }
  	else {I have no idea about $cur}

  	a: ([now "this year" "this time"]) ^reuse ( CHECKOFFER )

u: CHECKTYPE (~classtype < * {_~course_name}) ^repeat() ^keep()
    $temp = ^join( $cur '_0 )
    if ($cur != $temp) { $cur = '_0' }
  	if (^query(direct_sv $cur classtype ?)) { The course @0subject is offered in the @0object form. }
  	else {I have no idea about $cur}

u: CHECKOFFER (offer < * {_~course_name}) ^repeat() ^keep()
    $temp = ^join( $cur '_0 )
    if ($cur != $temp) { $cur = '_0' }
	if (^query(direct_sv $cur offer ?))  {
		if (@0object == "true") { The course @0subject is offered in the current cycle. }
		else { The course @0subject is not offered in the current cycle. Please try next year. } }
  	else {I have no idea about $cur}

  	a: (~term) ^reuse ( CHECKTERM )

u: REQUIREMENTS ([require requirement] < * {_~course_info}) ^repeat() ^keep()
    $temp = ^join( $cur '_0 )
    if ($cur != $temp) { $cur = '_0' }
	I don't know the requirements for $cur.

u: CHECKFIRSTYEAR (first < * appropriate < * {_~course_name}) ^repeat() ^keep()
    $temp = ^join( $cur '_0 )
    if ($cur != $temp) { $cur = '_0' }
	if (^query(direct_sv $cur firstyear ?))  {
		if (@0object == "true") { The course @0subject is appropriate for the first year students. }
		else { The course @0subject is not appropriate for the first year students. Please try next year. } }
  	else {I have no idea about $cur}

#! How many ects I have now?
?: ECTSCOUNTER ([many much] ~ects * I ~have *) ^repeat() ^keep()
    $_counter = 0
    $_points = 0
    $_len = ^length($finished_classes)
    ^loop($_len)
    {
        if (^query(direct_sv $finished_classes[$_counter] ects ?)) {$_points += @0object}
        $_counter += 1
    }
    $_formatted_classes = ^jsonwrite( $finished_classes )
    You have $_points ECTS points, your finished classes are: $_formatted_classes.


u: ([about happen] * "project: coreforge") ^repeat() ^keep()
    {"Celem projektu jest praktyczna nauka architektur komputerów poprzez ich implementację w formie umożliwiającej syntezę na układy FPGA. "}
    a: (!~my_negation * more)
        {"W ramach projektu powstaje rdzeń o nazwie Coreblocks, implementujący zestaw instrukcji RISC-Vhttps:  github.com riscv riscv-isa-manual releases download Ratified-IMAFDQC riscv-spec-20191213.pdf RV32I w mikroarchitekturze out-of-order. Implementacja będzie miała w założeniu modularny charakter generatora rdzeni, umożliwiający dodawanie, rekonfigurację i wymianę elementów składowych rdzenia bez głębokich zmian w kodzie.  Dalszymi celami projektu są:   Integracja z generatorem układów SoC System on Chip LiteXhttps:  github.com enjoy-digital litex, co umożliwi użycie rdzenia w charakterze mikrokontrolera.  Budowa mechanizmów automatycznego testowania, umożliwiających sprawdzanie poprawności oraz parametrów wydajnościowych np. maksymalna częstotliwość taktowania, liczba użytych zasobów FPGA w miarę rozwoju projektu.  Implementacja rozszerzeń architektury na przykład: instrukcje mnożące i dzielące, instrukcje atomowe, operacje zmiennoprzecinkowe, instrukcje CSR.  Implementacja instrukcji uprzywilejowanychhttps:  github.com riscv riscv-isa-manual releases download Ratified-IMFDQC-and-Priv-v1.11 riscv-privileged-20190608.pdf oraz port OpenSBIhttps:  github.com riscv-software-src opensbi.  Implementacja i eksperymenty z różnymi rodzajami predyktorów skoków, pamięci cache, itp. "}



u: ([about happen] * "financial services") ^repeat() ^keep()
    {"Przedmiot prowadzony przez dr hab., prof. UWr  Edytę Rutkowską z Instytutu Nauk Ekonomicznych. "}
    a: (!~my_negation * more)
        {"Cele przedmiotu 1. Przedstawienie kompleksowej wiedzy o istocie, specyfice i cechach charakterystycznych usług finansowych oraz instytucji je świadczących instytucji finansowych. 2. Zapoznanie studenta z zagrożeniami i ryzykiem związanym z usługami finansowymi. 3. Zapoznanie z całokształtem regulacji prawnych dotyczących usług finansowych.  Treści programowe Pojęcie i specyfika usług finansowych usługi bankowe, kredytowe, płatnicze, ubezpieczeniowe, inwestycyjne; Klient usług finansowych klient detaliczny, klient profesjonalny, konsument Źródła zagrożeń i ryzyka dla klientów usług finansowych. Regulacja usług finansowych w UE. "}



u: ([about happen] * "course: game development in unreal engine 5") ^repeat() ^keep()
    {"W przeciwieństwie do kursu Unity nie będę omawiał silnika okno po oknie i właściwości po właściwości, zamiast tego pokażę jak napisać pięć przykładowych gier, od początku do końca używając silnika Unreal 5. "}
    a: (!~my_negation * more)
        {"Gry które pojawią się na wykładzie: - rozbijanie ściany z beczek fizyka, podstawy, blue printy - platformówka z przeszkodami skrypty c++, animacje, postacie humanoidalne - lochy programowanie obiektowe, kolizje, input system - czołgi multi player, game framework - TPS third person shooter, animacje, AI, GUI  Dodatkowo omówienie systemu technologii oświetlenia globalnego Lumen oraz systemu Nanite umożliwiającego budowę scen 3D o bardzo dużym poziomie szczegółowości.  Kurs nie jest od podstaw, co oznacza, że wymaga wcześniejszej znajomości C++ i podstaw programowania. "}



u: ([about happen] * "combinatorial optimization under uncertainty") ^repeat() ^keep()
    {"Rozważmy portal randkowy nie tinder, w którym są 44 tysiące kobiet i 44 tysięce mężczyzn. Portal zarabia na miesięcznej subskrypcji, a jego zadaniem jest proponowanie użytkownikom randek. Portal używając danych użytkowników np. z ankiet na temat cech charakteru, ulubionych filmów i muzyki itd jest w stanie całkiem nieźle wyestymować dla każdej pary użytkowników prawdopodobieństwo, że dana para się sobie wzajemnie spodoba, o ile tylko pójdzie na randkę.  Pytanie jednak jest następujące: w jaki sposób portal powinien proponować randki, aby zmaksymalizować średnią lub też totalną w ciągu roku liczbę szczęśliwie skojarzonych par? Nie możemy przecież wysłać żadnego użytkownika na 100 nieudanych randek, bo do tego czasu zrezygnuje z subskrypcji. Musimy więc robić to ostrożnie. Co więcej dana para, jeśli tylko się sobie spodoba, to natychmiast opuszcza portal a przynajmniej takie jest sensowne założenie. "}
    a: (!~my_negation * more)
        {"Gdyby nie było tutaj żadnej niepewności i a priori byśmy wiedzieli, które pary się sobie spodobają, a które nie, to naszym zadaniem byłoby obliczenie po prostu maksymalnego skojarzenia w grafie, które możemy zrobić całkiem sprawnie w czasie wielomianowym. Ale gdy uwzględnimy stochastyczną naturę, czyli że randki mogą się udać albo się nie udać, to problem --- mimo, że cały czas dotyczy skojarzeń w grafach --- staje się nagle zgoła inny. Co więcej, teraz nawet nie tyle, co nie znamy wielomianowego algorytmu, ale nawet nie wiemy, czy ten problem należy do klasy NP. Mimo wszystko na wykładzie zobaczymy 2-aproksymacyjny algorytm dla tego problemu.  Istotą tego przydługiego wstępu była ilustracja faktu, że bardzo często prawdziwie praktyczne problemy mają pewien aspekt niepewności w sobie, a ten z kolei wymusza zupełnie inne podejście do problemu niż w przypadku jego deterministycznego odpowiednika.  Na wykładzie przedstawię kilka klasycznych modeli niepewności: stochastyczne próbkowanie przykład portalu randkowego, problem sekretarki https:  en.wikipedia.org wiki Secretary problem, nierówność Proroka https:  en.wikipedia.org wiki Prophet inequality i algorytmy online oraz jak w tych modelach rozważać struktury kombinatoryczne takie jak skojarzenia lub matroidy na wykładzie wytłumaczę co to.  Przedmiot będzie mocno matematyczny, a nawet mocno probabilistyczny, jednak nie będziemy potrzebować żadnego zaawansowanego aparatu --- znajomość warunkowej wartości oczekiwanej w zupełności wystarczy. "}



u: ([about happen] * "tutoring") ^repeat() ^keep()
    {"Celem tutoringu jest czuwanie nad właściwą organizacją pracy przez  studenta, śledzenie jego postępów i pomoc w sytuacjach trudnych. "}
    a: (!~my_negation * more)
        {"Zajęcia w ramach przedmiotu nie mają wyznaczonych cotygodniowych terminów, lecz odbywają się kilkakrotnie w czasie semestru w terminach wyznaczonych przez prowadzących, w ramach spotkań indywidualnych lub grupowych. Dodatkowo prowadzący są do dyspozycji studentów na bieżąco, gdy pojawiają się problemy związane z tokiem studiów. "}



u: ([about happen] * "combinatorial optimization") ^repeat() ^keep()
    {"Program: "}
    a: (!~my_negation * more)
        {"1.Matchingi.  Matchingi skojarzenia oraz ich uogólnienia pojawiają się w bardzo wielu kontekstach, bardziej i mniej oczywistych, m.in. przy:     różnego typu przydziałach: zadań pracownikom lub maszynom, studentów szkołom itp.     obliczaniu podgrafów, w których każdy wierzchołek ma mieć stopień z podanego przedziału. Za pomocą skojarzeń oblicza się np. pokrycia cyklowe podgrafy, w kt. każdy wierzchołek ma mieć stopień 2 o najmniejszej największej wadze. Takie pokrycia przydają się z kolei w znajdowaniu optymalnych dróg komiwojażera,     aukcjach. "}



u: ([about happen] * "digital image processing") ^repeat() ^keep()
    {"Przedmiot może się odbyć w języku polskim lub angielskim o czym możemy zadecydować na pierwszych zajęciach    Language can be switched to English or Polish, we can decide about it on the first lecture. "}
    a: (!~my_negation * more)
        {"Advances in digital photography have made great interest in Digital Image Processing DIP area and created new research field of Computational Photography CP. In this lecture we will present both classical DIP methods which are the main tools in image editors as well as the new methods from the CP.  Topics:    1. Color Science and High Dynamic Range Imaging   2. Per pixel operations, histograms, combining images   3. Geometrical operations eg. distortion correction   4. Linear filtering and Fourier transforms   7. Edge detection "}



u: ([about happen] * "algebra") ^repeat() ^keep()
    {"Program: "}
    a: (!~my_negation * more)
        {"1. Przestrzenie liniowe. Zbiory liniowo niezależne. Bazy. 2. Macierze i przekształcenia liniowe. Rząd macierzy. Algorytm eliminacji Gaussa. 3. Wyznaczniki. Własności wyznaczników. Rozwinięcie Laplace’a.  4. Równania liniowe. Zbiór rozwiązań układu równań liniowych. Wzory Cramera. 5. Wartości i wektory własne. Podprzestrzenie niezmiennicze. Wielomian charakterystyczny. 6. Iloczyn skalarny. Rzut ortogonalny. Izometrie i przekształcenia ortogonalne. 7. Elementy geometrii. 8. Grupy - podstawowe pojęcia: rząd grupy, rząd elementu grupy, podgrupa. 9. Grupy permutacji. Rozkład permutacji na cykle. Znak permutacji.  10. Działanie grupy na zbiorze. "}



u: ([about happen] * "deep learning (project)") ^repeat() ^keep()
    {"Celem projektu jest doskonalenie umiejętności programowania metod związanych z  głębokim uczeniem ang.  deep learning  . "}
    a: (!~my_negation * more)
        {"W ramach projektu omówione zostaną zastosowania głębokich sieci neuronowych do przetwarzania tekstu i obrazów.  W programie projektu przewiduje się programowanie sieci związanych z klasyfikacją, detekcją obiektów oraz segmentacją obrazów za pomocą takich sieci neuronowych jak:    głębokie sieci splotowe deep convolutional neural networks, CNN    region-based CNN RCNN    Mask-RCNN    Fast-RCNN, Faster-RCNN "}



u: ([about happen] * "artificial intelligence") ^repeat() ^keep()
    {"Sztuczna inteligencja jest dziedziną budzącą emocje. Chyba każdy programista  chciałby, żeby jego programy przynajmniej niektóre działały inteligentnie, "}
    a: (!~my_negation * more)
        {"czyli tak jak ludzie, tylko szybciej i bardziej bezbłędnie.  Z drugiej strony budzi też obawy: czy ONE komputery będą myśleć lepiej niż MY ludzie? Czy komputer lepszy od człowieka swego twórcy, będzie mógł tworzyć jeszcze bardziej inteligentne komputery?  Niniejszy wykład ma na celu przedstawienie najistotniejszych wątków sztucznej inteligencji, czyli dziedziny, która próbuje modelować zachowanie inteligentne i tworzyć systemy, które to zachowanie przejawiają. "}



u: ([about happen] * "from mordor to matrix. the fantastic political philosophy") ^repeat() ^keep()
    {"Przedmiot prowadzony przez dr. hab Bartosza Bolechówa z Instytutu Politologii. "}
    a: (!~my_negation * more)
        {"Zapoznanie studentów z problematyką będącą przedmiotem zainteresowania filozofii oraz antropologii polityki natura polityki, wspólnoty politycznej i człowieka jako „zwierzęcia politycznego”; uniwersalne mechanizmy i aporie władzy, koncepcje strukturalnej organizacji społeczeństwa; pochodzenie, zmienność, ewolucja- progres, regres, cykliczność - i postulowana wartość moralna ustrojów oraz instytucji politycznych; światopoglądy, ideologie, modele polityczne i ich zderzenia z praxis; legitymizacja; dyskurs polityczny; konflikt społeczny; rewolucja i wojna; mechanizmy fanatyzmu, ekstremizmu i radykalizmu, utopia jako fikcja spekulatywna; dystopia jako krytyka polityczna, sprzężenie zwrotne między nieuświadomioną i uświadomioną fikcją a praktyką polityczną poprzez "}



u: ([about happen] * "professional practice") ^repeat() ^keep()
    {"Zaliczenie praktyki zawodowej jest wymagane do ukończenia studiów pierwszego stopnia. Zaliczenie praktyki zawodowej jest wymagane do ukończenia studiów pierwszego stopnia. "}
    a: (!~my_negation * more)
        {" "}



u: ([about happen] * "mentoring for data science") ^repeat() ^keep()
    {"A series of meetings with a teacher designated as mentor for Data Science students. Students are welcome to make individual appointments with the mentor whenever they need advice or help in all academic matters. A series of meetings with a teacher designated as mentor for Data Science students. Students are welcome to make individual appointments with the mentor whenever they need advice or help in all academic matters. "}
    a: (!~my_negation * more)
        {" "}



u: ([about happen] * "sport programming in practice") ^repeat() ^keep()
    {"Na zajęciach studenci będą rozwiązywali zadania z zespołowych zawodów    programistycznych. Każde spotkanie będzie miało formę pięciogodzinnego "}
    a: (!~my_negation * more)
        {"treningu przygotowanego na podstawie jednego z konkursów organizowanych   w formule ICPC. Głównym celem zajęć jest przygotowanie drużyn, które   reprezentują Uniwersytet Wrocławski w Akademickich Mistrzostwach Polski   w Programowaniu Zespołowym, a później w zawodach ICPC. Ta drużynowa   formuła nie oznacza jednak, że warunkiem uczestniczenia w zajęciach jest   posiadanie stałej drużyny, gdyż celem naszych spotkań będzie także   sprawdzenie w praktyce różnych strategii i składów zespołów. "}



u: ([about happen] * "clone: financial services") ^repeat() ^keep()
    {"Przedmiot prowadzony przez dr hab., prof. UWr  Edytę Rutkowską z Instytutu Nauk Ekonomicznych. "}
    a: (!~my_negation * more)
        {"Cele przedmiotu 1. Przedstawienie kompleksowej wiedzy o istocie, specyfice i cechach charakterystycznych usług finansowych oraz instytucji je świadczących instytucji finansowych. 2. Zapoznanie studenta z zagrożeniami i ryzykiem związanym z usługami finansowymi. 3. Zapoznanie z całokształtem regulacji prawnych dotyczących usług finansowych.  Treści programowe Pojęcie i specyfika usług finansowych usługi bankowe, kredytowe, płatnicze, ubezpieczeniowe, inwestycyjne; Klient usług finansowych klient detaliczny, klient profesjonalny, konsument Źródła zagrożeń i ryzyka dla klientów usług finansowych. Regulacja usług finansowych w UE. "}



u: ([about happen] * "tutoring isim") ^repeat() ^keep()
    {"Celem tutoringu jest czuwanie nad właściwą organizacją pracy przez  studenta, śledzenie jego postępów i pomoc w sytuacjach trudnych. "}
    a: (!~my_negation * more)
        {"Zajęcia w ramach przedmiotu nie mają wyznaczonych cotygodniowych terminów, lecz odbywają się kilkakrotnie w czasie semestru w terminach wyznaczonych przez prowadzących, w ramach spotkań indywidualnych lub grupowych. Dodatkowo prowadzący są do dyspozycji studentów na bieżąco, gdy pojawiają się problemy związane z tokiem studiów. "}



u: ([about happen] * "seminar: analysis of algorithmic problems") ^repeat() ^keep()
    {"Uwaga: seminarium planujemy prowadzić pod taką samą nazwą zarówno w semestrze zimowym jak i letnim. Można je będzie zaliczyć więcej niż raz. "}
    a: (!~my_negation * more)
        {"Zajęcia będą poświęcone analizie trudnych zadań z zawodów programistycznych typu ICPC, TopCoder, czy Google Code Jam.  Głównym celem spotkań będzie zarówno zapoznanie studentów z ogólnymi zaawansowanymi technikami algorytmicznymi, które przydają się w takich problemach, a nie są przedstawiane na wykładzie z Algorytmów i Struktur Danych, jak i regularne omawianie ciekawszych zadań, które pojawią się na niedawno przeprowadzonych konkursach. Podczas dyskusji zostaną poruszone także bardziej praktyczne kwestie sprawnej implementacji skomplikowanych rozwiązań. "}



u: ([about happen] * "geometric optimization") ^repeat() ^keep()
    {"The course will be given by Sandip Banerjee.  It will cover the following topics: "}
    a: (!~my_negation * more)
        {"1 Randomized Incremental Construction RIC 2-3 lectures  Random sampling in computational geometry  Convex hull, Dynamic maintenance using RIC  RIC of Delaunay and Voronoi diagrams.  2 Epsilon-approximation and Epsilon-nets 2 lectures  Basic definitions, applications, range space and VC-dimension   Discrepancy "}



u: ([about happen] * "diploma project") ^repeat() ^keep()
    {"W ramach przedmiotu studenci przygotowują prace dyplomową wymaganą do zakończenie studiów lic inż pod kierunkiem dr. inż Leszka Grocholskiego. Tematy proc dyplomowych wymagają zaakceptowania przez Komisję ds. Prac Dyplomowych. W ramach przedmiotu studenci przygotowują prace dyplomową wymaganą do zakończenie studiów lic inż pod kierunkiem dr. inż Leszka Grocholskiego. Tematy proc dyplomowych wymagają zaakceptowania przez Komisję ds. Prac Dyplomowych. "}
    a: (!~my_negation * more)
        {" "}



u: ([about happen] * "object-oriented software development") ^repeat() ^keep()
    {"Wykład skierowany jest do przyszłych architektów systemów informatycznych oraz  do wszystkich programistów zainteresowanych udoskonaleniem swojego warsztatu. "}
    a: (!~my_negation * more)
        {"Celem wykładu jest zapoznanie studentów z kanonem współczesnych narzędzi w zakresie projektowania obiektowego oprogramowania.  Materiał wykładu obejmuje:     podstawy języka UML w zakresie wymaganym przez projekty analityczne i techniczne    zasady SOLID i GRASP    przegląd katalogu wzorców projektowych GoF m.in. Observer, Builder, Bridge, State, Strategy, Facade, Adapter, Mediator, itd.    przegląd katalogu wzorców architektury aplikacji wzorce architektoniczne m.in. Model-View-Controller, Object-Relational Mapping, Dependency Injection, Service Locator, Mock Object, itd.    przegląd katalogu wzorców architektury systemów Enterprise Service Bus, Single Sign-on "}



u: ([about happen] * "project: development of the enrollment system") ^repeat() ^keep()
    {"W ramach projektu grupa studentów rozwija istniejący System Zapisów na zajęcia: ulepsza istniejące funkcjonalności, usuwa niepotrzebne i wprowadza nowe. "}
    a: (!~my_negation * more)
        {"System Zapisów napisany jest w Pythonie z użyciem framework-u Django, a elementy front-endowe zazwyczaj powstają w TypeScript'cie. Jednakowoż znajomość tych technologii nie jest warunkiem koniecznym uczestnictwa w projekcie. Oczekuje się od studentów raczej gotowości do zanurzenia się w dużym, istniejącym projekcie, rozpoznania terenu i wykonywania w nim zadań.  Przedmiot zalicza wymaganie projektu zespołowego. Można uczestniczyć w nim wielokrotnie.  Praca zespołowa studentów oparta jest na GitHubie issue, pull-request, code-review, a bieżąca komunikacja jest asynchroniczna z wykorzystaniem komunikatora. "}



u: ([about happen] * "seminar: software engineering") ^repeat() ^keep()
    {"During Seminar Software Engineering Students  present popular standards, methods, tools use during software development.   In presentation it is particularly important for students who work in leading IT companies to inform less experience students information about what methods they use and what tools they use when developing software. "}
    a: (!~my_negation * more)
        {"Seminar aimed at inspiring future software engineers for self-development  and  self-preparation for professional work. "}



u: ([about happen] * "digital logic") ^repeat() ^keep()
    {"Wykład jest wprowadzeniem do projektowania układów cyfrowych. Celem wykładu  jest nauczenie zasad rządzących funkcjonowaniem elektroniki cyfrowej oraz "}
    a: (!~my_negation * more)
        {"typowych rozwiązań stosowanych przy projektowaniu układów. Wiedza zdobyta na wykładzie pomoże w zrozumieniu zasady działania mikroprocesorów i mikrokontrolerów oraz zasad rządzących programowalnymi układami logicznymi FPGA.   Wymagania  Wykład nie wymaga wcześniejszego zaliczenia innych przedmiotów.   Program "}



u: ([about happen] * "programming methodology") ^repeat() ^keep()
    {"Naszym celem jest przygotowanie studentów do używania języków programowania  jako formalnych narzędzi komunikacji między ludźmi, w szczególności jako "}
    a: (!~my_negation * more)
        {"technik które mogą i powinny być stosowane do zapanowania nad złożonością intelektualną dużych systemów. W tym celu zajmiemy się zarówno konkretnymi narzędziami których projektanci języków programowania dostarczają programistom, jak i ogólnymi zasadami konstrukcji języków programowania.  Wykład prowadzą Marek Materzok, Maciej Piróg i Filip Sieczkowski.   Program:    1. Elementy programowania "}



u: ([about happen] * "economic policy policy") ^repeat() ^keep()
    {"Przedmiot prowadzony przez dr. Mirosława Strusia z  Instytutu Nauk Ekonomicznych. "}
    a: (!~my_negation * more)
        {"Celem przedmiotu jest zapoznanie studentów z podstawami i głównymi pojęciami polityki gospodarczej w otwartej gospodarce rynkowej, w celu umożliwienia im lepszego zrozumienia głównych zagadnień i problemów związanych z przebiegiem procesów gospodarczych. "}



u: ([about happen] * "c++ course") ^repeat() ^keep()
    {"C++ to język programowania o charakterze obiektowym.  Jest to obecnie jeden z najbardziej znanych i popularnych języków programowania, wykorzystywany w różnych działach IT ale przede wszystkim do programowania systemowego, aplikacji narzędziowych, wykonywania obliczeń inżynierskich oraz do tworzenia gier komputerowych. "}
    a: (!~my_negation * more)
        {"Charakteryzuje się wysoką wydajnością kodu wynikowego, przenaszalnością tego kodu pomiędzy różnymi platformami oraz łatwością tworzenia i używania z bibliotek.  C++ jest na pewno podstawowym narzędziem pracy milionów programistów na całym świecie.  Język C++ jest potomkiem języka C. Te dwa języki są do siebie podobne składniowo ale w istocie mocno się różnią. Prace nad tym językiem rozpoczął duński naukowiec Bjarne Stroustrup już w 1979 roku. Nazwa języka ukonstytuowała się w roku 1983, kiedy to po raz pierwszy użyto go poza laboratorium naukowym.  Natomiast pierwszy oficjalny standard C++ ISO IEC 14882-1998 został opublikowany dopiero w 1998 roku.  Kurs C++ jest poświęcony nauce programowania obiektowego w C++. "}



u: ([about happen] * "numerical optimization") ^repeat() ^keep()
    {"Mandatory course for Data Science. "}
    a: (!~my_negation * more)
        {"This course is a detailed survey of optimization from both a computational and theoretical perspective. Theoretical topics include convex sets, convex functions, optimization problems, least-squares, linear and quadratic programs, optimality conditions, and duality theory. Special emphasis is put on scalable numerical methods for analyzing and solving general smooth unconstrained problems e.g. first-order and second-order methods, quadratic programs e.g. linear least squares, general smooth constrained problems e.g. interior-point methods, as well as, a family of non-smooth problems e.g. ADMM method.  The applications in data sciences, such as machine learning, model fitting, and image processing, will be discussed. The computational part covers the following algorithms: gradient method, quasi-Newton methods, proximal gradient method, Nesterov’s accelerated gradient method and stochastic gradient descent method. Students complete hands-on exercises using high-level numerical software.   Prerequisites - not scared of math - good knowledge of linear algebra - multivariable calculus skills - programming skills; Python is recommended. "}



u: ([about happen] * "algorithms and data structures") ^repeat() ^keep()
    {"Zajęcia do przedmiotu prowadzone są razem z zajęciami na poziomie M. Chętni na  Algorytmy i struktury danych M powinni zapisywać się na zajęcia do "}
    a: (!~my_negation * more)
        {"Algorytmów i struktur danych L. W praktyce przedmioty różnią się wymiarem pracowni liczbą wymaganych zadań, wymaganiami na zaliczenie oraz wymaganiami na egzaminie.  W bieżącym roku ćwiczenia będą prowadzone w wymiarze 3h tygodniowo, z czego trzecia godzina jest nieobowiązkowa na poziomie L. "}



u: ([about happen] * "cryptography") ^repeat() ^keep()
    {"Cel zajęć: "}
    a: (!~my_negation * more)
        {"Celem wykładu jest zapoznanie uczestnikow z nowoczesnymi metodami służącymi do ochrony prywatnosci danych elektronicznych, autentyfikacji użytkownikow systemow komputerowych, zabezpieczaniu przed nieuprawnionymi modyfikacjami danych i innymi tego typu zastosowaniami opartymi na technikach kryptograficznych. Znaczenie tego typu metod ujawnia się szczegolnie ostro w epoce powstawania globalnych sieci komputerowych, gdzie systemy operacyjne nie gwarantują już bezpieczeństwa.  Głowny nacisk położony zostanie na prezentację metod albo obecnie stosowanych, bądź też wchodzących do praktyki. Niemniej jednak uczestnicy wykładu będą "}



u: ([about happen] * "neural networks and natural language processing") ^repeat() ^keep()
    {"Neural Networks allow creation of programs that are learned rather than written. This means that instead of implementing a concrete algorithm, the program applies patterns that are automatically found in the data. For example, a translation system such as Google Translate can be created by applying a deep neural network to a large corpus of translated documents. The aim of this course is to present the basics of how neural networks work, both from a more theoretical and practical point of view. Neural Networks can be applied to a wide spectrum of tasks, including image and video processing, creating game playing agents, financial data analysis, or even using a computer as a writer, painter or composer. We will try to address many such issues with the emphasis on natural language processing. "}
    a: (!~my_negation * more)
        {"The lecture can be treated as a continuation of the following courses: Machine Learning, and Natural Language Processing.  The first part of this course is shared with the Neural Networks and Deep Learning. However, students who have finished NN-DL can enroll in this course, and obtain 50% of ECTS points there will be special rules for them, allowing them to concentrate only on the new material.    The lecture will be accompanied by computer exercises, including small exercises illustrating key topics, slightly more demanding tasks giving better understanding of neural networks and a larger project that will give you the opportunity to tackle a real world machine learning problem.  We will introduce the PyTorch deep learning framework, and PyTorch-based popular NLP libraries Flair, AllenNLP  This course will have two lecturers: Rafał Nowak, for the first part and Paweł Rychlikowski for the second part. "}



u: ([about happen] * "computer networks") ^repeat() ^keep()
    {"Wykład jest wstępem do szerokiej tematyki sieci komputerowych. Przedstawione będą na nim podstawowe zasady działania sieci komputerowych, ze szczególnym uwzględnieniem sieci opartych na protokole TCP IP, oraz przegląd zastosowań sieciowych spotykanych w Internecie. Nacisk położony będzie na przedstawienie słuchaczowi mechanizmów, protokołów i algorytmicznych podstaw stojących za problemami komunikacji w sieciach, a także na praktyczne wykorzystanie  elementów tej wiedzy. "}
    a: (!~my_negation * more)
        {"Omówione zostaną następujące zagadnienia:  1. Podstawowe pojęcia, protokoły, model warstwowy. 2. Warstwa sieciowa: adresowanie CIDR, routing, protokoły IP i ICMP, tworzenie tablic routingu oparte o stan łączy i wektory odległości, systemy autonomiczne, budowa routera, NAT. 3. Warstwa łącza danych i fizyczna: Ethernet, sieci bezprzewodowe, dostęp do współdzielonego nośnika CSMA CD, CSMA CA. 4. Warstwa transportowa: niezawodny transport, mechanizmy okna przesuwnego, kontrola przepływu, kontrola przeciążenia, protokoły UDP i TCP.  5. Warstwa zastosowań: DNS, HTTP, poczta elektroniczna, sieci P2P, serwery proxy, współpraca z NAT. 6. Programowanie gniazd: gniazda surowe, datagramowe i strumieniowe.  7. Podstawy kodowania i kryptografii: kody detekcyjne CRC i korekcyjne, szyfrowanie, podpisy cyfrowe, RSA, SSL, PGP. "}



u: ([about happen] * "game testing") ^repeat() ^keep()
    {"Nie naprawimy ułomności natury ludzkiej. Programiści i inżynierowie oprogramowania będą nadal popełniać błędy; projektanci gier wprowadzą exploity, artyści zapomną o ważnych szczegółach.  To od testerów gry zależy czy wystąpią  przerwy w zabawie z niedopracowaną grą i czy gra odniesie komercyjny sukces.  Celem przedmiotu Testowanie gier jest pomoc w doskonaleniu umiejętności wystarczająco dobrego testowania gier komputerowych. "}
    a: (!~my_negation * more)
        {" "}



u: ([about happen] * "theoretical foundations of programming languages") ^repeat() ^keep()
    {"Programy i języki programowania funkcyjne będą rozpatrywane jako obiekty matematyczne. Nacisk będzie położony na związki programowania z logiką i dowodami formalnymi izomorfizm Curry'ego-Howarda. Będą omawiane systemy typów, polimorfizm, podtypowanie, teoretyczne podstawy języków obiektowych.   Jako język programowania będzie wykorzystywany przede wszystkim rachunek lambda, ale będą też przykłady w językach Haskell, OCaml, Idris, ... "}
    a: (!~my_negation * more)
        {"Wcześniejsza znajomość rachunku lambda ani izomorfizmu Curry'ego-Howarda  nie jest wymagana.  Nauczanie zdalne W razie konieczności możliwe jest przejście na tryb zdalny. Materiały do wykładów będą umieszczane na SKOSie jak zawsze, a wykład będzie prowadzony on-line z wykorzystaniem wybranej platformy. Zadania na ćwiczenia też będą umieszczane na SKOSie jak zwykle, rozwiązania studentów będą dostarczane za pośrednictwem SKOSa, a prowadzący zapewni informację zwrotną. Ćwiczenia też będą prowadzone on-line. Wskazani studenci będą prezentowali swoje rozwiązania na forum grupy z możliwością dyskusji. "}



u: ([about happen] * "advanced distributed algorithms") ^repeat() ^keep()
    {"Obliczenia rozproszone stanowią obecnie naturalny sposób przetwarzania  informacji - od sieci globalnych jak Internet do systemów wieloprocesorowych "}
    a: (!~my_negation * more)
        {"czy wielordzeniowych. Środowisko rozproszone daje możliwość przyspieszenia obliczeń dzięki podziale zadań na wiele komputerów. Jednocześnie dane, na których prowadzone są obliczenia są często rozproszone w sieci niedostępne w całości poszczególnym komputerom, co stanowi istotne utrudnienie i wymaga kosztownej komunikacji. Dlatego oprócz czasu obliczeń i zużywanej lokalnie pamięci, w konstrukcji algorytmów rozproszonych kluczowe są też inne miary jakości, m. in.:     liczba rund komunikacji koniecznych do zakończenia obliczeń,    rozmiar przesyłanych pojedynczych wiadomości jak i sumaryczny ruch w sieci konieczny do rozwiązania problemu, "}



u: ([about happen] * "seminar: computer graphics") ^repeat() ^keep()
    {"Celem seminarium jest przegląd ciekawszych prac z ostatnich lat dotyczących szeroko rozumianej grafiki komputerowej. Wymagana jest znajomość tematyki minimum na poziomie wykładu z podstaw grafiki komputerowej i ciekawość wiedzy, część prac może dotykać tematyki przetwarzania obrazów czy też ogólniej wizji komputerowej. Omawiać będziemy prace z wiodących konferencji takich jak np. ACM SIGGRAPH, EUROGRAPHICS. "}
    a: (!~my_negation * more)
        {"Uczestnicy seminarium zapoznają się ze stanem bieżących badań w wybranych tematach i nabędą umiejętność dalszego zgłębiania rozwoju grafiki komputerowej poprzez śledzenie i czytanie prac z renomowanych konferencji naukowych.   Odnośniki:   http:  www.siggraph.org   http:  www.eg.org   http:  kesen.realtimerendering.com "}



u: ([about happen] * "clone: ethics for the thinking") ^repeat() ^keep()
    {"Na co dzień etyka nie jest ci potrzebna. Wiesz co robić. Ale czasem sprawy się komplikują…  - w twojej pracy leży laptop. Nikt go nie używa, nikt się nim nawet nie interesuje. Gdybyś go wziął, nikt by się nawet nie zorientował. Przydałby ci się taki laptop… "}
    a: (!~my_negation * more)
        {"- spotykasz się z dziewczyną. Wiesz, że nigdy nie zwiążesz się z nią na poważnie, choć ona bardzo na to liczy. Powiedzieć jej o tym? Po co - jej bliskość jest ci tak przyjemna. A może, co gorsze, przydarzyła wam się „wpadka”? Na szczęście jest pewne proste rozwiązanie. Ale czy faktycznie jest ono tak proste, jak weekendowy wyjazd do Austrii lub Holandii? - zostać w tym kraju czy wyjechać na stałe? Choć masz stąd tożsamość, wykształcenie i miłe obyczaje świąteczne, to jednak tkwienie w tym całym bałaganie... Co prawda mógłbyś zostać i próbować zmieniać swoje najbliższe otoczenie, mógłbyś swoją wiedzą pomnażać dobrobyt  jego mieszkańców, ale z drugiej strony wyjeżdżasz i masz święty spokój, no i te zarobki…  W tego typu sytuacjach zaczynasz się zastanawiać na tym co jest dobre, a co złe, co jest słuszne a co niewłaściwe, co jest powinne a co przeciwpowinne, co jest twoim obowiązkiem, a czego nie wolno ci robić, co jest godne zasługi, a co godne potępienia. Im dłużej się jednak zastanawiasz, tym bardziej zdajesz sobie sprawy z tego, że tak naprawdę nie rozumiesz znaczenia tych pojęć. Wartość, obowiązek, cnota, honor, dobro, powinność, szczęście  - wszystkie te pojęcia są jakoś związane z moralnością, ale czym się od siebie różnią? Co oznaczają?  Ten kurs daje ci możliwość zapoznanie się z podstawowymi sposobami odpowiedzi na pytanie o sens pojęć moralnych. Tok myśli będzie prowadzony w porządku historycznym, zaczniemy od Sokratesa i Platona, a skończymy na współczesnej fenomenologii. Nie zniechęcaj się jednak, bo w etyce, jak w całej filozofii, stare nie oznacza przestarzałe. Dawne koncepcje są laboratorium współczesnego myśliciela. Tak więc poprzez dzieje refleksji etycznej będziemy starali się o analizę podstawowych pojęć moralnych.   Bądź jednak świadomy, że odbycie tego kursu nie sprawi, że rozstrzyganie twoich problemów moralnych stanie się łatwe. Choć będziesz bardziej świadomy czym jest obowiązek, ale wciąż będziesz musiał sam ustalać, co jest twoim obowiązkiem w tej konkretnej chwili. Będziesz wiedział czym jest wartość, ale sam będziesz musiał rozstrzygać, za którą z dwóch opcji dylematu moralnego kryje się wyższa wartość. Jaka więc korzyść z tego kursu? Subtelniejszy język do przemyśleń moralnych i budowy własnego światopoglądu, większa samoświadomość w sytuacjach granicznych. To już chyba coś? "}



u: ([about happen] * "scala in practice") ^repeat() ^keep()
    {"Scala is currently one of the most popular programming languages, with a high demandhttps:  insights.stackoverflow.com survey 2019?utm source=Iterable&utm medium=email&utm campaign=dev-survey-2019top-paying-technologies amongst software development companies, globally. "}
    a: (!~my_negation * more)
        {"It’s functional & object oriented dual nature, static typing, high expressiveness & JVM integration makes it a perfect choice for many companies. User’s include the likes of Twitter, LinkedIn, Infor, Netflix &  Amazon, amongst others.  These companies use Scala to create web portals, big data applications... and code-generators ScalaUA 2019https:  www.youtube.com watch?v=DLjALS Lbn8&feature=youtu.be.  The goal of this course is to introduce students to the syntax of the language, along with the frameworks and libraries associated with it, which are a standard in the industry.  Course Syllabus:     I. Scala syntax   Code standards     Types "}



u: ([about happen] * "design and development of .net windows applications") ^repeat() ^keep()
    {"Celem wykładu jest przedstawienie systemu operacyjnego Windows widzianego  oczami programisty z szerokiej perspektywy technologii .NET. Pracownia daje "}
    a: (!~my_negation * more)
        {"okazję do zmierzenia się z szeregiem typowych zadań programistycznych w środowisku Windows.  Program:    1. Omówienie wewnętrznych mechanizmów Windows.   2. Zapoznanie z interfejsem programowania Win32API.   3. Omówienie platformy .NET i języka C   4. Przegląd biblioteki standardowej platformy .NET, m.in:      oprogramowanie interfejsu użytkownika Windows.Forms, WPF, "}



u: ([about happen] * "seminar: software testing") ^repeat() ^keep()
    {"Seminarium dotyczy metod, technik, norm, narzędzi testowania.  Oprócz testowania systemów obiektowych modele, wzorce, narzędzia ważne będą "}
    a: (!~my_negation * more)
        {"również testy akceptacji, pokrycie testami, automatyzacja testów itp.  Program:    1. Wytwarzanie oprogramowania sterowane testami   2. Testy akceptacji   3. Automatyczne testowanie interfejsów   4. Modele testów   5. Wzorce projektowania testów   6. Narzędzia testowania "}



u: ([about happen] * "object-oriented programming") ^repeat() ^keep()
    {"Celem zajęć jest poznanie jednego z najpowszechniej stosowanego paradygmatu programowania: programowania obiektowego. Program obejmuje zarówno przedstawienie podstawowych pojęć takich jak klasa, obiekt, dziedziczenie czy metody wirtualne, jak i praktykę  wykorzystania tych elementów w budowaniu złożonych programów za pomocą wzorców projektowych. "}
    a: (!~my_negation * more)
        {"Naukę programowania obiektowego będą wspierać języki obiektowe, zarówno te z tzw. statycznym typowaniem jak i dynamicznym. "}



u: ([about happen] * "design of database applications") ^repeat() ^keep()
    {"Dobrze zaprojektowana aplikacja przetwarzająca i prezentująca dane ma wiele warstw i komponentów o określonych odpowiedzialnościach. Celem wykładu jest zaprezentowanie, jak dobrze taki typ aplikacji zaprojektować i oprogramować.  Podczas wykładów oraz towarzyszących im pracowni będziemy poznawać i budować kolejne elementy rozwiązania, aby ostatecznie otrzymać kompletny, działający system. "}
    a: (!~my_negation * more)
        {"Program  Składa się z dwóch głównych części  Część 1: DBMS    1. Podstawy Microsoft SQL Server   2. Język SQL   3. Programowanie w T-SQL "}



u: ([about happen] * "advanced data mining") ^repeat() ^keep()
    {"UWAGA: W przypadku takiej konieczności, w roku akademickim 2020 21 zajęcia mogą być prowadzone zdalnie: wykłady będą prowadzone online przez Google Meet lub podobne narzędzie interaktywnej komunikacji, a pracownie będą miały formę indywidualnych spotkań online. "}
    a: (!~my_negation * more)
        {"Celem przedmiotu jest zapoznanie słuchaczy z zaawansowanymi algorytmami eksploracji danych, dotyczącymi głównie systemów rekomendujących, redukcji wymiarowości, eksploracji danych temporalnych i systemów wspomagania decyzji. Zajęcia pomocnicze skupiają się na rozwiązywaniu przykładowych problemów świata rzeczywistego za pomocą zaawansowanych algorytmów eksploracji danych.  Ogólny program zajęć: 1. Zaawansowane zagadnienia eksploracji danych. 2. Dane sekwencyjne i temporalne. Wielowymiarowe szeregi czasowe. Prognozowanie metodami stochastycznymi i uczenia maszynowego. Grupowanie i klasyfikacja szeregów czasowych, danych temporalnych i sekwencyjnych. Wzorce charakterystyczne w szeregach czasowych. 3. Systemy rekomendujące. Collaborative Filtering i jego rozszerzenia. Faktoryzacja macierzy i jej rozszerzenia. Grupowanie produktów i użytkowników w systemach rekomendujących. Praktyczne problemy systemów rekomendujących: dokładność ang. accuracy, pokrycie ang. coverage, różnorodność ang. diversity, nowość ang. novelty i inne miary oceny systemów rekomendujących. 4. Redukcja wymiarowości. Liniowa redukcja wymiarowości przestrzeni danych. Nieliniowa redukcja wymiarowości przestrzeni danych w tym przekształcenia kernelowe. Zanurzenia sąsiedztw punktów danych podejścia deterministyczne i probabilistyczne. Ekstrakcja cech charakterystycznych danych. 5. Eksploracja danych złożonych i nieustrukturalizowanych. Dane geoprzestrzenne. Trajektorie ruchu GPS. 5. Systemy wspomagania decyzji. Wybrane zastosowania zaawansowanej eksploracji danych. "}



u: ([about happen] * "ethics for the thinking") ^repeat() ^keep()
    {"Na co dzień etyka nie jest ci potrzebna. Wiesz co robić. Ale czasem sprawy się komplikują…  - w twojej pracy leży laptop. Nikt go nie używa, nikt się nim nawet nie interesuje. Gdybyś go wziął, nikt by się nawet nie zorientował. Przydałby ci się taki laptop… "}
    a: (!~my_negation * more)
        {"- spotykasz się z dziewczyną. Wiesz, że nigdy nie zwiążesz się z nią na poważnie, choć ona bardzo na to liczy. Powiedzieć jej o tym? Po co - jej bliskość jest ci tak przyjemna. A może, co gorsze, przydarzyła wam się „wpadka”? Na szczęście jest pewne proste rozwiązanie. Ale czy faktycznie jest ono tak proste, jak weekendowy wyjazd do Austrii lub Holandii? - zostać w tym kraju czy wyjechać na stałe? Choć masz stąd tożsamość, wykształcenie i miłe obyczaje świąteczne, to jednak tkwienie w tym całym bałaganie... Co prawda mógłbyś zostać i próbować zmieniać swoje najbliższe otoczenie, mógłbyś swoją wiedzą pomnażać dobrobyt  jego mieszkańców, ale z drugiej strony wyjeżdżasz i masz święty spokój, no i te zarobki…  W tego typu sytuacjach zaczynasz się zastanawiać na tym co jest dobre, a co złe, co jest słuszne a co niewłaściwe, co jest powinne a co przeciwpowinne, co jest twoim obowiązkiem, a czego nie wolno ci robić, co jest godne zasługi, a co godne potępienia. Im dłużej się jednak zastanawiasz, tym bardziej zdajesz sobie sprawy z tego, że tak naprawdę nie rozumiesz znaczenia tych pojęć. Wartość, obowiązek, cnota, honor, dobro, powinność, szczęście  - wszystkie te pojęcia są jakoś związane z moralnością, ale czym się od siebie różnią? Co oznaczają?  Ten kurs daje ci możliwość zapoznanie się z podstawowymi sposobami odpowiedzi na pytanie o sens pojęć moralnych. Tok myśli będzie prowadzony w porządku historycznym, zaczniemy od Sokratesa i Platona, a skończymy na współczesnej fenomenologii. Nie zniechęcaj się jednak, bo w etyce, jak w całej filozofii, stare nie oznacza przestarzałe. Dawne koncepcje są laboratorium współczesnego myśliciela. Tak więc poprzez dzieje refleksji etycznej będziemy starali się o analizę podstawowych pojęć moralnych.   Bądź jednak świadomy, że odbycie tego kursu nie sprawi, że rozstrzyganie twoich problemów moralnych stanie się łatwe. Choć będziesz bardziej świadomy czym jest obowiązek, ale wciąż będziesz musiał sam ustalać, co jest twoim obowiązkiem w tej konkretnej chwili. Będziesz wiedział czym jest wartość, ale sam będziesz musiał rozstrzygać, za którą z dwóch opcji dylematu moralnego kryje się wyższa wartość. Jaka więc korzyść z tego kursu? Subtelniejszy język do przemyśleń moralnych i budowy własnego światopoglądu, większa samoświadomość w sytuacjach granicznych. To już chyba coś? "}



u: ([about happen] * "warsztaty: jak założyć firmę?") ^repeat() ^keep()
    {"Zajęcia będą miały formę warsztatów. Uczestnicy będą proszeni o opracowanie w  formie krótkiego referatu będącego wprowadzeniem do dyskusji jednego z "}
    a: (!~my_negation * more)
        {"tematów lub “case study” i udział w dyskusji. Przewiduję udział “anioła biznesu”, założycieli start-upów, szefów małych firm, osób, którym się nie bardzo udało sprzedali start-upy, osób, które rozpędziły kulejące małe firmy.  Tematy do dyskusji:  Co oferować: tanie usługi, unikalne usługi czy produkt.  Cel strategiczny: sprzedać firmę po zbudowaniu marki, czy budować z myślą o "}



u: ([about happen] * "formal languages and computational complexity") ^repeat() ^keep()
    {"Program przedmiotu obejmuje zagadnienia związane z teorią językow formalnych  wykłady A1 - A8 w zakresie istotnym z punktu widzenia wykształcenia "}
    a: (!~my_negation * more)
        {"informatycznego, a także dostatecznym dla stworzenia zasobow naturalnych przykładow dla części B i C. Następnie przechodzi się do zagadnień związanych z pojęciami rozstrzygalności i nierozstrzygalności wykłady R1 -- R8. Ostatnia część kursu poświęcona jest wybranym, elementarnym zagadnieniom złożoności obliczeniowej. "}



u: ([about happen] * "introduction to databases") ^repeat() ^keep()
    {"Celem wykładu jest omówienie zasad konstrukcji relacyjnych baz danych oraz  opanowanie przez słuchaczy umiejętności profesjonalnej obsługi systemu baz "}
    a: (!~my_negation * more)
        {"danych od strony użytkownika, czyli:     umiejętności projektowania i tworzenia relacyjnych baz danych dla rzeczywistych zagadnień;    sprawnego wyszukiwania i odzyskiwania informacji z baz danych przy pomocy języków SQL.    pisania aplikacji z dostępem do baz danych;    efektywnego wykorzystania dodatkowych możliwości systemu perspektyw, transakcji, więzów, itp..  Ponadto wykład pozwala słuchaczom poznać elementy systemów baz danych spoza warstwy użytkownika system nadzoru transakcji, zapewnienia bezpieczeństwa i optymalizacji oraz zapoznać się z innymi koncepcjami baz danych "}



u: ([about happen] * "curves and surfaces in computer graphics") ^repeat() ^keep()
    {"Krzywe i powierzchnie to podstawowe obiekty grafiki komputerowej. To właśnie przy ich pomocy można modelować skomplikowane kształty i sceny, którym nadaje się później cechy realistyczne i wykorzystuje na przykład w tak modnej ostatnio animacji komputerowej. "}
    a: (!~my_negation * more)
        {"Głównym celem wykładu jest przedstawienie podstawowych wiadomości na temat narzędzi pozwalających efektywnie reprezentować i modelować krzywe oraz powierzchnie różnego typu i wygładzać przy ich pomocy dane. Szczególny nacisk położony będzie na omówienie odpowiednich technik i algorytmów z tym związanych, które pozwolą uczestnikom zajęć przygotować własny edytor krzywych lub powierzchni.     Wymagania   analiza numeryczna L lub M,  umiejętność programowania.  Program "}



u: ([about happen] * "linux system administration") ^repeat() ^keep()
    {"Celem kursu jest rozwinięcie u uczestników praktycznych umiejętności  zarządzania systemem Linux na komputerze osobistym lub serwerze. Zostaną "}
    a: (!~my_negation * more)
        {"przedstawione podstawowe informacje na temat budowy i sposobu działania systemów uniksopodobnych, a szczególnie różnych dystrybucji Linuksa. Zajęcia są adresowane do wszystkich studentów, którzy chcieliby sprawnie korzystać na co dzień z systemów linuksowych i którzy są zdania, że to użytkownik powinien mieć władzę na komputerem, a nie komputer nad użytkownikiem. Mimo że osiągnięcie tego celu wymaga sporego zaangażowania, wiedzy i praktycznych umiejętności, nie zakłada się wstępnego doświadczenia słuchaczy w zakresie administrowania Linuksem. Wystarczy wola odłączenia myszy i chęć pracy z terminalem tekstowym. "}



u: ([about happen] * "probability and statistics") ^repeat() ^keep()
    {"Program: "}
    a: (!~my_negation * more)
        {"1. Pojęcie prawdopodobieństwa, przestrzeń zdarzeń, pojęcie zmiennej losowej, jej rozkład i charakteryzacja.   2. Zmienne losowe dyskretne rozkłady: Bernoulliego, geometryczny, Poissona, hipergeometryczny.   3. Zmienne losowe ciągłe rozkłady: jednostajny, wykładniczy, gamma, normalny, beta, Weibulla. Charakterystyki zmiennych losowych - momenty.   4. Rozkłady zmiennych losowych wielowymiarowych rozkład dwuwymiarowy, rozkład warunkowy, rozkład brzegowy, niezależność dwóch zmiennych losowych; Macierze kowariancji i korelacji. Wielowymiarowy rozkład normalny i szczególny przypadek dwuwymiarowyelipsa koncentracji, proste regresji.   5. Funkcje od dwuwymiarowych zmiennych losowych. Wyznaczanie gęstości i dystrybuanty funkcji zmiennych losowych.   6. Funkcja charakterystyczna i jej własności. Związek funkcji charakterystycznej z momentami zmiennej.   7. Populacja i próbka. Rozkłady próbkowe chi-kwadrat, t-Studenta, F-Snedecora. Centralne twierdzenie graniczne.   8. Estymacja punktowa i przedziałowa. Testowanie hipotez statystycznych. Weryfikacja zgodności rozkładów.   9. Regresja liniowa i inne rodzaje regresji.   10. Różne rodzaje analizy wariancji i związek tejże z regresją. "}



u: ([about happen] * "computer architecture for programmers") ^repeat() ^keep()
    {"Celem przedmiotu jest wprowadzenie słuchaczy do budowy i zasad działania komputerów z punktu widzenia programisty. Studenci nabędą wiedzy z zakresu programowania niskopoziomowego. Po zakończeniu przedmiotu będą rozumieć: "}
    a: (!~my_negation * more)
        {"reprezentację programów i danych na dysku i w pamięci komputera,   wpływ architektury komputera na wydajność aplikacji,   mechanizmy sprzętowe używane do implementacji systemów operacyjnych,   jak unikać pisania programów podatnych na ataki.   Program  1. Reprezentacja danych     reprezentacja danych w pamięci komputera     arytmetyka na liczbach binarnych w systemie uzupełnień do dwóch "}



u: ([about happen] * "project: competitive artificial intelligence") ^repeat() ^keep()
    {"W ramach projektu, kilkuosobowe grupy będą programowały boty grające w jedne z istniejących zawodów AI. "}
    a: (!~my_negation * more)
        {"Poszczególne zespoły nie będą działały w odosobnieniu, lecz na regularnych spotkaniach z prowadzącymi oraz pozostałymi uczestnikami przedmiotu będą prezentować postępy prac, dzielić się wątpliwościami i słuchać pomysłów na alternatywne podejścia. Naszym celem jest wprowadzić do kompetytywnej Sztucznej Inteligencji silny element współpracy i wzajemnej nauki jako środka do osiągania lepszych wyników.  Na koniec projektu, oprócz przedstawienia swojego bota, każda z grup przygotuje też krótki raport z historii jej tworzenia oraz opisujący mechanizmy zaimplementowane w finalnej wersji.   Przeglądowe listy interesujących nas wydarzeń oczywiście będą nas interesowały aktualne edycje: - https:  www.gocoder.one blog ai-game-competitions-list - https:  ieee-cog.org 2022 COMPETITIONS - https:  icga.org ?page id=3468 - NeurIPS competitions "}



u: ([about happen] * "project: machine learning for temporal data mining") ^repeat() ^keep()
    {"Celem projektu jest opracowanie wykorzystanie rozszerzenie algorytmów uczenia maszynowego związanych z przetwarzaniem danych czasowych m.in. szeregów czasowych, modeli ze stanami ukrytymi, itp. i wykorzystanie ich do konstrukcji prototypu systemu dla wybranego problemu zbioru danych. "}
    a: (!~my_negation * more)
        {"UWAGA: Projekt jest przeznaczony dla osób posiadających wiedzę z eksploracji danych i uczenia maszynowego w zakresie potrzebnym do realizacji projektu oraz umiejętności techniczne w tym zakresie. Część prac może być wykonywana przez osoby z mniejszym doświadczeniem, ale zalecałbym kontakt emailem i ustalenie tego przed zapisaniem się. "}



u: ([about happen] * "spectral graph theory") ^repeat() ^keep()
    {"We would explore the field of Spectral Graph Theory by reading and discussing selected fragments of the following book:  http:  cs-www.cs.yale.edu homes spielman sagt sagt.pdf "}
    a: (!~my_negation * more)
        {"This advanced semminar will only be organized if we find a strong group of entusiasts, who would agree to take the challenge of reading and presenting 1 or 2 selected fragments of the book.  As an organizer, I would also participate in this effort. Additionally I would try to comment on the contents being presented.  Depending on the set of people who sign in, the presentations may be either in polish or in english. However, there are no source materials in polish available.    This seminar can be considered in relation with another one called Advanced LP-based algorithmic techniques. The one that turns out to be more popular in the vote will be organized. "}



u: ([about happen] * "concurrent programming") ^repeat() ^keep()
    {"Przedmiot będzie prowadzony w drugiej połowie semestru - pierwsze zajęcia  odbędą się 11 kwietnia. "}
    a: (!~my_negation * more)
        {"Współbieżność pozwala na zorganizowanie programu w formie komponentów, które są wykonywane niezależnie i komunikują się ze sobą tylko wtedy, kiedy to konieczne. Współbieżność ma fundamentalne znaczenie dla programów podlegających interakcji ze swoim środowiskiem, np. agentów, interfejsów GUI, systemów operacyjnych itd. Obecnie jednak można ją z pożytkiem wykorzystać praktycznie w każdej aplikacji, ponieważ wysokopoziomowe mechanizmy programowania współbieżnego pozwalają pisać efektywne programy, wykorzystujące procesory wielordzeniowe. "}



u: ([about happen] * seminarium: klasyka informatyki) ^repeat() ^keep()
    Sorry, there was no information for seminarium: klasyka informatyki provided.


u: ([about happen] * "submodular optimization") ^repeat() ^keep()
    {"Wklęsłość i wypukłość funkcji są jednymi z podstawowych  własności, które pozwalają na efektywne znajdowanie ich minimów i maksimów. To dotyczy jednak tylko funkcji o ciągłej domenie, bo kiedy mamy już do czynienia z problemem kombinatorycznym, tj. funkcją o dyskretnych argumentach, to z pojęcia wklęsłości wypukłości już siłą rzeczy niestety skorzystać nie możemy. "}
    a: (!~my_negation * more)
        {"Istnieje jednak pewien analog wklęsłości wypukłości w świecie funkcji dyskretnych, nazywany submodularnością, który pozwala na zbudowanie całkiem ładnej teorii pozwalającej na optymalizację bardzo nietrywialnych funkcji pochodzących z różnych kontekstów, a których jedynym wpólnym mianownikiem jest wyabstrahowana submodularność. Na dowód tej rożnorodności i potencji pojęcia zajawmy jedynie, że w gruncie rzeczy to dzięki submodularności właśnie jesteśmy w stanie rozwiązać zarówno problem maksymalnego przepływu jak i minimalnego drzewa rozpinającego w czasie wielomianowym.  Nie jest to więc powszechna wiedza, ale optymalizacja submodularna jest jedną z najstarszych dziedzin informatyki teoretycznej. Ostatnie lata tchnęły w tę dziedzinę drugie życie w związku z coraz większymi jej zastosowaniami w uczeniu maszynowym i sztucznej inteligencji. Pozwala to dopełnić piękne rozważania teoretyczne ich efektywną implementacją, co jest bardzo satysfakcjonujące.  Na dowód tego wystarczy spojrzeć, że co roku na ICML, czyli najważniejszej konferencji machine learningowej, pojawia się około 10 prac, które są poświęcone tej tematyce.  Proponowany przedmiot jest adresowany do studentów, którzy chcieliby poznać podstawy tej dziedziny, a być może nawet wykonać mniej lub bardziej śmiały atempt na spróbowanie swoich sił w badaniach, które w swoim założeniu mogłyby się zakończyć publikacją na konferencji takiej jak ICML właśnie. "}



u: ([about happen] * "seminar on algorithms 2015") ^repeat() ^keep()
    {"Seminarium poswięcone będzie względnie świeżym osiągnięciom algorytmicznym. W  jego ramach omawiane będą wybrane wyniki zaprezentowane w ostatnich latach na "}
    a: (!~my_negation * more)
        {"wiodących konferencjach algorytmicznych. Dla umożliwienia w miarę szerokiego wyboru tematow, zajęcia te mają dwoch prowadzących: Marcina Bieńkowskiego i Jarosława Byrkę.  UWAGA: Seminarium odbywa się corocznie i można w nim brać udział wielokrotnie.    Wymagania:     Dobra znajomość materiału z Algorytmow i struktur danych. "}



u: ([about happen] * "course on practical c# enterprise software development") ^repeat() ^keep()
    {"Course Description: This course will be provided by Credit Suisse to give  students exposure to real-world software development. The course will consist "}
    a: (!~my_negation * more)
        {"of a set of lectures and a large course project in which students will learn and apply practical skills. The course project will be a financial application similar to the systems used for pricing and risk calculations in Credit Suisse. The students will have access to technical leaders at Credit Suisse through the lectures and tutorials to learn from professionals who are building business critical applications.  Recommended Prerequisites: Familiarity with object oriented programming and computer science concepts is required for this course. Some exposure to C is recommended, but is not required for ambitious students. A useful course to "}



u: ([about happen] * "seminar: computer systems architecture") ^repeat() ^keep()
    {"Celem seminarium jest pogłębienie znajomości tematów omawianych na wykładzie  “Architektury Systemów Komputerowych” oraz zapoznanie się zagadnieniami "}
    a: (!~my_negation * more)
        {"pobocznymi.    Przewiduje się, że student wygłosi prelekcję na jeden z niżej wymienionych tematów:     elementy mikroarchitektury współczesnych procesorów:       techniki przewidywania skoków, "}



u: ([about happen] * "przedmiot w wersji roboczej") ^repeat() ^keep()
    {" "}
    a: (!~my_negation * more)
        {" "}



u: ([about happen] * "evolutionary algorithms") ^repeat() ^keep()
    {"UWAGA: W przypadku takiej konieczności, w roku akademickim 2020 21 zajęcia mogą być prowadzone zdalnie: wykłady będą prowadzone online przez Google Meet lub podobne narzędzie interaktywnej komunikacji, a pracownie będą miały formę indywidualnych spotkań online. "}
    a: (!~my_negation * more)
        {"Algorytmy ewolucyjne to część inteligencji obliczeniowej zajmująca się heurystycznym rozwiązywaniem problemów optymalizacji.      Algorytmy ewolucyjne znajdują zastosowanie w rozwiązywaniu problemów optymalizacji, dla których nie można użyć algorytmów tradycyjnych m.in. kiedy takie algorytmy nie istnieją lub są zbyt kosztowne obliczeniowo, kiedy problem optymalizacji nie może być zdefiniowany matematycznie, kiedy wystarczające są rozwiązania przybliżone lub dostatecznie dobre z praktycznego punktu widzenia. "}



u: ([about happen] * "seminar: efficient implementation of algorithms") ^repeat() ^keep()
    {"To nie jest typowe seminarium. Każde spotkanie ma dwie części. Podczas  pierwszej studenci rozwiązują zadania typowe w większym lub mniejszym "}
    a: (!~my_negation * more)
        {"stopniu dla zawodow programistycznych typu AMPPZ, CERC,… . W drugiej części dyskutujemy nad metodami ich rozwiązań.  Cel zajęć wybiega daleko poza przygotowania drużyn reprezentujących UWr na zawodach. Jak pokazuje wieloletnie doświadczenie, zajęcia w zasadniczy sposob pogłębiają zrozumienie algorytmow,  poprawiają biegłość w programowaniu i umiejętność rozwiązywania problemow. To są umiejętności chyba najczęściej sprawdzane obecnie przy rekrutacji przez „topowe firmy Google, Microsoft,… "}



u: ([about happen] * "clone: computing for computer scientists") ^repeat() ^keep()
    {"Celem przedmiotu jest przybliżenie studentom pierwszego roku podstawowych narzędzi do współtworzenia, kompilowania, uruchamiania, publikowania oraz dokumentowania swoich oraz cudzych programów. "}
    a: (!~my_negation * more)
        {"Ten kurs jest planowany na 10 godzin wykładu, 10 godzin pracowni oraz 3 punkty ECTS.  Program przedmiotu:     Praca w systemie Linux: pliki, procesy, użytkownicy, potoki i strumienie, kompilowanie i uruchamianie programów.     Polecenie ssh oraz podstawy kryptografii.    Systemy kontroli wersji na przykładzie systemu git.    LaTeX.  Pracownia będzie głównie polegała na samodzielnym zgłębianiu tematów poruszanych na wykładzie. W wielu przypadkach zadania na pracowni będą wymagały od studentów samodzielnego znalezienia rozwiązania w dokumentacji lub "}



u: ([about happen] * "compiler construction") ^repeat() ^keep()
    {"The course covers most of the translation from C and C++ into native  computer code. This complicated process cannot be understand without theory, "}
    a: (!~my_negation * more)
        {"so you have to be good at theory. You also must be good at programming, because there will be programming exercises. The course is intended for people who actually like all aspects of computer science. We will be using an intermediate representation called LLVM. It has the advantage that it is well- documented, well-designed, and there is good tool support. "}



u: ([about happen] * "seminar: agile software development") ^repeat() ^keep()
    {"Seminarium będzie poświęcone zwinnym technikom wytwarzania oprogramowania oraz  wykorzystania ich w obszarach analizy zbierania wymagań, projektowania i "}
    a: (!~my_negation * more)
        {"modelowania, implementacji, testowania… Punktem wyjściowym będzie oczywiście Manifesto for Agile Software Development Alistaira Cockburna i Boba Martina, skąd przejdziemy do zestawu typowych metod i praktyk agile’owych, m.inhttp:  m.in. XP, ATDD, DDD, EventStorming, BDD, Story Mapping, Impact Mapping, C4, SCRUM, Kanban, zarówno na poziomie małych jak i wielkich zespołów. "}



u: ([about happen] * "theoretical foundations of concurrent processes") ^repeat() ^keep()
    {"Z procesami współbieżnymi obecnie informatycy muszą radzić sobie nieustannie,  zarówno w środowiskach zwartych architektury wielordzeniowe, jak i "}
    a: (!~my_negation * more)
        {"rozproszonych np. protokoły sieciowe. Projektowanie i analiza takich systemów nie jest łatwym zadaniem. Wykorzystanie istniejących narzędzi do modelowania i badania własności systemów współbieżnych wymaga znajomości teorii, na których są one oparte, czyli algebr procesów.      Algebry procesów służą do opisywania i badania zachowania systemów współbieżnych za pomoca środków algebraicznych. Klasyczne algebry procesów to CCS Calculus of Communicating Systems, R.Milner, CSP Communicating Sequential Processes, T.Hoar i ACP Algebra of Communicating Processes, J.A.Bergstra, J.W.Klop. "}



u: ([about happen] * "mathematical analysis 2") ^repeat() ^keep()
    {"Opis przedmiotu:    Wykład jest kontynuacją przedmiotu obowiązkowego  Analiza matematyczna . W "}
    a: (!~my_negation * more)
        {"jego ramach zostaną przedstawione: funkcje wielu zmiennych, równania rózniczkowe, funkcje analityczne.      Program wykładu:    1. Funkcje dwóch zmiennych: granice funkcji, funkcje ciągłe.   2. Pochodne cząstkowe funkcji, różniczka funkcji, pochodna kierunkowa.   3. Wzór Taylora. Ekstrema funkcji, zastosowanie ekstremów.   4. Całki podwójne.   5. Równania różniczkowe rzędu pierwszego. "}



u: ([about happen] * "seminar: the implementation of functional languages") ^repeat() ^keep()
    {"W ramach seminarium omowione zostaną klasyczne techniki i rozwiązania stosowane w kompilatorach języków funkcyjnych takich jak Ocaml, SML, Scheme i Haskell, jak również nowe osiągnięcia w dziedzinie implementacji języków funkcyjnych. Wśród omawianych tematów znajdą się: "}
    a: (!~my_negation * more)
        {"interpretery    osadzone języki dziedzinowe EDSL    ewaluacja częściowa i generowanie kompilatorów    kompilacja przez transformacje programów     analiza statyczna i optymalizacja programów    generowanie kodu pośredniego    maszyny abstrakcyjne     poprawność kompilatorów "}



u: ([about happen] * "computer architecture") ^repeat() ^keep()
    {">  Każda wystarczająco zaawansowana technologia jest nieodróżnialna od magii.  --- Arthur C. Clarke. "}
    a: (!~my_negation * more)
        {"Celem wykładu jest przedstawienie studentom organizacji współczesnych maszyn obliczeniowych: procesorów wielordzeniowych, kart graficznych GPGPU, akceleratorów obliczeń sieci neuronowe, przetwarzanie genomu; oraz środków przechowywania danych: pamięci DRAM i nieulotnej pamięci półprzewodnikowej.   Zajęcia są skierowane do studentów, którzy czują niedosyt po wykładzie z  Architektur systemów komputerowych  i  Logiki cyfrowej , i chcą:   zrozumieć po co w procesorze jest aż kilka miliardów tranzystorów,   nauczyć się organizować wydajne oprogramowanie korzystające z procesorów wielordzeniowych i GPGPU,   dowiedzieć się z czego wynikają algorytmy optymalizacji kodu maszynowego w kompilatorach,   poznać kilka ciekawych algorytmów  online  implementowanych w sprzęcie,   zaprojektować własny procesor.  Wykład będzie prowadzony na podstawie materiałów Onura Mutluhttp:  people.inf.ethz.ch omutlu  z ETH Zurichhttps:  inf.ethz.ch department awards-rankings rankings.html do wykładów Digital Design & Computer Architecturehttps:  safari.ethz.ch digitaltechnik spring2021 i Computer Architecturehttps:  safari.ethz.ch architecture fall2020. "}



u: ([about happen] * "software testing") ^repeat() ^keep()
    {"Testowanie jest podstawą procesu tworzenia wysokiej jakości oprogramowania. "}
    a: (!~my_negation * more)
        {"Przedmiot zapoznaje studentow z podstawowa wiedzą oraz praktycznymi umijetnościami dotyczącymi testowania oprogramowania. Studenci poznają proces testowy, techniki i narzędzia testowania. Uczą sie analizowac podstawę testow oraz projektowac, implementować, analizować testy.  Zakres wykładu obejmuje wiedzę wymaganą do egzaminu ISTQB: Certifikowany tester - poziom podstawowy.  Ćwiczenia i pracowania zapoznaja z praktycznymi metodami i automatycznymi narzędziami testowania wspólcześnie stosowanymi podczas wytwarzania "}



u: ([about happen] * "algorithmic game theory") ^repeat() ^keep()
    {"Teoria gier jako podejscie do problemow decyzyjnych z niepewnoscia w danych. "}
    a: (!~my_negation * more)
        {"Zagadnienia:     Gry cooperative noncooperative:    1. strategie   2. equilibria     Mechanizmy decyzyjne:    1. Z pieniedzmi np. aukcje "}



u: ([about happen] * "photorealistic computer graphics") ^repeat() ^keep()
    {"Niektórzy uważają, że każdy informatyk powinien zaimplementować ray tracer.  Chodź można to oczywiście zrobić w jedno popołudnie to tu mamy cały przedmiot "}
    a: (!~my_negation * more)
        {"i semestr na to zadanie i dzięki temu efekt da na pewno dużo więcej satysfakcji. W ramach przedmiotu na wykładzie przedstawiane są podstawy teoretyczne, a na pracowni realizujemy implementacje ray tracera od prostego klasycznego, aż do fizycznie poprawnego opartego o metody Monte Carlo. W tegorocznej wersji wykładu przy implementacji skupimy się na metodach renderingu, zaś do przyspieszania ray tracingu będzie można użyć gotowych rozwiązań jak np. embree.  Celem wykładu jest przedstawienie realistycznych metod syntezy obrazów. Wykład przedstawia podstawy fizyczne transportu światła, które pozwalają na "}



u: ([about happen] * "analysis of variance") ^repeat() ^keep()
    {"Wielowymiarowa analiza danych. "}
    a: (!~my_negation * more)
        {"1. Tworzenie macierzy wariancji-kowariancji dla zbioru danych.   2. PCA -- metoda kierunków głównych. Rzutowanie zbioru obserwacji na podprzestrzeń o mniejszej liczbe wymiarów tak aby zachować jak najwięcej wariancji. W praktyce polega to na obliczeniu wektorów własnych odpowiadających największym wartościom własnym macierzy wariancji-kowariancji.   3. Opisanie zmiennych i osobników w terminach kierunków głównych. Które zmienne i w jakim stopniu składają się na kierunki główne? Które osobniki i w jakim stopniu składają się na kierunki główne?   4. CA -- analiza odpowiedniości. Zadanie podobne do PCA, ale dotyczące zmiennych jakościowych. Wartością zmiennej nie są tutaj liczby lecz kategorie na przykład odpowiedź na pytanie z odpowiedzią A, B lub C.   5. Tworzenie średniego profilu wiersza i średniego profilu kolumny. Wskazanie na pewną miarę odległości, która wiąże odpowiedzi z testem niezależności chi-kwadrat. Pozostała część bardzo podobna do metody PCA.   6. MCA -- wielowymiarowa analiza odpowiedniości. Jest to dla przykładu analizowanie wyników ankiet z wieloma pytaniami w formie wyboru z listy.   7. HCPC -- hierarchizacja osobników na podstawie analizy PCA MCA. Tworzenie drzewa ilustrującego podział wyjściowego zbioru na kilka grup.  Literatura: "}



u: ([about happen] * "seminar on computer graphics 2017") ^repeat() ^keep()
    {"Celem seminarium jest przegląd ciekawszych prac z ostatnich lat dotyczących  szeroko rozumianej grafiki komputerowej. Wymagana jest znajomość tematyki "}
    a: (!~my_negation * more)
        {"minimum na poziomie wykładu z podstaw grafiki komputerowej i ciekawość wiedzy, część prac dotyczy tematyki przetwarzania obrazów. Omawiać będziemy prace z wiodących konferencji takich jak ACM SIGGRAPH, EUROGRAPHICS.  Uczestnicy seminarium zapoznają się ze stanem bieżących badań w wybranych tematach i nabędą umiejętność dalszego zgłębiania rozwoju grafiki komputerowej poprzez śledzenie i czytanie prac z renomowanych konferencji naukowych. "}



u: ([about happen] * "operating system principles") ^repeat() ^keep()
    {"Wstęp. Systemy operacyjne są specyficznym oprogramowaniem. Ich ewolucja  trwa już ponad pół wieku, a poszczególne systemy są użytkowane przez "}
    a: (!~my_negation * more)
        {"dziesiątki lat. Na przykład historia jednego z nowszych systemów operacyjnych, Linuxa, sięga początku lat 90. XX wieku. Współczesne systemy operacyjne to oprogramowanie liczące miliony wierszy kodu źródłowego. Można używać komputera dowolnego: od smartfonu do mainframe'a, korzystać z licznych aplikacji i nie rozumieć, jak działa oprogramowanie podstawowe. Jednak podobnie jak posiadaczowi prawa jazdy nie godzi się nie wiedzieć, dlaczego samochód się toczy nawet pod górę, studentowi, a zwłaszcza studentowi informatyki, nie wypada nie rozumieć elementarnych zasad działania systemów operacyjnych.  Przeglądowy wykład z systemów operacyjnych SO jest oparty na najlepszych "}



u: ([about happen] * "operating system - tutoring") ^repeat() ^keep()
    {"Na zajęciach prowadzący będzie odpowiadał na pytania dotyczące bieżących list  zadań i tematów pojawiających się na wykładzie Systemy Operacyjne. Oprócz "}
    a: (!~my_negation * more)
        {"tego w postaci interaktywnego wykładu będą przedstawiane treści rozszerzone w zależności od potrzeb i sugestii np.:     wybrane elementy systemu Linux np. initd, nss, pam, proc, udev, lvm    programowanie z użyciem POSIX API,    organizacja wewnętrzna jądra FreeBSD np. zarządzanie procesami, pamięcią, urządzeniami wejścia-wyjścia, bootloader    tematy dodatkowe na podstawie książki Modern Operating Systems, wydanie czwarte, A. Tanenbaum maszyny wirtualne, bezpieczeństwo, mikrojądra "}



u: ([about happen] * "seminar on foundations of object-oriented languages") ^repeat() ^keep()
    {"Seminarium poświęcone będzie semantyce i systemom typow językow zorientowanych  obiektowo. Jego celem jest prezentacja fundamentalnych pojęć dotyczących "}
    a: (!~my_negation * more)
        {"obiektowości m.in.: self, dynamiczne wiązanie metod, klasy, dziedziczenie, podtypowanie, kowariancja i kontrawariancja, specjalizacja metod przy użyciu modeli teoretycznych takich językow, opartych na rachunku lambda, wraz z odniesieniem do istniejących językow zorientowanych obiektowo takich jak Simula 67, C++, Smalltalk, Eiffel, Java, Ocaml i Scala.      Literatura:         1. A Theory of Objects. Martin Abadi and Luca Cardelli. Springer-Verlag, 1996. "}



u: ([about happen] * "logic programming") ^repeat() ^keep()
    {"Logika towarzyszyła komputerom niemal od ich początku jako narzędzie  wyrażające ich własności i umożliwiające dowodzenie tych własności. Idea "}
    a: (!~my_negation * more)
        {"użycia logiki jako samodzielnego języka programowania narodziła się nieco poźniej: w latach siedemdziesiątych XX wieku. Można ją podsumować za pomocą następujących ,,rownań'':  program = zbior aksjomatow obliczenie = budowanie dowodu wynikania pewnego twierdzenia z tego zbioru aksjomatow  Pierwszy realizujący tę ideę system automatycznego dowodzenia twierdzeń został nazwany Prologiem od Programmation en Logic, od czasu jego powstania wiele zespołow badawczych pracowało nad uczynieniem z Prologu rzeczywiście "}



u: ([about happen] * modern platforms for big data analytics, graphics and visualisation) ^repeat() ^keep()
    Sorry, there was no information for modern platforms for big data analytics, graphics and visualisation provided.


u: ([about happen] * "course: practical c# enterprise software development") ^repeat() ^keep()
    {"Developing fault-tolerant distributed trading systems "}
    a: (!~my_negation * more)
        {"Course Description: This course will be provided by Credit Suisse to give students exposure to real-world software development of fault-tolerant distributed trading systems with a web user interface. The course will consist of a set of lectures and tutorials. Weekly assignments will bring students ever closer to having the final project complete. The course project will be a financial application similar to the systems used for pricing and risk calculations in Credit Suisse. A mock legacy system will be replaced by the students ' implementation component-by-component. It will be acceptable to use some of the legacy components in the final project in exchange for a mark penalty. The students will have access to technical leaders at Credit Suisse "}



u: ([about happen] * "artificial intelligence for games: team projects") ^repeat() ^keep()
    {"Celem przedmiotu jest praktyczne, pogłębione wykorzystanie wiedzy oraz  umiejętności nabytych na kursie Sztucznej inteligencji w grach. W "}
    a: (!~my_negation * more)
        {"szczególności można będzie rozwijać projekt rozpoczęty podczas AI4Games.  W ramach tego przedmiotu realizowane będą projekty grupowe, które, jeśli będą odpowiednio dobrej jakości, mogą stanowić podstawę do pracy licencjackiej inżynierskiej lub magisterskiej.  Proponowane tematy lista niepełna, część projektów znajduje się już w pewnej fazie realizacji:     proceduralny generator map do gry Heroes of Might and Magic III; "}



u: ([about happen] * "artificial intelligence for games") ^repeat() ^keep()
    {"Artificial Intelligence for Games "}
    a: (!~my_negation * more)
        {"przedmiot może być prowadzony w języku angielskim na życzenie studentów  Wykład ma na celu przedstawienie metod sztucznej inteligencji wykorzystywanych na potrzeby gier. Do tematu podejdziemy z trzech stron: omawiając algorytmy służące do grania w gry, proceduralnego generowania ich zawartości oraz wykorzystywane w silnikach gier. Chciałbym zobrazować jak wiele różnorodnych i skomplikowanych algorytmów znajduje się w przeciętnej grze oraz dać możliwość ich zaprogramowania korzystając z multimedialnych platform do walk AI.  Oprócz tego znaczna część kursu będzie polegała na omówieniu aktualnie "}



u: ([about happen] * "digitizing the real world") ^repeat() ^keep()
    {"Capturing realistic 3D models of real objects, and humans is of great interest  for many disciplines and industries including video-games, film, architecture, "}
    a: (!~my_negation * more)
        {"marketing, and art.  This course will present different methods, hardware, and algorithms for digitizing geometry, material properties, motion, and lighting, as well as different ways to represent, edit, and reproduce these inside the computer. The course will combine the fundamentals of different aspects of digitizing reality with the presentation of industrial standards and state-of-the-art research.     3D Scanning, Structure from Motion, Photometric Stereo, Shape from Shading. "}



u: ([about happen] * "it architecture") ^repeat() ^keep()
    {"Podczas tworzenia systemów informatycznych, szczególnie dużych, dobra  architektura jest jednym z ważniejszych aspektów, o które należy zadbać. "}
    a: (!~my_negation * more)
        {"Dobra, czyli taka, która zapewni realizację wymagań zarówno funkcjonalnych, jak i nie funkcjonalnych, która umożliwi rozwój i utrzymanie systemu w granicach akceptowalnych kosztów na przestrzeni lat. Nie bez znaczenia są także metody pracy, które mogą sprzyjać tworzeniu dobrej architektury, mogą też to utrudniać. Bardzo popularną w ostatnich latach metodą wspierającą tworzenie dobrej architektury jest Domain Driven Design i tą właśnie metodyką zajmiejmy się przez przeważającą część semestru.  W ramach wykładu zostaną poruszone następujące zagadnienia: "}



u: ([about happen] * "it security in practice") ^repeat() ^keep()
    {"Celem zajęć jest dogłębne zaznajomienie się z różnymi aspektami bezpieczeństwa  komputerowego. Punktem odniesienia będzie certyfikacja CISSP, wszestronna i "}
    a: (!~my_negation * more)
        {"najbardziej rozpoznawalna certyfikacja w zakresie bezpieczeństwa komputerowego. Wykład będzie głównie teoretyczny, niemniej dla każdego zagadnienia będzie omawiana praktyczna realizacji na przykładzie dużej korporacji.  W ramach CISSP rozważanych jest 8 następujących obszarów:     Security and Risk Management Security, Risk, Compliance, Law, Regulations, and Business Continuity    Asset Security Protecting Security of Assets    Security Engineering Engineering and Management of Security "}



u: ([about happen] * "programmers' team engineering") ^repeat() ^keep()
    {"Na przedmiocie Inżynieria Oprogramowania oraz podczas wielu wykładów na  obozach ZOSIA prezentowane są techniki i narzędzia, których zespoły "}
    a: (!~my_negation * more)
        {"programistyczne używają, by usprawnić swoją pracę. W związku z tym student ma szansę poznać wiele alternatywnych narzędzi i „metodyk”. Podczas tego kursu postaramy się uchwycić sens stojący za tymi technikami. Przyjrzymy się historii wielkich projektów informatycznych, ale również dokonaniom nauk społecznych i naszym własnym doświadczeniom.  Podczas pracowni spróbujemy poczuć, jakie problemy naturalnie pojawiają się w zespole programistycznym, i jak można je rozwiązywać za pomocą dostępnej dziś Inżynierii Zespołu Programistycznego. Zobaczymy jak planować projekt i co z tych planów potem wychodzi. Zrozumiemy do czego służą wzorce projektowe i jak "}



u: ([about happen] * "synthesis and sound processing") ^repeat() ^keep()
    {"Celem przedmiotu jest zapoznanie studentów z tematyką syntezy i przetwarzanie  dźwięku, w tym m. in.: "}
    a: (!~my_negation * more)
        {"\- metody kodowania dźwieku cyfrowa reprezentacja sygnału dźwiękowego  \- podstawowe cechy dźwięku głosność, obwiednia, wysokosc, barwa, faza itp. i ich reprezentacja w sygnale  \- synteza addytywna  \- filtry cyfrowe, synteza subtraktywna "}



u: ([about happen] * "seminar: information safety and security") ^repeat() ^keep()
    {"Seminarium dotyczy praktycznych metod wykrywania niepowołanego dostępu do informacji i zabezpieczania się przed  utratą informacji. "}
    a: (!~my_negation * more)
        {"Program:  Co najmniej 14 referatów poświęconych następującym zagadnieniom:  - przestępstwa  komputerowe,  - sposoby wykrywania włamań i gromadzenie dowodów przestępstw,  - metody zabezpieczania informacji, "}



u: ([about happen] * "computational photography") ^repeat() ^keep()
    {"Computational photography is a relatively new field at the convergence of  photography, computer vision, image processing, and computer graphics. Its "}
    a: (!~my_negation * more)
        {"goal is to overcome the limitations of traditional photography using computational techniques to enhance the way we capture, manipulate, and interact with visual media. This course covers fundamentals and applications of hardware and software techniques, with an emphasis on software methods. We will study many interesting, recent image based algorithms and implement them to the degree that is possible.  We will cover topics such as     Cameras and image formation "}



u: ([about happen] * "computer vision and photogrammetry") ^repeat() ^keep()
    {"In this course will look at different techniques to acquire 3D models from  images. During the course labs you will implement a 3D reconstruction "}
    a: (!~my_negation * more)
        {"pipeline, from 2D images to a 3D geometric model. We will also see some notions about SLAM and other applications of multi-view geometry.  \- Camera geometry and calibration  \- Feature detection and Matching  \- Stereo and Structure from Motion  \- Shape from Shading and Photometric Stereo "}



u: ([about happen] * "seminar: program certification in coq") ^repeat() ^keep()
    {"Overview: "}
    a: (!~my_negation * more)
        {"The Coq proof assistant provides a platform for interactive theorem proving and for constructing certified programs, i.e., accompanied by a machine- checked proof that the program satisfies its specification. Such a rigorous approach to program correctness is crucial when it comes to the verification of safety-critical software systems used in medicine, nuclear engineering or transport. It is also an active research direction in compiler verification, where the goal is to obtain a computer-checked certificate that the compiler does not introduce bugs.  This seminar is a continuation of the course Software foundations in Coq, "}



u: ([about happen] * "seminar: it security") ^repeat() ^keep()
    {"Celem seminarium jest zgłębienie pewnych aspektów szeroko rozumianego  bezpieczeństwa komputerowego zarówno z punktu widzenia teorii, jak i praktyki. "}
    a: (!~my_negation * more)
        {"Wśród zagadnień, spośród których będa wybierane tematy do prezentacji są następujące:     Access Control    Identity & Access Management    Network Security    Information Security    Risk Management    Software Development Security    Cryptography "}



u: ([about happen] * "introduction to lambda calculus") ^repeat() ^keep()
    {"Opis: "}
    a: (!~my_negation * more)
        {"Podczas wykładu chciałbym przedstawić rachunek lambda i jego rozwój.     Wykład powinien być elementarny, choć będzie wykorzystywać język      matematyczny, który powinien być znany z wykładu logiki dla informatyków.     Jego celem jest pokazanie, w jaki sposób kształtowały się pojęcia,     które dzisiaj są wykorzystywane w różnych językach programowania np. w Haskelu,     a także ich precyzyjne określenie i zdefiniowanie. Wykład zostanie uzupełniony      o uwagi historyczne i teoretyczne. Są łatwo dostępne i godne polecenia teksty     ułatwiające opanowanie proponowanego wykładu, na przykład niżej wspomniany     Introduction to Lambda Calculus. "}



u: ([about happen] * "application security") ^repeat() ^keep()
    {"Celem zajeć jest zaprezentowanie różnych aspektów bezpieczeństwa aplikacji.  Omówione zostaną często spotykane luki bezpieczeństwa wraz ze sposobami na ich "}
    a: (!~my_negation * more)
        {"unikanie, komponenty aplikacji krytyczne pod względem bezpieczeństwa oraz dodatkowe elementy związane z bezpieczeństwem, jak np. testowanie czy normy ISO. Wszystkie prezentowane zagadnienia będą podparte stroną praktyczną, czyli przeglądem produktów dostępnych na rynku wraz z przykładowym kodem w ulubionym języku programowania.   Program    1. Bezpieczeństwo informacji i aplikacji      wprowadzenie do zagadnienia "}



u: ([about happen] * "methods of convergence acceleration") ^repeat() ^keep()
    {"Celem seminarium jest zapoznanie jego uczestników z nowymi oraz z klasycznymi  metodami i algorytmami przyspieszania zbieżności ciągów, szeregów i ułamków "}
    a: (!~my_negation * more)
        {"łańcuchowych. Do zaliczenia zajęć konieczne będzie wygłoszenie referatu na temat zasugerowanej przez prowadzącego seminarium metody numerycznej, jak również jej zaimplementowanie oraz przetestowanie jej skuteczności.  Wymagania     analiza matematyczna,    analiza numeryczna L lub M,    umiejętność programowania w dowolnym języku z obliczeniami na liczbach zmiennoprzecinkowych najlepiej długiej precyzji "}



u: ([about happen] * "student apprenticeship") ^repeat() ^keep()
    {"Program praktyki zalezy od firmy w której się odbywa. Program praktyki zalezy od firmy w której się odbywa. "}
    a: (!~my_negation * more)
        {" "}



u: ([about happen] * "category theory") ^repeat() ^keep()
    {"Teoria kategorii to dość abstrakcyjny dział matematyki, który bada  struktury wspólne dla wielu, czasem nawet bardzo odległych dziedzin "}
    a: (!~my_negation * more)
        {"matematyki. Teoria kategorii to także pewien język opisu obiektów matematycznych, będący alternatywą dla języka teorii zbiorów.  Teoria kategorii okazuje się być bardzo użyteczna w informatyce, na przykład w teorii języków programowania. Pojęcia pochodzące z teorii kategorii przeniknęły też do codziennego warsztatu programisty pod postacią funktorów, monad itp. Przedmiot ten pozwoli zrozumieć skąd wzięły się te pojęcia, jakie są ich własności i jak je wykorzystać w praktyce.  Jedynym wymogiem wstępnym jest zdolność operowania podstawowymi pojęciami "}



u: ([about happen] * "design i deployment of cloud systems") ^repeat() ^keep()
    {"Celem zajęć jest przedstawienie tematów związanych z systemami działającymi na  nowoczesnych platformach public cloud przede wszystkim Amazon Web Services, "}
    a: (!~my_negation * more)
        {"Google Cloud Platform i Microsoft Azure. Znaczną część semestru poświęcimy zrozumieniu koncepcji umożliwiających budowanie systemów o wysokiej dostępności i skalowalności. Omawiane będą zarówno tematy związane z architekturą aplikacji, procesami umożliwiającymi jej rozwój, jak również całą infrastrukturą umożliwiającą działanie systemu wybór bazy danych i jej przygotowanie, komunikacja między usługami, sieć wewnętrzna, dystrybuowanie ruchu od użytkowników, globalny zasięg aplikacji.  Przedmiot ma na celu wyjaśnienie zależności pomiędzy wieloma różnymi aspektami związanymi z uruchamianiem systemów w chmurze, stąd przydadzą się podstawy z "}



u: ([about happen] * "seminar on networks and clouds") ^repeat() ^keep()
    {"Tematyka seminarium obejmuje problemy współczesnych sieci komputerowych i  telekomunikacyjnych, w tym dzisiejszego Internetu, budowę Content Delivery "}
    a: (!~my_negation * more)
        {"Networks, działanie systemów w chmurze, zagadnienia wysokiej dostępności i skalowalności usług. Zakres tematyki seminarium jest celowo bardzo duży - to, o czym będzie mowa na zajęciach zostanie ustalone w ich trakcie, w zależności od aktualnych zainteresowań uczestników. Zagadnienia sieci komputerowych są w naszym instytucie dosyć niszowe. Seminarium ma w zamierzeniu spełniać rolę swego rodzaju „koła zainteresowań”, skupiającego osoby zainteresowane sieciami komputerowymi, a nie przedmiotu, na którym omawia się szczegółowo jedną wybraną wąską specjalność. "}



u: ([about happen] * "capturing 3d humans project") ^repeat() ^keep()
    {"During this project we will implement a software system that will use RGB-D  Cameras Kinects working simultaneously to capture 3D objects in movement in "}
    a: (!~my_negation * more)
        {"real time. In particular, we are interested in capturing humans in movement.  During the project we will build a system that records video and depth maps, from different view points simultaneously, and merge the information of all view points into a coherent 3D model. In order to build this process we will learn, build and research about the following topics. Students all or some, depending on how many students will have access to the Kinect camera.  \- Camera Calibration and synchronization "}



u: ([about happen] * "computational photography b") ^repeat() ^keep()
    {"Computational photography is a relatively new field at the convergence of  photography, computer vision, image processing, and computer graphics. Its "}
    a: (!~my_negation * more)
        {"goal is to overcome the limitations of traditional photography using computational techniques to enhance the way we capture, manipulate, and interact with visual media. This course covers fundamentals and applications of hardware and software techniques, with an emphasis on software methods. We will study many interesting, recent image based algorithms and implement them to the degree that is possible.  We will cover topics such as     Cameras and image formation "}



u: ([about happen] * "course: practical software development") ^repeat() ^keep()
    {"Practical Software Development "}
    a: (!~my_negation * more)
        {"Have you ever wondered how enterprise-class software development looks like? What are the technologies used by big software companies and what skillset is necessary to succeed? If your answer is yes this Credit-Suisse sponsored course might be designed just for you.  Goal  The goal is to replace component by component a legacy and underperforming option trading system. The architecture of new solution is designed to closely mimic real-life trading systems with all main components in place. Over the "}



u: ([about happen] * "project: autonomous martian rover") ^repeat() ^keep()
    {"Chcemy aby nasz instytutowy łazik potrafił objechać budynek Instytutu  wykorzystując jedynie kamery pokładowe. Pokażmy, że nie tylko w dolinie "}
    a: (!~my_negation * more)
        {"krzemowej powstają pojazdy autonomiczne!      Uwaga:   Projekt odbędzie się w obydwu semestrach, dopuszczalny jest wielokrotny udział jednego studenta w projekcie.   Prace wykonane w projekcie mogą stanowić część pracy inżynierskiej lub magisterskiej.      Nasz uniwersytecki łazik jest świetną platformą do poznawania algorytmów potrzebnych w autonomicznych pojazdach: całe sterowanie jest cyfrowe podobnie "}



u: ([about happen] * "automated verification") ^repeat() ^keep()
    {"Half-semester the first half of the summer semester introductory course to  automated verification by model checking. Students are encouraged to take "}
    a: (!~my_negation * more)
        {"deductive verification course with Małgorzata Biernacka in the second half of the semester.  Model checking is a collection of algorithmic techniques to verify i.e., prove or disprove if a given model of a computer system software or hardware meets its formal specification. The specification is given as a formula in temporal logic. In this course we want to introduce basic concepts of the theory behind model checking. "}



u: ([about happen] * "games, automata, logics, and formal verification") ^repeat() ^keep()
    {"This course provides an introduction to some of the central ideas of formal  methods in computer science. We mainly focus on as a set of mathematical tools "}
    a: (!~my_negation * more)
        {"for understanding complex systems, motivated by Computer-Aided Verification.  The lecture will discuss three interconnected research fields:     Automata on infinite words and trees     Logical systems such as temporal and modal logics for specifying operational behaviour    Two-person games as a conceptual basis for understanding interactions between a system and its environment  This course will focus on the theoretical underpinnings, but it might also include a small practical project. "}



u: ([about happen] * "scientific writing") ^repeat() ^keep()
    {"Ten przedmiot jest równoważny seminarium na studiach II stopnia. "}
    a: (!~my_negation * more)
        {"Planowane zajęcia przeznaczone są przede wszystkim dla doktorantów i studentów, którzy zamierzają zajmować się pracą twórczą.  Zajęcia będą miały formę warsztatów. Uczestnicy będą pisali teksty, które będą potem wspólnie poprawiane tak, aby ostateczne wersje były precyzyjne i zrozumiałe. Ćwiczona będzie też zwięzłość.  Planuję trzy typy ćwiczeń:    1. Zapisywanie nieco bardziej złożonych rozumowań takich jak trudniejsze zadania z JFiZO, po polsku i po angielsku. "}



u: ([about happen] * "design and implementation of advanced php applications") ^repeat() ^keep()
    {"Na przestrzeni ostatnich 3-4 lat język PHP przeszedł ogromną metamorfozę.  Engine języka został całkowicie przeprojektowany, składnia języka rozszerzona, "}
    a: (!~my_negation * more)
        {"a w ekosystemie pojawiły się narzędzia, bez których trudno wyobrazić sobie prowadzenie nowoczesnego projektu webowego. Rozwinięciu uległy także frameworki, odciążające programistę z powtarzalnych problemów i pozwalające na skupienie uwagi na implementacji wymagań biznesowych. Zespoły pracujące nad nowoczesnymi aplikacjami opartymi o PHP wykorzystują m.in. techniki OOP, DDD, CQRS, Event Sourcing do implementacji skalowalnych i rozproszonych systemów o złożonej logice.   W trakcie zajęć zapoznamy się więc zarówno z aktualnie wykorzystywanym ekosystemem PHP narzędzia, frameworki, etc. jak i podejściami wykorzystywanymi przy projektowaniu bardziej złożonego oprogramowania OOP, "}



u: ([about happen] * "project: creating a chatbot") ^repeat() ^keep()
    {"Celem projektu jest utworzenie bota konwersacyjnego, który mógłby rozmawiać na tematy wszelakie, w szczególności na te związane ze studiami w naszym instytucie. Bardzo istotną funkcją będzie również odpowiadanie na pytania, odwołujące się do wiedzy ogólnej czerpanej z Wikipedii i innych źródeł. Podstawowym językiem pracy bota będzie język polski, ale być może rozważymy też wprowadzenie innych języków angielskiego, ukraińskiego, hiszpańskiego. Podczas spotkań będziemy używać języka polskiego, chyba że będzie na sali osoba preferująca język angielski. "}
    a: (!~my_negation * more)
        {"Bot w założeniu będzie dość złożonym systemem, który łączy tradycyjne podejście oparte na wzorcach z różnymi zagadnieniami związanymi z przetwarzaniem tekstów, sieciami neuronowymi, ekstrakcją informacji, modelowaniem języka, etc.  Niektóre spotkania mogą mieć postać mini-seminariów, podczas których studenci będą przedstawiać prace naukowe związane z agentami konwersacyjnymi i odpowiadaniem na pytania oczywiście takie prace, które mają szansę być wykorzystane w projekcie  Można te zajęcia traktować jako kontynuacje przedmiotów Eksploracja tekstów oraz Neural Networks and Natural Language Processing, ale uczestnictwo w którymś z tych kursów nie jest ścisłym wymaganiem Ponadto niektóre trudne zadania będziemy realizować w łatwych wersjach, koncentrując się na praktycznym wykorzystaniu pewnych technologii, pomijając lub redukując ich podstawy teoretyczne. "}



u: ([about happen] * "principles of programming languages") ^repeat() ^keep()
    {"Overview: "}
    a: (!~my_negation * more)
        {"This course provides students with a deep, working understanding of the essential concepts of programming languages. These concepts relate to the semantics of computer programs and are presented in terms of interpreters and typecheckers, implemented in one of the modern functional languages such as Ocaml, Racket, or Haskell. The course offers both an analytic view of the semantics of programming constructs and a hands-on approach to the executable semantics. In particular, the students are required to implement a number of small interpreters on a weekly basis, and to carry out a final project concerning an implementation of a bigger interpreter or a related programming language processor. "}



u: ([about happen] * "project: evolutionary construction of 2d wheeled vehicles") ^repeat() ^keep()
    {"Projekt dotyczy zastosowania algorytmów ewolucyjnych do konstruowania pojazdów  kołowych w środowisku Box2D. Przykładową realizację można zobaczyć na filmie "}
    a: (!~my_negation * more)
        {"opublikowanym na YouTube <https:  www.youtube.com watch?v=uxourrlPlf8>.  Celem projektu jest opracowanie algorytmów ewolucyjnych umożliwiających konstruowanie pojazdów kołowych zdolnych do pokonania zadanych tras, ich implementacja wraz z wizualizacją rezultatów oraz wykonanie eksperymentów obliczeniowych potwierdzających skuteczność opracowanych algorytmów. W zależności od efektywności algorytmów i ich czasu działania, implementacja może być przeznaczona albo do obliczeń na pojedynczych komputerach, albo do obliczeń równoległych lub rozproszonych na klastrze obliczeniowym w II UWr lub w WCSS. "}



u: ([about happen] * "internet of things") ^repeat() ^keep()
    {"Celem przedmiotu jest zaprezentowanie zagadnień związanych z szerego  rozumianym tzw. Internetem rzeczy. "}
    a: (!~my_negation * more)
        {"Program    1. Architektura rozwiąząń IoT   2. Przegląd rozwiązań chmurowych wspierających architekturę IoT   3. Pojęcia Edge i Fog computing   4. Wprowadzenie do programowania na Raspberry Pi   5. Interakcja z rzeczami   6. Przegląd wzorców komunikacyjnych z zastosowaniem dedykowanych protokołów   7. Cykl życia urządzeń i związane z tym wyzwania "}



u: ([about happen] * "seminar: probabilistic graphical models") ^repeat() ^keep()
    {"Modele graficzne pozwalają na zapis złożonych rozkładów prawdopodobieństwa w  formie grafu interakcji między zmiennymi: prawdopodobieństw warunkowych grafy "}
    a: (!~my_negation * more)
        {"skierowane oraz funkcji potencjału grafy nieskierowane. Taki zapis umożliwia nam wprowadzenie do modelu naszej wiedzy o zależnościach między zmiennymi, prowadzenie rozważań jak nasza wiedza o zmiennych wpływa na niezależności warunkowe albo nawet na rozważanie relacji przyczynowo- skutkowych. Możemy też prowadzić wnioskowanie: wyznaczyć rozkład na pewnym zbiorze zmiennych uwarunkowany na innych zmiennych. Choć dokładne wnioskowanie jest często niewykonalne, istnieje szereg metod przybliżających dokładne wyniki filtry cząsteczkowe, aproksymacje wariacyjne. Modele graficzne są bardzo ogólne i umożliwiają spójne traktowanie łańcuchów Markowa stosowanych w rozpoznawaniu mowy, filtrów Kalmana stosowanych w robotyce, czy warunkowych "}



u: ([about happen] * "ray tracing project") ^repeat() ^keep()
    {"Celem projektu jest nabycie umiejętności implementacji efektywnych struktur  przyspieszających ray tracing. W ramach przedmiotu po omówieniu metod "}
    a: (!~my_negation * more)
        {"przyspieszania przedstawię podstawy fizyczne transportu światła, które pozwolą na wyprowadzenie poprawnego algorytmu obliczającego oświetlenie path tracer. W ramach projektu każdy napisze od podstaw własny ray tracer dokładniej path tracer.  Program:     Metoda śledzenia promieni i algorytmy przyspieszające    Przegląd struktur przyspieszających i heurystyki dla ich konstrukcji    Podstawy fizyczne transportu światła "}



u: ([about happen] * "seminar on it security, cloud computing, microservices, and devops") ^repeat() ^keep()
    {"Celem seminarium jest zgłębienie aspektów bezpieczeństwa w nowych obszarach  jak Internet of Things, Cloud Computing, Microservices czy DevOps. "}
    a: (!~my_negation * more)
        {" "}



u: ([about happen] * "blockchain and its applications") ^repeat() ^keep()
    {"Celem przedmiotu jest zapoznanie studentów z technologią blockchain,  podstawami teoretycznymi oraz jej bardzo szeroko rozumianymi zastosowaniami. W "}
    a: (!~my_negation * more)
        {"planach jest również utworzenie prostej aplikacji wykorzystującej tę technologię. "}



u: ([about happen] * "programming in scala") ^repeat() ^keep()
    {"Celem zajęć jest zapoznanie studentów ze współczesnym wieloparadygmatycznym  językiem programowania Scala. Scala jest posadowiona na platformie JVM a "}
    a: (!~my_negation * more)
        {"także .NET. Scala jest językiem skalowalnym, tzn. ten sam mechanizm językowy równie dobrze opisuje małe, jak i duże komponenty programowe.  Najważniejsze cechy języka Scala są przedstawione na stronie: <http:  docs.scala-lang.org tour tour-of-scala.html>     Scala jest językiem z silną typizacją statyczną system typów zarówno nominalny, jak i strukturalny, łączącym programowanie obiektowe i funkcyjne.    Scala jest językiem obiektowym, w którym każda wartość jest obiektem, a każda operacja jest metodą.    Scala jest językiem funkcyjnym, w którym każda funkcja jest wartością pierwszej kategorii.    Scala umożliwia użycie mechanizmu dopasowania do wzorca. "}



u: ([about happen] * "seminar: parameterized algorithms") ^repeat() ^keep()
    {"The course will be given by Syed Mohammad Meesum. "}
    a: (!~my_negation * more)
        {"The course will be providing an introduction to the field of Parameterized Complexity.     We will begin with stating the basic definitions and goals of the subject.     I particular we would be focussing on the following.          1. Kernelization -- compressing input instances.     2. Branching and bounded-depth search trees.     3. Iterative Compression - a general template for solving some graph deletion problems. "}



u: ([about happen] * "seminar: theory of linear and integer programming") ^repeat() ^keep()
    {" "}
    a: (!~my_negation * more)
        {" "}



u: ([about happen] * "seminarium: pathfinding algorithms") ^repeat() ^keep()
    {"Pathfinding algorithms "}
    a: (!~my_negation * more)
        {"Seminarium ma na celu pokazanie, że problem wyszukiwania drogi na algorytmie A się nie kończy, a dopiero zaczyna. A także, że jest to problem bardzo różnorodny, w praktyce występujący w wielu odmianach i często podlegający dodatkowym ograniczeniom.  W tym celu chciałbym abyśmy opowiedzieli sobie m.in. o     niestandardowych funkcjach heurystycznych rodzina ALT, ...    hierarchicznych podejściach do przeszukiwania HPA i rozszerzenia    asymetrycznych algorytmach dla grafów typu uniform grid JPS, JPS+, ... "}



u: ([about happen] * "operating systems (advanced)") ^repeat() ^keep()
    {"Na wykładzie skupimy się na poznawaniu funkcji jądra systemu operacyjnego  udostępnianych programiście systemowemu. Oprócz tematów wspólnych dla "}
    a: (!~my_negation * more)
        {"większości SO będziemy zapoznawać się z rozwiązaniami dostępnymi w systemach uniksowych i uniksopodobnych Linux, FreeBSD, NetBSD, MacOSX, QNX, MINIX3.   Wprowadzenie 4h     Jądro, system operacyjny, dystrybucja.    Rodzaje systemów operacyjnych wbudowane, czasu rzeczywistego, rozproszone.    Najważniejsze osiągnięcia w dziedzinie systemów operacyjnych.    Wywołania systemowe i komunikacja programów z jądrem.    Architektura jądra systemu operacyjnego jądra monolityczne, mikrojądra, exokernel. "}



u: ([about happen] * "semantics of programming languages") ^repeat() ^keep()
    {"Przedmiot stanowi wprowadzenie do formalnych technik opisu semantyki  znaczenia języków programowania oraz formalnych metod wnioskowania o "}
    a: (!~my_negation * more)
        {"programach komputerowych. Omawiane na przedmiocie formalizmy znajdują zastosowanie w projektowaniu i implementacji języków programowania, a także w konstrukcji i weryfikacji oprogramowania. Wśród poruszanych tematów znajdą się:     definicje indukcyjne    semantyka obliczeń imperatywnych, w tym semantyka operacyjna naturalna oraz denotacyjna elementy teorii dziedzin    semantyka obliczeń z interakcją wejście wyjście i lub procesy współbieżne, strukturalna semantyka operacyjna i etykietowane systemy przejść, koindukcja i bisymulacje     semantyka programów funkcyjnych, w tym rachunek lambda i jego rozszerzenia jako modelowy język funkcyjny semantyka redukcyjna, maszyny abstrakcyjne, kontynuacje    systemy typów, w tym typy proste typowanie syntaktyczne, terminacja obliczeń, relacje logiczne, polimorfizm parametryczny darmowe twierdzenia, modularność typowanie semantyczne, typy rekurencyjne indeksowane relacje logiczne, równoważność kontekstowa programów, zaawansowane systemy typów mutowalny stan, współbieżność, systemy typów i efektów. "}



u: ([about happen] * "seminar: software engineering") ^repeat() ^keep()
    {"Podczas seminarium omawiane są efektywne metody i standardy stosowane podczas  wytwarzania oprogramowania. Referaty dotyczą zwinnych i ciężkich metodologii "}
    a: (!~my_negation * more)
        {"wytwarzania oprogramowania, stosowanych metod i narzędzi..  Podczas seminarium studenci równiez dzileą się wiedzą nt metod i narędzzi inzynierii oprogramowania stosowanych w firmach w kktórych pracowali pracują ew. byli na praktyce. "}



u: ([about happen] * "seminar: games and game playing") ^repeat() ^keep()
    {"Na seminarium będziemy referować oryginalne prace dotyczące  gier w sensie klasycznym takich jak szachy czy gra w karty. "}
    a: (!~my_negation * more)
        {"Prace do omówienia będą pochodzić głównie z wiodących konferencji i obejmuje tematykę Game Playing: tworzenie agentów graczy, języki opisu gier, rozwiązywanie gier, sztuczna inteligencja w grach, złożoność gier i General Game Playing. Podam konkretne propozycje, ale będzie można również zaproponować własną o ile będzie związana z tematem.  W szczególności poszukuję grupy studentów do współpracy. Proponuję dołączenie do mojego projektuhttps:  sites.google.com a cs.uni.wroc.pl msz home cooperation. W jego ramach można będzie wykonać pracę badawczo-rozwojową, której zaprezentowanie będzie również formą zaliczenia seminarium.  Trudność będzie zróżnicowana. Przedmiot powinien być przystępny także dla studentów I stopnia od trzeciego semestru.  --- "}



u: ([about happen] * "seminar: algebraic effects") ^repeat() ^keep()
    {"Programming with algebraic effects and handlers is a novel technique of  representing computational effects such as exceptions, mutable state, or "}
    a: (!~my_negation * more)
        {"nondeterminism, in a modular way, making it possible to program against an interface, and with a number of different effects simultaneously, which is where the more traditional monadic approach often falls short. Effects and their handlers are rapidly making their way into practical programming, in the form of dedicated languages e.g., Eff and Koka, extensions of existing languages e.g., OCaml and libraries.  In this seminar we are going to read a collection of recent research papers on algebraic effects, identify future research directions in this area and discuss the design and implementation of a prototypical programming language "}



u: ([about happen] * "course: graph databases") ^repeat() ^keep()
    {"The course will be held in the first half of the semester. "}
    a: (!~my_negation * more)
        {"The main topic of the course is the graph database engine Neo4j and its query language CYPHER. During the labs we are going to query various interesting graph data collections available e.g., Paradise papers, Russian trolls.  Addtionaly, we can spend some time on RDF & SPARQL see Wikidata Query Servicehttps:  query.wikidata.org , Apache TinkerPop & Gremlin, Spark and GraphX GraphFrames.  Links: "}



u: ([about happen] * "53m1n4r1um dl4 h4k3r0w") ^repeat() ^keep()
    {"Seminarium jest przeznaczone przede wszystkim dla studentów, którzy biorą lub  zamierzają brać udział w zawodach informatycznych dotyczących bezpieczeństwa "}
    a: (!~my_negation * more)
        {"komputerowego, takich jak Capture the Flaghttps:  ctftime.org . Na zajęciach zostaną przedstawione popularne podatności oraz różne techniki ich wykorzystywania do przełamywania zabezpieczeń, np.:     SQL Injection,    XSS Injection,    Buffer overflow,    Heap overflow i inne.  W referatach będą też omówione m.in.: "}



u: ([about happen] * seminar: category theory and programming languages) ^repeat() ^keep()
    Sorry, there was no information for seminar: category theory and programming languages provided.


u: ([about happen] * "seminarium: silnik unity i wirtualna rzeczywistość") ^repeat() ^keep()
    {"Seminarium będzie obejmować zaawansowane aspekty programowania w silniku  Unity. "}
    a: (!~my_negation * more)
        {"Każdy ze studentów przygotuje godzinny wykład na jeden z tematów np:  \- oświetlenia  \- modelowania, teksturowania i importu assetów  \- animacji  \- materiałów w tym Physically Based Shading materials "}



u: ([about happen] * "projekt zespołowy: silnik unity3d i wirtualna rzeczywistość lato") ^repeat() ^keep()
    {"Kontynuacja kursu programowania gier w silniku Unity3D, tym razem jako projekt  zespołowy. "}
    a: (!~my_negation * more)
        {"Dla osób znających Unity3D poprzedni przedmiot nie jest wymagany.  Studenci tworzą 4-7 osobowe grupy które pracują nad własną grą. Przynajmniej jedna z gier jest pisana pod system wirtualnej rzeczywistości HTC VIVE.  Na części seminaryjnej studenci przedstawiają godzinny wykład na temat zaawansowanych aspektów Unity, druga godzina przeznaczona jest na spotkanie Scrumowe na którym analizowany jest aktualny postęp prac nad grą oraz przydzielane są nowe zadania. "}



u: ([about happen] * "program interaction: bisimulation and coinduction") ^repeat() ^keep()
    {"This seminar is an introduction to bisimulation and coinduction - techniques for reasoning about, possibly infinite, computing processes that interact with other processes and or the environment in which they are run. The goal of the seminar is to familiarize the students with the mathematical foundations of bisimulation and coinduction, and to present their applications in various areas, including the semantics of infinite data structures e.g., streams and the theory of program equivalence in sequential languages e.g., the Lambda-Calculus as well as the theory of concurrent mobile communicating processes e.g., CCS, the Pi-Calculus. This seminar is an introduction to bisimulation and coinduction - techniques for reasoning about, possibly infinite, computing processes that interact with other processes and or the environment in which they are run. The goal of the seminar is to familiarize the students with the mathematical foundations of bisimulation and coinduction, and to present their applications in various areas, including the semantics of infinite data structures e.g., streams and the theory of program equivalence in sequential languages e.g., the Lambda-Calculus as well as the theory of concurrent mobile communicating processes e.g., CCS, the Pi-Calculus. "}
    a: (!~my_negation * more)
        {" "}



u: ([about happen] * "project: digital experience & internet of things") ^repeat() ^keep()
    {"Celem przedmiotu jest utworzenie kompletnego rozwiązania wspierającego pewne dobrze określone oczekiwanie biznesowe. Rozwiązanie powinno być oparte o wybrane technologie związane z Internetem rzeczy oraz o dodatkowe technologie jak EDGE computing, machine learning czy analiza danych i raportowanie. Dokładny zakres wybranych technologii, jak i scenariusz biznesowy będzie zależał od doświadczeń i umiejętności zapisanych studentów. "}
    a: (!~my_negation * more)
        {"Same zajęcia będą przebiegały zgodnie z następującymi zasadami: - Studenci będą pracować w grupach 3-5 osobowych wg. uzgodnionej metodyki zwinnej preferowany będzie SCRUM - W każdej grupie zostaną przypisane odpowiednie role zgodne z wybraną metodyką - Do pracy w grupie będą wykorzystane odpowiednie narzędzia w chmurze np. Azure DevOps, dające oczekiwaną elastyczność i transparentność - Podział prac w zespole powinien być w miarę równomierny i jedna z ról w zespole będzie za to odpowiedzialna - Niektóre wybrane zajęcia będą miały charakter seminaryjny, na których wybrane osoby przedstawią zagadnienie oraz Proof of Concept PoC fragmentu niezbędnego do realizacji całości - W określonym harmonogramie zespół będzie miał za zadanie zaprezentować bieżący postęp prac w postaci działającego fragmentu rozwiązania demo. Szczegóły będą uzgodnione na pierwszych zajęciach.  Wybrane projekty będą mogłyby być zarówno charakter bardziej inżynieryjny prowadzący do jasno określonego lub też bardziej badawczy mający na celu weryfikację kilku wariantów i przedstawienia dobrze umotywowanej rekomendacji. Istnieje potencjalna możliwość zdefiniowania oczekiwania biznesowego związanego z realnymi potrzebami z sektora automotive. "}



u: ([about happen] * "artificial intelligence. seminar") ^repeat() ^keep()
    {"Seminarium będzie rozwinięciem pewnych wątków przedmiotu Sztuczna inteligencja, w szczególności zagadnienia uczenia ze wzmocnieniem, dowodzenia twierdzeń, sieci Bayesowskich, rozwiązywania więzów. Niektóre tematy wystąpień będą prezentacją klasycznych wyników, ale pojawią się rówwnież tematy nawiązyjące do obecnych badań naukowych z tej dziedziny.  W przypadku, gdy na seminarium zapisze się osoba nie mówiąca po polsku, wówczas zajęcia będą prowadzone w języku angielskim. "}
    a: (!~my_negation * more)
        {" "}



u: ([about happen] * "information and coding theory") ^repeat() ^keep()
    {"Teoria informacji bada zagadnienia takie jak: mierzenie ilości informacji w ciągu danych, ograniczenia na przetwarzanie danych czy ograniczenia komunikacji. Teoria informacji powstała by odpowiedź na pytania takie jak: jaki jest optymalny kompresor dla danego typu danych, albo jak szybko możemy przesyłać informacje przez kanał komunikacji. "}
    a: (!~my_negation * more)
        {"Przedmiot zaczniemy od przedstawienia klasycznych zagadnień teorii informacji. Następnie skupimy się na zastosowaniu tych zagadnień: pokażemy dolne i górne granice dla kompresji danych, co więcej pokażemy, że wiele współcześnie stosowanych metod kompresji, pomimo faktu, że wydają się tylko heurystykami, ma teoretyczne podstawy omówimy zarówno bezstratne jak i stratne algorytmy. Oprócz klasycznych wyników pokażemy też te bardziej współczesne, np. jak teoria informacji pomaga uzyskać dolne granice dla uczenia maszynowego.  Wykład prowadzony będzie przez pierwszą połowę semestru.  Przedmiot jest niezależny i rozłączny od przedmiotu Kompresja Danych i można zaliczać oba przedmioty jednocześnie. W porównaniu do Kompresji Danych ten przedmiot jest nastawiony w o wiele większym stopniu na aspekty teoretyczne, np. gdy Kompresja Danych przedstawia szereg algorytmów kompresji i daje intuicje dlaczego działają, my pokażemy twierdzenia mówiące o skuteczności niektórych z nich.   Zagadnienia: - Miary informacji: entropia, dywergencja, informacja wspólna, łańcuchy Markova, nierówność przetwarzania danych - Kompresja bezstratna: kody o zmiennej długości, źródła ergodyczne, kodowanie uniwersalne "}



u: ([about happen] * "half-semester course: quantum algorithms") ^repeat() ^keep()
    {"Przedmiot prowadzony w drugiej połowie semestru wiosennego "}
    a: (!~my_negation * more)
        {"Algorytmy kwantowe, takie jak Algorytm Shora funkcjonują wśród informatyków raczej jako hasło, niż konkretna wiedza. Na tym przedmiocie spróbujemy wyjaśnić, co się&nbsp;za tym hasłem kryje i jak informatycy do tego doszli.  Przedmiot nie wymaga rozumienia fizyki, prowadzący również jej nie rozumie i wprowadzi tylko tyle, ile informatyka wymaga.  Przedmiot ten może być interesujący dla ambitnych studentów pierwszego roku, którzy chcieliby posmakować zaawansowanego kursu teoretycznego i uważali na pierwszej połowie kursu z Algebry. "}



u: ([about happen] * "seminar: selected topics in proof theory") ^repeat() ^keep()
    {"Celem przedmiotu jest omówienie wybranych zagadnień związanych z pojęciem dowodu jako obiektu matematycznego, który ma precyzyjnie określoną strukturę i którego własności możemy formalnie opisywać. Elementy teorii dowodu pojawiały się już przy innych okazjach, m. in. w związku z wnioskowaniem w logice konstruktywnej i izomorfizmem Curry'ego-Howarda. "}
    a: (!~my_negation * more)
        {"Seminarium będzie obejmowało wykłady wprowadzające, prezentacje studentów oraz część praktyczną.  Najważniejsze zagadnienia: 1. Formalne systemy wnioskowania i ich własności. Dedukcja naturalna, rachunek sekwentów, system Hilberta dla logiki intuicjonistycznej. 2. Normalizacja dowodów. 3. Systemy wnioskowania dla logiki klasycznej i logik pośrednich. 4. Translacje pomiędzy systemami logicznymi. 5. Problem automatycznego znajdowania dowodów w systemach logicznych. "}



u: ([about happen] * "scheduling theory") ^repeat() ^keep()
    {"There is a plethora of job scheduling problems, whose common denominator is that there is a given set of jobs with various parameters and a number of machines that they have to be scheduled on so that a certain objective function is optimized.  The jobs have several parameters, such as processing times or sizes, release times, weights that capture their importance, and, in some variants, deadlines.   A few examples were studied in the Algorithms and Data Structures course, but these were relatively simple.  Most scheduling problems, particularly when more than one machine is available, are computationally hard, so we will typically consider approximation. "}
    a: (!~my_negation * more)
        {"Sometimes we will restrict our attention to online algorithms, which seem particularly well suited to real life scheduling problems.  In particular, we might study nonclairvoyant scheduling, where on top of not knowing the jobs that will arrive later in time, the scheduler does not know the size processing time of each available job until it is processed till completion.  We may or may not touch upon stochastic scheduling, where the actual size of a job is a random variable whose distribution is known.  We will survey fundamental scheduling problems.  This means that we will consider:  different objective functions, such as   maximum weighted completion time,   average total weighted completion time,   maximum weighted flow time,   average total weighted flow time,   maximum weighted tardiness, "}



u: ([about happen] * "workshop on deep learning") ^repeat() ^keep()
    {"Zajęcia będą miały formę praktycznych warsztatów prowadzonych przez doświadczonych pracowników firm: AlphaMoon, EY, MicroscopeIT, NeuroSys i Tooploox. "}
    a: (!~my_negation * more)
        {"Tematy poruszane na warsztatach to, m.in.:  wprowadzenie do ML DL ang. deep learning 4 spotkania   framework Tensorflow   sieci neronowe typu MLP i CNN   przetwarzanie obrazów,   DL w NLP  Semantic i instance segmentation 2D, autonomiczne pojazdy  U-Net 3D w obrazowaniu medycznym  wprowadzenie do reinforcement learning RL, Q-Learning  Deep Q-Learning, przykłady w gym od OpenAI "}



u: ([about happen] * "seminar: data mining - data classification and clustering") ^repeat() ^keep()
    {"UWAGA: W przypadku takiej konieczności, w roku akademickim 2020 21 zajęcia mogą być prowadzone zdalnie przez Google Meet lub podobne narzędzie interaktywnej komunikacji. "}
    a: (!~my_negation * more)
        {"Seminarium będzie poświęcone dwóm popularnym zagadnieniom eksploracji danych: klasyfikacji i grupowaniu danych. Stanowią one podstawy wielu systemów ekspertowych, systemów klasyfikacji i rozpoznawania obiektów czy systemów wspomagania decyzji. Celem seminarium będzie omówienie podstawowych algorytmów tej dziedziny, ich współczesnych zastosowań w praktyce oraz istniejących narzędzi umożliwiających klasyfikację i grupowanie. "}



u: ([about happen] * "programming project: online judge system") ^repeat() ^keep()
    {"Projekt zakłada: "}
    a: (!~my_negation * more)
        {"interfejs webowy, backend w Python z użyciem frameworka Flask, komunikacją z bazą danych SQL z użyciem ORM SQLAlchemy, biblioteką Babel do obsługi wielu języków i paru innych bibliotek, frontend Javascript, Bootstrap etc.  dość skomplikowany interfejs CLI ułatwiający przygotowywanie nowych zadań lub importowanie starych z różnych źródeł,  sandbox napisany w C,  moduły sprawdzania - kombinacja C++ i Python + serwer rozdzielający pracę pomiędzy kilka maszyn,  kilka pomniejszych narzędzi pobocznych dla użytkowników,  przygotowanie narzędzi pozwalających na zarządzanie kodem, deployment, zarządzanie sprawdzaniem etc.  Studenci w mniejszych zespołach 2-4 osoby pracują nad małymi projektami wybranym fragmentem systemu np. drzewo konkursów, uprawnienia użytkowników, ranking i co tydzień prezentują progres w pracach. Projekty mają być krótsze niż cały semestr, więc każdy powinien być częścią kilku zespołów i wykonać kilka projektów.  Na pierwszych zajęciach zaprezentujemy planowaną architekturę systemu, listę projektów oraz architekturę bieżącego systemu Solve 3 i problemy z nim związane. "}



u: ([about happen] * "data mining") ^repeat() ^keep()
    {"Systemy informatyczne stosowane są do przetwarzania coraz większej ilości  danych dostarczanych codziennie przez przemysł, handel, urzędy statystyczne "}
    a: (!~my_negation * more)
        {"czy administrację państwową. W związku z tym coraz częściej dostrzegalna jest różnica między daną a informacją - mimo dużej ilości dostępnych danych, nierzadko pojawiają się problemy z uzyskaniem konkretnych informacji w nich zawartych.  Eksploracja danych ang. data mining jest nowoczesną dziedziną informatyki, rozwijaną dynamicznie w ostatnich latach w ośrodkach naukowych na całym świecie, której celem jest dostarczanie algorytmów i technik przetwarzania danych umożliwiających pozyskiwanie nietrywialnej wiedzy ze zgromadzonych dużych ilości danych. Metody eksploracji danych opierają się głównie na "}



u: ([about happen] * "java course") ^repeat() ^keep()
    {"Java to potężny współczesny obiektowy język programowania, wyposażony w olbrzymią ilość dobrze udokumentowanych bibliotek i wiele technologi wspomagających sprawne i szybkie tworzenie aplikacji.  Prace nad tym językiem rozpoczęły się w 1991 roku "}
    a: (!~my_negation * more)
        {"w firmie Sun Microsystems pod kierownictwem Jamesa Goslinga.  Pierwsza wersja tego języka wraz z kompilatorem i platformą uruchomieniową JVM została jednak wypuszczona na rynek dopiero w 1996 roku.  Od momentu powstania Javy język ten przeżył bardzo dynamiczny rozwój a zainteresowanie nim bardzo duże.  W roku 2010 Javę wraz z firmą Sun przejęła firma Oracle, która intensywnie inwestuje w rozwój języka i narzędzi, które go wykorzystują do tworzenia nowych aplikacji.  Język Java przyciągnął wiele milionów programistów.  Znajduje zastosowanie w każdej ważniejszej gałęzi przemysłu IT i jest obecny w różnego rodzaju urządzeniach, komputerach i sieciach.  Popularność Javy wynika przede wszystkim z przenośności programów i niezależności od konkretnej platformy sprzętowej, a co za tym idzie, ma zastosowanie w Internecie oraz ogólnie w aplikacjach sieciowych.  Jego podstawowe koncepcje zostały przejęte z języka Smalltalk maszyna wirtualna, odśmiecanie pamięci oraz z języka C++ znaczna część składni i słów kluczowych. "}



u: ([about happen] * "data compression") ^repeat() ^keep()
    {"Celem przedmiotu jest zaprezentowanie podstawowych metod bezstratnej i stratnej kompresji danych. Prezentacji poszczególnych metod towarzyszyć będzie omówienie i porównanie ich efektywności, zastosowań, wykorzystujących je standardów. Przy analizie metod bezstratnych zaprezentowane zostaną niezbędne podstawy teorii informacji i ich konsekwencje dla oceny jakości poszczególnych metod. Omówione zostaną zagadnienia stratnej kompresji danych multimedialnych. "}
    a: (!~my_negation * more)
        {"Poruszane też będą kwestie efektywnej implementacji prezentowanych algorytmów.      W ramach przedmiotu omawiane będą następujące zagadnienia:        1. Modelowanie danych, podstawowe pojęcia teorii informacji i kodowania, kody Shannona-Fano. 2. Kody Huffmana, dynamiczne kody Huffmana.  3. Kodowanie arytmetyczne, standard JBIG.  4. Metody słownikowe LZ77, LZ78 i ich niektóre zastosowania GIF, TIFF, dane przesylane faksem. "}



u: ([about happen] * "history of philosophy (w)") ^repeat() ^keep()
    {"W przypadku konieczności prowadzenia zajęć zdalnie, ten przedmiot będzie prowadzony przez MS Teams. "}
    a: (!~my_negation * more)
        {"Tematy, problematyka i materiały na zajęcia z informatyki, w rok. akadem. 2018-2019, sem. letni.  Zakładane efekty kształcenia: student wykazuje się znajomością podstawowych problemów z filozofii w proponowanym zakresie; relacji między filozofią a nauką oraz między różnymi typami wiedzy naukowej, w stopniu umożliwiającym interdyscyplinarny ogląd nauki. Zna i prawidłowo stosuje podstawową terminologię filozoficzną metodologiczną, logiczną itp.. Potrafi przedstawić podstawowe zagadnienia z zakresu logiki i filozofii języka, szczególnie w "}



u: ([about happen] * data science@nokia) ^repeat() ^keep()
    Sorry, there was no information for data science@nokia provided.


u: ([about happen] * "logic for computer science") ^repeat() ^keep()
    {"Program: "}
    a: (!~my_negation * more)
        {"1. Zasada indukcji.   2. Składnia i semantyka rachunku zdań i rachunku predykatów. Pojęcie spełniania i prawdziwości formuł. Niesprzeczność zbioru formuł.   3. Podstawowe pojęcia teoriomnogościowe i operacje na zbiorach: suma, iloczyn, iloczyn kartezjański, zbiór potęgowy, relacje, funkcje, relacje równoważności, klasy abstrakcji, zbiór ilorazowy.   4. Moce zbiorów. Zbiory skończone i nieskończone. Zbiory przeliczalne i zbiory mocy continuum. Twierdzenia Cantora i Cantora-Bernsteina.   5. Porządki częściowe i liniowe. Dobre porządki. Indukcja noetherowska.   6. Unifikacja termów. Informacja o metodzie rezolucji.   7. Dowodzenie twierdzeń. Informacja o systemie naturalnej dedukcji.  Wymagania: Matematyka w zakresie szkoły średniej "}



u: ([about happen] * "seminar on systems") ^repeat() ^keep()
    {"Rozejrzyj się wokół siebie okiem informatyka. Stajemy się stopniowo  ,,włączkami'' do Systemu. Niektórzy już się stali. I nie są tylko to moje przewidywania i straszenie "}
    a: (!~my_negation * more)
        {"sprzed lat. To zjawisko potwierdzają obecnie inni, fachowi obserwatorzy. Z drugiej strony spróbujmy dziś żyć bez systemów!... Te dwa spostrzeżenia wyznaczają ramy referatów, które studenci mogą przygotowywać na seminarium z systemów - ramy praktycznie bez granic. Liczy się sposób prezentacji, własny wkład studenta w temat, twórcze spojrzenie na wybrany system i zdolność wnioskowania o skutkach jego rozwoju lub zaniechania.  W szczególności referaty studentów mogą dotyczyć sześciu ,,przestrzeni informatycznych'' odpowiadających sześciu niedawno przetłumaczonym książkom przez proponującego to seminarium. Ujmując swobodnie: "}



u: ([about happen] * "designing asp.net web applications") ^repeat() ^keep()
    {"Podsystem ASP.NET to jedna z bardziej rozbudowanych technologii w ramach .NET  Framework, zasługująca na całosemestralny wykład, dający możliwość poznania "}
    a: (!~my_negation * more)
        {"studentom nie tylko technologii ale również patrzenia na nią w kontekście typowych wzorców aplikacyjnych, występujących czy to w samym ASP.NET czy też na styku z warstwą dostępu do danych.  Z uwagi na możliwość programowania aplikacji ASP.NET na platformie .NET Core, technologia ma zastosowanie w dowolnym środowisku serwerowym w tym na systemach Linuxowych.  Na pracowni studenci zapoznają się z typowymi problemami występującymi podczas budowania aplikacji w technologii ASP.NET i uczą się z nimi sobie radzić. "}



u: ([about happen] * "simulation-based artificial intelligence") ^repeat() ^keep()
    {"Two factors: growing computational power of computers and the rising interest on the problems too complicated to construct a heuristic evaluation function, decided about the recent popularity of simulation-based techniques in Artificial Intelligence. "}
    a: (!~my_negation * more)
        {"Although initially they were used as brute-force approaches, with simple algorithms like Flat MC or epsilon-greedy MC, after the introduction of Monte Carlo Tree Search they gained theoretical background and depth enough to handle complicated tasks. With time, more sophisticated usages of simulation-based techniques had been discovered, including heuristic-knowledge variants, specific problem-related variants, and more common usage of simulations as a part of other methods like evolution, reinforcement learning, or deep neural networks.  During this course, we will cover recent advancements in simulation-based AI methods, their successful applications, and their limitations. The course program is based on a selection of publications from the leading AI conferences AAAI, IJCAI, GECCO and smaller venues closely related to this topic MCS IJCAI Workshop, COG.  The participants will have the opportunity to try the theory in practice implementing various simulation-based agents aimed to solve small-to-medium-sized problems. Finally, in groups, their task will be to reproduce and verify the results of a given research paper. "}



u: ([about happen] * "algorithmic fairness, or politically correct computer science") ^repeat() ^keep()
    {"Dane to ty. Algorytm pobiera cię jako wejście a potem mówi że nie dostaniesz kredytu bo mieszkasz w czarnej dzielnicy. Czy jakoś tak. "}
    a: (!~my_negation * more)
        {"No i coś z tym trzeba zrobić. A co zrobić mówią nam uczeni zajmujący się Algorithmic Fairness. Napisali o tym, w ostatnich 10 latach, kupę prac. I chciałbym w ramach tego seminarium część z tych prac, oczami uczestników seminarium, przeczytać. Żeby takim całkiem ciemnym nie być.  To się wszystko wiąże z machine learningiem. Ale wstępna lektura prac pokazuje że głębsza kompetencja dotycząca machine learningu nie jest konieczna żeby je czytać ja w każdym razie nie mam takiej kompetencji. "}



u: ([about happen] * "compiler construction") ^repeat() ^keep()
    {"Wykład prowadzony wspólnie przez dwuosobowy zespół: W.Charatonik i P. Polesiuk. "}
    a: (!~my_negation * more)
        {"Przekrojowy, ale niezbyt szczegółowy wykład wprowadzający w tematykę kompilacji.  Program:     Wstęp 1 wykład    Leksowanie i parsowanie 3 wykłady    Analiza semantyczna 1 wykład    Generowanie kodu 3 wykłady    Analiza programów i optymalizacja kodu 3 wykłady    Wsparcie dla języków wysokopoziomowych 4 wykłady "}



u: ([about happen] * "seminar: tricks in c++") ^repeat() ^keep()
    {"Omówimy różne techniki i sztuczki w C C++, głównie niestandardowe i związane z wydajnością, a także tematy na czasie związane z używaniem C++.  W programie znajdą się takie rzeczy jak: wydajne technicznie i niestandardowe sposoby implementacji kontenerów, podstawowych struktur danych i algorytmów; alternatywy dla używania std; narzędzia i biblioteki np. gdb, valgrind, kompilatory, boost; C++20 23; różne tematy kontrowersyjne. "}
    a: (!~my_negation * more)
        {"Większość tematów będzie bazować na systemie Linux i kompilatorze g++.  Niezbędna jest przynajmniej dobra znajomość C++. Tematy będą rozłączne ze wszystkimi kursami języka i będą one nowe lub odpowiednio rozszerzone w stosunku do edycji seminarium z 2017 2018, dlatego seminarium można zaliczyć ponownie.  Zaliczenie seminarium polega na opracowaniu tematu, co w większości przypadków wymaga napisania implementacji i wykonania eksperymentów, oraz zwyczajowego wygłoszenia prezentacji.  W przypadku konieczności przeprowadzenia zajęć zdalnie prezentowanie zrobimy online. "}



u: ([about happen] * "natural language processing") ^repeat() ^keep()
    {"Przetwarzanie języka naturalnego jest dziedziną, w której staramy się zrozumieć, czym jest język naturalny taki jak polski czy angielski, jak go najlepiej modelować narzędziami matematycznymi bądź informatycznymi oraz tym, jakie praktyczne korzyści można wyciągnąć z tej wiedzy -- czyli jakie zadania związane z językiem da się skutecznie rozwiązywać za pomocą odpowiednich algorytmów. "}
    a: (!~my_negation * more)
        {"Język naturalny otacza nas zewsząd. Jest coraz więcej dostępnych tekstów, które badać i pozyskiwać z nich wiedzę o języku, rosną też ciągle oczekiwania rozumienia języka, jakie stawiamy algorytmom. I rzeczywiście w wielu aspektach obserwujemy ciągły wzrost skuteczności działania tych algorytmów w wielu zadanich algorytmy osiągają sprawność lepszą niż ludzie.  Z drugiej strony wiele zadań z przetwarzania języka uważa się za AI-zupełne to znaczy, że w pełni satysfakcjonujące ich rozwiązanie wymaga stworzenia pełnej sztucznej inteligencji. Wymienić tu można choćby rozmowę na dowolny temat.   Na wykładzie będziemy zajmować się zarówno łatwymi, jak i trudnymi aspektami języka. Omówimy sposoby modelowania języka traktowanego jako sekwencje elementów: bazujące na łańcucha Markowa oraz różnych architekturach sieci neuronowych. Poznamy elementy wiedzy lingwistycznej, poznamy sposoby analizy składniowej zdań.  Dużo uwagi będzie poświęcone sposobami generacji tekstów, spełniających określone warunki.   Będziemy zajmować się głównie metodami zawierającymi elementy uczenia maszynowego czyli pozyskiwania wiedzy z danych, którymi są w tej dziedzinie zbiory tekstów, czasem z dodatkowymi anotacjami. Na pracowni będziemy wykonywać takie zadania jak: automatyczne poprawianie tekstu np. rekonstrukcja polskich znaków diakrytycznych lub wielkich liter, znajdywaniem w tekstach fraz określonego typu na przykład nazw organizacji, osób, dat, etc, generowaniem tekstów na zadany temat, automatycznym wykrywaniem mowy nienawiści, analizą składniową i korektą błędów gramatycznych.  W przypadku konieczności organizowania zajęć w formie zdalnej, studenci otrzymają nagrane wykłady, ćwiczenia będą w przeprowadzone z deklaracjami i wspólną pracą nad Raportem z ćwiczeń, zadania na pracownie będą konsultowane i odbierane przy użyciu systemu telekonferencyjnego. "}



u: ([about happen] * "introduction to programming in python") ^repeat() ^keep()
    {"Wstęp, czyli jak się ma Wstęp do programowania w języku Python do Wstępu  do programowania w języku C "}
    a: (!~my_negation * more)
        {"Studenci 1-go roku studiow 1-go stopnia mogą rozpocząć naukę programowania i podstaw informatyki w jednym z dwoch językow: Python albo C -- można wybrać tylko jeden z tych kursow!. Każdy z tych językow pozwala opanować podstawy informatyki i programowania, a w dalszych semestrach doskonalić się w programowaniu w innych lub tych samych językach. W szczegolności zaczynając od Kursu: Wstęp do programowania w języku Python, nie skazujecie się na zawsze na ten język i nieznajomość C oraz  vice versa . W drugim semestrze studi ow i kolejnych pojawiają się kursy językow programowania C++, Java, Ruby, Python, ktore pozwalają opanować rożne języki, przy założeniu, że "}



u: ([about happen] * "software foundations in coq") ^repeat() ^keep()
    {"Niezawodność oprogramowania należy do najbardziej istotnych wyzwań  współczesnej informatyki. Systemy wspomagające dowodzenie twierdzeń, takie jak "}
    a: (!~my_negation * more)
        {"Coqhttps:  coq.inria.fr , zyskują w ostatnich latach ogromną popularność jako platformy wspierające konstruowanie poprawnego i bezpiecznego oprogramowania, łącząc w sobie język programowania oraz system logiczny. Coq pozwala nie tylko na formalne specyfikowanie oraz weryfikowanie poprawności programów komputerowych tzw. certyfikowanie kodu, ale także na precyzyjne definiowanie i analizę całych języków programowania.  Przedmiot stanowi wprowadzenie do formalnych podstaw niezawodnego oprogramowania przy użyciu systemu Coq. Poruszana tematyka dotyczy wybranych elementów logiki, teorii języków programowania oraz samego systemu Coq, a "}



u: ([about happen] * "seminar: lambda calculus: evaluation and normalization") ^repeat() ^keep()
    {"Rachunek lambda stanowi jądro wszystkich języków funkcyjnych, a także wielu systemów wspierających dowodzenie twierdzeń. Kluczowym zagadnieniem w tym kontekście staje się poprawna i efektywna implementacja β-redukcji, mechanizmu modelującego aplikację funkcji, a także operacji wyszukiwania kolejnego β-redeksu zgodnie z wybraną strategią redukcji. O ile w przypadku typowych języków funkcyjnych redukcja przyjmuje postać ewaluacji termu do słabej postaci normalnej, dowolnej λ-abstrakcji, w przypadku zamkniętych termów czystego rachunku lambda, to w przypadku porównywania typów zależnych przez systemy wspomagające dowodzenie twierdzeń wymagana jest pełna normalizacja termów, w tym termów otwartych, w ciele λ-abstrakcji. "}
    a: (!~my_negation * more)
        {"Tematem seminarium jest przegląd wybranych zagadnień związanych z procedurami redukującymi λ-termy. Wśród omawianych zagadnień znajdą się m. in. syntaktyczne ewaluatory i normalizatory bezpośrednio implementujące określoną strategię redukcji semantyka redukcyjna, maszyny abstrakcyjne, autointerpretery ang. self-interpreters, a także ewaluatory w kluczowy sposób wykorzystujące mechanizm redukcji w meta-języku ewaluatory i normalizatory wyższego rzędu, w tym te realizujące model NbE - normalizacji przez ewaluację. W szczególności, sporo miejsca poświęcimy konstrukcji, poprawności i analizie maszyn abstrakcyjnych.  Literatura wybrane prace:  1. Mads Sig Ager, Dariusz Biernacki, Olivier Danvy, Jan Midtgaard: A functional correspondence between evaluators and abstract machines. PPDP 2003: 8-19  2. Małgorzata Biernacka, Olivier Danvy: A concrete framework for environment machines. ACM Trans. Comput. Log. 91: 6 2007  3. Ulrich Berger, Helmut Schwichtenberg: "}



u: ([about happen] * "clone: history of moral reflection") ^repeat() ^keep()
    {"Prowadzący: dr Marcin Drofiszyn   Katedra Logiki i Metodologii Nauk UWr "}
    a: (!~my_negation * more)
        {"marcin.drofiszyn@uni.wroc.pl  W trakcie wykładów zostaną omówione najważniejsze szkoły i koncepcje etyki filozoficznej. Prezentacja będzie się odbywać w porządku historycznym. Każda koncepcja zostanie omówiona w trzech krokach. Pierwszy krok, to wyjaśnienie pytania na które jest ona odpowiedzią. Do czego dążyć? Jak dobrze żyć i dobrze się mieć? Co powinienem? W drugim kroku zostanie przedstawiona główna teza oraz argumenty, które za nią przemawiają. Poznaj siebie! Spełniaj obowiązki! Maksymalizuj przyjemność! W ostatnim kroku przedstawione argumenty zostaną skonfrontowane z krytycznymi głosami komentatorów. Ćwiczenia będą polegały na wspólnym czytaniu i dyskutowaniu źródłowych tekstów dla koncepcji omawianych na wykładach. "}



u: ([about happen] * "research seminar: formal logic and databases") ^repeat() ^keep()
    {"Opis: "}
    a: (!~my_negation * more)
        {"Seminarium dotyczy formalnych sposobów reprezentacji wiedzy. W naszym przypadku baza wiedzy składać się będzie z bazy danych czyli zbioru atomów oraz pewnej teorii logicznej, zadanej najczęściej za pomocą reguł egzystencjalnych bądź logik opisowych. Zajmować będziemy się klasycznymi problemami jak np. złożoność problemu odpowiadania na zapytania koniunkcyjne, regularne, transfer danych czy spójności baz wiedzy.  Plan seminarium  Ramowy plan seminarium jest następujący. Podczas pierwszego spotkania prowadzący zaprezentują kilka problemów otwartych, luźno powiązanych z reprezentacją wiedzy, bazami danych i logiką. Następnie uczestnicy wybierają jeden z tematów, którego dotyczyć będzie dalsza część seminarium. Po wybraniu tematu seminarium, prowadzący przydzielają uczestnikom do przeczytania prace naukowe, które są następnie referowane. Po dogłębnym zrozumieniu tematu będziemy podejmować próby wspólnego rozwiązania problemu.   Co daje udział w seminarium?  Seminarium daje możliwość spojrzenia na to jak wygląda praca naukowca. W przypadku sukcesu i zaangażowania studentów, uczestnictwo w seminarium zakończyć może się wspólną publikacją. Prowadzący z chęcią nadzorować będą również prace licencjackie inżynierskie magisterskie odpowiadające tematyce seminarium. "}



u: ([about happen] * "algorithms and data structures") ^repeat() ^keep()
    {"Program: "}
    a: (!~my_negation * more)
        {"1. Przegląd metod projektowania efektywnych algorytmow: dziel i zwyciężaj, programowanie dynamiczne, metoda zachłanna. 4 godz.   2. Złożoność obliczeniowa algorytmu pesymistyczna, oczekiwana, zamortyzowana. Przykłady analizy kosztu. 2 godz.   3. Sortowanie: Heapsort i Quicksort. Model drzew decyzyjnych i dolne ograniczenie na problem sortowania. Sortowanie w czasie liniowym: Countsort, Radixsort, Bucketsort. 6 godz.   4. Selekcja: algorytmy Hoarea i magicznych piątek. 2 godz.   5. Kolejki priorytetowe: kopce binarne, dwumianowe i Fibonacciego. Zastosowania w problemie najkrotszych ścieżek i minimalnego drzewa rozpinającego. 4 godz.   6. Scalanie. Drzewa turniejowe. Sortowanie zewnętrzne. 2 godz.   7. Wyszukiwanie i problem słownika. Drzewa wyszukiwań binarnych, zrownoważone drzewa wyszukiwań binarnych AVL, 2-3-4-drzewa, drzewa czerwono-czarne. Optymalne drzewa wyszukiwań binarnych. Haszowanie. Wyszukiwanie pozycyjne. 8 godz.   8. Wyszukiwanie zewnętrzne - B-drzewa. 2 godz.   9. Problem sumowania zbiorow rozłącznych i jego zastosowania. 4 godz.   10. Algorytmy grafowe: przepływy w sieciach, skojarzenia. 4 godz. "}



u: ([about happen] * "seminar: communication complexity") ^repeat() ^keep()
    {"We will study the amount of communication required to solve a problem when the input is distributed between two or more parties. As a prime example, consider the following game played by Alice and Bob: each player holds a string of length n, and the goal is to determine if the strings are equal by exchanging as little information as possible. For deterministic protocols, it is not hard to see that the players need to exchange n bits for information. However, allowing randomisation decreases this to only Ologn. As a more challenging example, each player holds a set, and the goal is to determine if the sets are disjoint. "}
    a: (!~my_negation * more)
        {"While interesting in its own right as a clean and mathematically elegant model, communication complexity is important due to its applications in other areas. In this lecture, we will see how to use it to deduce lower bounds for data structures and streaming algorithms.  Basic knowledge of algorithms and data structure is necessary. Having already taken the Randomised algorithms course is advised but not required. "}



u: ([about happen] * "cross-cultural psychology") ^repeat() ^keep()
    {"Prowadzący:   Dr hab. Maciej Bachryj-Krzywaźnia, Katedra Studiów Europejskich "}
    a: (!~my_negation * more)
        {"Typ: Przedmiot nieinformatyczny, wariant bez ćwiczeń 3 ECTS   Zagadnienia: 1. Specyfika i zakres psychologii międzykulturowej 2. Kulturowe determinanty poznania społecznego 3. Enkulturacja, socjalizacja, znaczenie różnic kulturowych model ekokulturowych uwarunkowań psychiki 4. Kultura i multikulturalizm, kategoryzacja społeczne i jej konsekwencje 5. Szok kulturowy "}



u: ([about happen] * "fundamentals of computer graphics") ^repeat() ^keep()
    {"Grafika komputerowa jest obecna w grach, filmach, reklamach czy interfejsach użytkownika. Dlatego warto zrozumieć jak powstaje i poznać kluczowe standardy i algorytmy. Umożliwi to nie tylko posługiwanie się ze zrozumieniem gotowymi silnikami graficznymi ale także sprawne pisanie własnych gier i aplikacji np. przy użyciu API OpenGL. Wykład jest także wprowadzeniem do zaawansowanych przedmiotów z grafiki komputerowej i jest przeznaczony dla studentów od drugiego roku. "}
    a: (!~my_negation * more)
        {"Na wykładzie wprowadzone jest teoria i podstawowe metody, które umożliwiają efektywne programowanie grafiki z użyciem kart graficznych. Na pracowni uczymy się praktyki programowania w nowym OpenGL wersja 3.3 lub nowsza. Wykład nie jest jednak kursem tylko biblioteki OpenGL ale skupia się nad zrozumieniem podstaw takich jak np. efektywne metody przekształcania układów współrzędnych i algorytmy renderingu.  Omawiane zagadnienia:     Przekształcenia w jednorodnym układzie współrzędnych    Efektywne reprezentacje rotacji w tym kwaterniony    Modelowanie wirtualnej kamery i obiektów 3D    Widoczność: algorytm z-bufora, śledzenie promieni i inne    Modelowanie i obliczanie oświetlenia "}



u: ([about happen] * "cross-cultural psychology") ^repeat() ^keep()
    {"Prowadzący:   Dr hab. Maciej Bachryj-Krzywaźnia, Katedra Studiów Europejskich "}
    a: (!~my_negation * more)
        {"Typ: Przedmiot nieinformatyczny 5 ECTS    Zagadnienia: 1. Specyfika i zakres psychologii międzykulturowej 2. Kulturowe determinanty poznania społecznego 3. Enkulturacja, socjalizacja, znaczenie różnic kulturowych model ekokulturowych uwarunkowań psychiki 4. Kultura i multikulturalizm, kategoryzacja społeczne i jej konsekwencje "}



u: ([about happen] * "tools and methods in big data processing") ^repeat() ^keep()
    {"The first edition of this course is an experimental one, the number of places is limited up to 12 persons and the preference is given to data science students. "}
    a: (!~my_negation * more)
        {"The course presents the tools and methods used in big data processing. The goal of the course is to enable the students to acquire skills required to process large amounts of data in a distributed environment, both in a batch and streaming variant. "}



u: ([about happen] * "project: scheduler") ^repeat() ^keep()
    {"W ramach projektu grupa studentów rozwija istniejący system Scheduler służący do układania planu zajęć w Instytucie Informatyki: ulepsza istniejące funkcjonalności i wprowadza nowe. "}
    a: (!~my_negation * more)
        {"Podstawowe wymagania: średnio-zaawansowany angielski, znajomość html i css, umiejętność programowania w dowolnym języku programowania, podstawowa znajomość javascriptu, podstawy git, bash i linuksa.  Mile widziane: Kurs WWW, Kurs Podstawowy Warsztat Informatyka.  Projekt Scheduler używa takich narzędzi jak: Javascript, AngularJs, Underscore.js, Python, Django, Scala, Finagle, Thrift, Docker, docker-compose, kubernetes, git, AWS, Google Cloud.  Przedmiot zalicza wymaganie projektu zespołowego. Można uczestniczyć w nim wielokrotnie. "}



u: ([about happen] * "seminar on advanced algorithmics") ^repeat() ^keep()
    {"Cele seminarium są dwojakie: "}
    a: (!~my_negation * more)
        {"wprowadzenie studentów do własnych badań    uzupełnienie wiedzy z zakresu klasyki AiSD.  Dla realizacji pierwszego celu zaproponujemy studentom referowanie prac zawierających wyniki, które według naszej wiedzy są poprawialne i, według naszego wyczucia, są w zasięgu studentów. Oczywiście będą one dotyczyć problemów, które uznajemy za interesujące.  Ubocznym, acz dość ważnym dla studentów, efektem może być uzyskanie wyników, które legną u podstaw publikacji naukowej pracy magisterskiej ….. "}



u: ([about happen] * "algorithmic game theory") ^repeat() ^keep()
    {"This course is devoted to computational aspects of decision making in the context of data being provided by strategic agents. "}
    a: (!~my_negation * more)
        {"The main topics that will be covered:  Noncooperative games:   1. strategies   2. Nash equilibria   3. computational complexity class PPAD     Cooperative games:   1. coalition forming   2. solution concepts "}



u: ([about happen] * "neural networks and deep learning") ^repeat() ^keep()
    {"Information for enrolled prospective students: all information is on SKOS please self-enroll into Deep Learning 2021, materials are on GitHub, lectures will be streamed and recorded in Teams. Enrollment code is in SKOS. "}
    a: (!~my_negation * more)
        {"Neural Networks and other Deep Learning techniques allow creation of programs that are learned rather than written. This means that instead of implementing a concrete algorithm, the program applies patterns that are automatically found in the data. In example, a translation system such as the Google Translate can be created by applying a deep neural network to a large corpus of translated documents.   The lecture is a continuation of the Machine Learning course, focusing on Deep Learning techniques. We will speak about the current state of the art techqniques for image recognition and language processing such as convolutional and recurrent neural networks with the attention mechanism. We will also speak about data generation techniques, such as autoencoders and generative adversarial networks and we wil see a bit of deep reinforcement learning.  The lecture will be accompanied by computer exercises: "}



u: ([about happen] * "seminar: algorithmics in networks") ^repeat() ^keep()
    {"Seminarium prowadzone wspólnie przez Tomasza Jurdzińskiego i Przemysława Uznańskiego. "}
    a: (!~my_negation * more)
        {"Opis: Jednym z głównych nurtów algorytmiki są algorytmy rozproszone, gdzie wiele niezależnych urządzeń kooperuje w celu wspólnego rozwiązania problemu. Dynamiczny rozwój technologii sieciowych powoduje, że algorytmy rozproszone pojawiają się w różnorodnych sytuacjach i zastosowaniach. Co więcej, nowe technologie i zastosowania wymagają dopasowania istniejących lub wprowadzenia nowych modeli. To z kolei stwarza nowe problemy algorytmiczne i nowe miary jakości takich algorytmów. W ramach seminarium prezentowane bądą klasyczne i najnowsze wyniki dotyczące algorytmów rozproszonych i algorytmów sieciowych. Kluczowe wyniki w tej dziedzinie prezentowane są na konferencjach PODC i DISC "}



u: ([about happen] * "seminar: theory of automata") ^repeat() ^keep()
    {"Celem seminarium jest zaznajomienie słuchaczy z klasycznymi modelami  automatów, ich własnościami oraz zastosowaniami. W trakcie seminarium zostaną zaproponowane tematy prac magisterskich. "}
    a: (!~my_negation * more)
        {"Seminarium może odbywać się zdalnie poprzez Google Meet lub MS Teams, jeśli zajęcia w semestrze zimowym będą odbywały się zdalnie.  Program:  1. Automaty na słowach nieskończonych.   a Automaty Buchiego oraz inne warunki akceptacji.   b Zamkniętość język ow omega-regularnych ze względu na sumę, przekrój, dopełnienie. c Zastosowania automatów na słowach nieskończonych. "}



u: ([about happen] * "seminar: non-classical logics: theory and applications") ^repeat() ^keep()
    {"W ramach seminarium dokonamy przeglądu wybranych systemów logicznych  wychodzących poza logikę klasyczną, które znajdują zastosowania w informatyce. "}
    a: (!~my_negation * more)
        {"Aby lepiej rozumieć zasady rządzące systemami logicznymi, będziemy omawiać m. in. semantykę i elementy teorii dowodu rozważanych systemów.  Proponowane tematy zajęć:     Logika klasyczna vs. logika intuicjonistyczna, izomorfizm Curry'ego-Howarda.    Elementy teorii dowodu - systemy Hilberta, naturalna dedukcja, rachunek sekwentów.    Logiki substrukturalne, logika liniowa.    Logiki wielowartościowe, logika rozmyta.    Logiki modalne. "}



u: ([about happen] * "verification and synthesis of multi-agent systems") ^repeat() ^keep()
    {"Celem przedmiotu jest poznanie zagadnień związanych z weryfikacją i syntezą systemów wieloagentowych - czyli takich, które opisują interakcję między wieloma systemami lub maszynami. Seminarium nie zakłada wiedzy słuchaczy z zakresu weryfikacji, dlatego kilka początkowych zajęć poświęcimy podstawowym tematom, na bazie książki Handbook of Model Checking Clarke, E.M., Henzinger, Th.A., Veith, H., Bloem, R., 2018. Później przejdziemy do tematów związanych typowo z systemami wieloagentowymi, w tym weryfikacji własności opartych o strategie agentów. "}
    a: (!~my_negation * more)
        {"Przedmiot będzie prowadzony zdalnie, niezależnie od warunków epidemiologicznych. Studenci dostaną do przeczytania i zreferowania pracę lub rozdział książki. Następnie będą mieli za zadanie przygotować 45-60 minutową prezentację. Po akceptacji prowadzącego, prezentacja zostanie przedstawiona pozostałym studentom. Następnie, w ustalonych terminach, będzie przeprowadzona dyskusja na temat prezentacji. Ocena będzie zależeć w 80% od jakości prezentacji włącznie z udziałem w dyskusji poświęconej tej prezentacji i w 20% od aktywności w dyskusjach nad pozostałymi prezentacjami.   Orientacyjny plan: 1. Podstawowe zagadnienia weryfikacji i syntezy systemów ok. 5 zajęć. 2. Podstawy systemów wieloagentowych ok. 1 zajęcia. 3. Bieżące badania naukowe poświęcone tematyce seminarium ok. 9 zajęć. "}



u: ([about happen] * "half-course: data recovery") ^repeat() ^keep()
    {"Kurs omawia metody przechowywania danych na nośnikach elektronicznych,  protokoły warstwy fizycznej dyski mechaniczne i SSD, zapis optyczny, "}
    a: (!~my_negation * more)
        {"urządzeń blokowych i systemów plików szczególnie strukturę statyczną, tj.  on-disk format  oraz ich implementację w Linuksie. Aspekty praktyczne kursu skupiają się na sposobach i narzędziach do odzyskiwania danych z nośników, które zostały skasowane lub uszkodzone. Techniki odzyskiwania danych z urządzeń pamięci masowych są częścią tzw. informatyki śledczej. Mimo iż nazwa brzmi intrygująco, to ten dział informatyki jest wyjątkowo nudny i wymaga dużej pracowitości i cierpliwości. Nie tylko trzeba znać i umieć efektywnie wykorzystać dostępne narzędzia, ale potrzeba też bardzo szczegółowej wiedzy na temat analizowanych formatów danych i systemów plików. "}



u: ([about happen] * "internet technologies") ^repeat() ^keep()
    {"Celem wykładu jest zapoznanie słuchaczy ze światem Internetu z punktu widzenia  twórcy dostępnej tam treści. Przedstawione zostaną bardzo różne zagadnienia od "}
    a: (!~my_negation * more)
        {"podstaw technologii występujących u klienta i na serwerze, poprzez systemy CMS, optymalizację, bezpieczeństwo czy konfigurację serwerów, aż do usług czy produktów od Google i Facebook-a. Wykład ma charakter przeglądowy i w związku z tym  nacisk położony jest na pobieżne poznanie prezentowanych zagadnień  niż ich dokładne omawianie. Kurs ten ma też w swoim zamierzeniu ułatwić wybór zagadnień czy kursów do dalszego studiowania.  Program:    1. Podstawy komunikacji sieciowej w tym "}



u: ([about happen] * "seminar on approximation algorithms and combinatorial optimization") ^repeat() ^keep()
    {"Mieszanka tematów, starych i nowych, dotyczących algorytmów aproksymacyjnych,  optymalizacji kombinatorycznej, grafów, kombinatoryki i matematyki dyskretnej. "}
    a: (!~my_negation * more)
        {"W szczególności na wykładach z AA i OK wielu rzeczy nie zdąży się opowiedzieć i seminarium to może być m.in. uzupełnieniem tych wykładów.  Będzie można usłyszeć o problemach otwartych.  W seminarium można uczestniczyć wielokrotnie.  Program: Wymagania: "}



u: ([about happen] * "course: rust language") ^repeat() ^keep()
    {"Rust kompilowalny język programowania ogólnego przeznaczenia rozwijany obecnie przez Mozilla Foundation jest jednym z najciekawszych języków programowania, jakie pojawiły się w ostatnich latach. "}
    a: (!~my_negation * more)
        {"Stworzony z myślą o tym, aby był „szybki, bezpieczny, współbieżny i praktyczny”. Rust jest wieloparadygmatowy obiektowy, imperatywny, funkcyjny, strukturalny i współbieżny.  W ostatnich latach bardzo szybko zyskuje na popularności, niektórzy twierdzą, że jest następcą C++ na kolejne 30 lat...  Kursu będzie podzielony na dwie części. Wykład będzie prowadzony na podstawie oficjalnej książki napisanej przez autorów języka Steve Klabnik and Carol Nichols: The Rust Programming Language. Na pracowni będziemy rozwiązywać praktyczne problemy w formie zadań z testami w duchu TDD Test-Driven Development, korzystając z portalu: https:  www.codewars.com  Przedmiot jest wymagający. Sumarycznie do zrobienia będzie 35 zadań na CW, 2 mini projekty, projekt z WebAssembly oraz projekt finalny. "}



u: ([about happen] * "lua course") ^repeat() ^keep()
    {"Lua jest językiem skryptowym charakteryzującym się minimalizmem, szybkością  działania oraz prostotą osadzenia w języku C. Dzięki tym cechom jest to od "}
    a: (!~my_negation * more)
        {"wielu już lat najpopularniejszy język skryptowy w przemyśle gier komputerowych wiki listhttps:  en.wikipedia.org wiki Category:Lua-scripted video games.  Lua daje programiście szerokie możliwości ale niewiele narzuca: można w niej programować zarówno imperatywnie, funkcjonalnie jak i obiektowo, a elastyczna składnia pozwala na dostosowanie języka do własnych potrzeb.  Wykład w części będzie poświęcony samemu językowi Lua, a w części technikom jego osadzania w C i wykorzystywania jako język skryptowy i na odwrót - rozszerzaniem skryptów Lua o moduły będące skompilowanymi bibliotekami C. "}



u: ([about happen] * "error correction codes") ^repeat() ^keep()
    {"Description. "}
    a: (!~my_negation * more)
        {"In general, error correcting codes aims to ensure that errors occurring during the writing, reading or transmission of information can be removed, or at least detected. At one end of the spectrum of employed methods are simple codes that add a parity bit which only allows validation, whether an error has occurred, at the other end there are the Reed-Solomon codes, which allow the recovery of the original information even when a constant fraction of the codewords is corrupted. As errors in transmissions are ever-present, correction codes are widely used, from file storage systems through barcodes, video data recording and cellular network transmission.   In this talk, classical and sometimes a little&nbsp;more modern results on correction codes will be presented: - Upper and Lower bounds: combinatorial results that impose bounds on the possible parameters of the codes, and unconstructive methods that allow getting arbitrarily close to these bounds. - Reed-Solomon codes, arguably the best known and most widely used error correction codes, which allow correction of a fixed fraction of errors. Their decoding algorithms are highly non-trivial Berlekamp-Welch algorithm, Berlekamp-Massey and derivatives. - Reed-Muller codes and their decoding binary and general case. "}



u: ([about happen] * "algorithms on strings") ^repeat() ^keep()
    {"Tematem wykładu będą algorytmy i struktury danych służące do przetwarzania i  przeszukiwania danych tekstowych. W programie znajdą się zarówno klasyczne "}
    a: (!~my_negation * more)
        {"rozwiązania opracowane już w latach osiemdziesiątych, jak i takie, które są znane dopiero od kilku lat. Wiele z nich będzie, mimo prostoty koncepcyjnej, bardzo pomysłowych. Część wykładu poświęcimy na przedstawienie ogólnych struktur danych, które mogą znaleźć zastosowanie także w problemach niezwiązanych z tekstami.  Program:    1. Analiza i zastosowania algorytmów wyszukiwania wzorca: dokładnego, z niezgodnościami, z błędami.   2. Problemy podobieństwa tekstów wspólne podciągi, nadciągi, odległość edycyjna, dopasowanie. "}



u: ([about happen] * "randomized algorithms") ^repeat() ^keep()
    {"Celem przedmiotu jest zapoznanie studentów z podstawowymi techniki  probabilistycznymi używanymi w projektowaniu i analizie zrandomizowanych "}
    a: (!~my_negation * more)
        {"algorytmów i struktur danych ioraz przedstawia ich zastosowanie do rozwiązywania klasycznych zagadnień algorytmicznych. W przypadku prowadzenia zajęć w formie zdalnej, wykłady będą w formie wideokonferencji, a na ćwiczeniach będą rozwiązywane listy zadań. Deklaracje, zgłaszanie rozwiązań wybranego przeze mnie zadania i punktowe oceny będą realizowane w SKOS-ie.  Program:    1. Podstawowe pojęcia probabilistyki, klasy obliczeń i problemów losowych.   2. Zrandomizowane struktury danych,   3. Metoda probabilistyczna.   4. Łańcuchy Markowa i błądzenie losowe.   5. Zastosowanie losowości w algorytmach grafowych, programowaniu liniowym, geometrii obliczeniowej, algorytmach teorio-liczbowych, itp. "}



u: ([about happen] * "what you need to know for your first job") ^repeat() ^keep()
    {"Przedmiot za 2 ECTS, prowadzony w 1. połowie semestru przez pracowników firmy Intive, absolwentów Instytutu. "}
    a: (!~my_negation * more)
        {"Przedmiot przeznaczony głównie dla osób planujących niebawem pójście do pierwszej pracy w IT. Skupimy się na zagadnieniach, o których niewiele mówi się na przedmiotach teoretycznych, a jednak niezbędnych by świadomie móc wybrać co i gdzie chce się robić.  Przeanalizujemy zagadnienia, pojawiające się podczas rekrutacji, zastanowimy się, jak się do nich przygotować.   1. Tematy, które warto rozumieć podczas rekrutacji 1: przegląd popularnych wzorców projektowych, metodologii pracy takie jak SCRUM, Waterfall, itp. Grzegorz Byrka 2. Tematy, które warto rozumieć podczas rekrutacji 2: narzędzia wspierające dewelopera, rozwiązywanie zadań rekrutacyjnych Grzegorz Byrka 3. Omówienie aktualnych regulacji prawnych dotyczących form współpracy. Umowa o pracę, o dzieło, zlecenie, własna działalność. Jakie korzyści i zagrożenia dla nas niosą i jak nie wpakować się na minę Grzegorz Byrka 4. Kim jest profesjonalny programista, tester, devops i dlaczego umiejętność programowania nie wystarczy? Jakub Werłos 5. Jak efektywnie zbierać i definiować wymagania klientów?  6. Czym jest dobra historyjka użytkownika i jak z niej korzystać na co dzień? Jakub Werłos "}



u: ([about happen] * "theory of linear and integer programming") ^repeat() ^keep()
    {"Układy nierówności liniowych można rozwiązywać wielomianowo. Na tych zajęciach  spokojnie i dość szczegółowo omówimy takie zagadnienia zwiazane z programami "}
    a: (!~my_negation * more)
        {"liniowymi jak:  LP duality  complementarity slackness  Farkas lemma  algorytm simplex  metodę elipsoid  separation oracle  rozwiazywanie dużych niewielomianowych instancji  Hirsh conjecture.  Nastepnie omówimy pewne aspekty programowania całkowitoliczbowego:  algorytm branch and bound  alg. branch and cut  algorytmy wielomianowe dla przypadku stałej liczby wymiarów  metody oparte o algebraiczne manipulacje na kracie punktów calkowitoliczbowych  algorytm LLL do redukcji bazy takiej kraty  problemy shortest latice vector i closest latice vector. "}



u: ([about happen] * "project: programming programming games") ^repeat() ^keep()
    {"Gry programistyczne są doskonałym narzędziem dydaktycznym na każdym etapie edukacji. Wprowadzając w życie ideę nauki poprzez zabawę, pozwalają na trenowanie umiejętnosci programistycznych w interesującym zarówno tematycznie jak i wizualnie środowisku oraz łączą aspekty współpracy i rywalizacji. "}
    a: (!~my_negation * more)
        {"Odpowiednio projektując taką grę, możemy nakierować jej uczestników na zapoznanie się z konkretnym zagadnieniem dotyczącym w zasadzie dowolnego aspektu informatyki. Poczynając od podstaw jak wykorzystanie wejścia wyjścia, pętli, obsługi napisów etc, poprzez wykorzystanie odpowiednich algorytmów i struktur danych, konieczność optymalizacji numerycznej, wykorzystania wzorów geometrycznych, aż do zagadnień typowych dla sztucznej inteligencji.  W ramach tego przedmiotu, kilkuosobowe zespoły będą tworzyły gry programistyczne w oparciu o narzędzia udostępnione przez serwis CodinGamehttps:  www.codingame.com  opcjonalnie także Google DeepMind OpenSpielhttps:  github.com deepmind open spiel tree master open spiel, Facebook Polygameshttps:  github.com facebookincubator Polygames, lub inny, nakierowane na konkretne aspekty dydaktyczne.  Poszczególne zespoły nie będą działały w odosobnieniu, lecz na regularnych spotkaniach z pozostałymi uczestnikami przedmiotu będą prezentować postępy prac, dzielić się wątpliwościami i słuchać ich opinii jako potencjalnych graczy. Wszyscy uczestnicy przedmiotu będą również nawzajem testować swoje projekty. Na koniec projektu, oprócz przedstawienia gotowej gry, każda z grup przygotuje też krótki raport z historii jej toworzenia, dokumentujący jak zmieniały się koncepcje, zasady oraz ewoluowała wizualizacja.  Planowane jest osadzenie finalnych projektów w serwisie CodinGame OpenSpiel Polygames i udostępnienie szerokiej publiczności, a w przypadku projektów o bardzo dobrej jakości zorganizowanie bazujących na nich oficjalnych zawodów. Dobrej jakości projekty mogą również stanowić bazę do pracy dyplomowej.   W przypadku konieczności przeprowadzanie zajęć zdalnie, wszelkie omówienia projektów i dyskusje będą się odbywały za pomocą narzędzi pozwalających na zbiorowe rozmowy, udostępnianie ekranu etc. Discord, Google Hangout. Ogólne zasady przedmiotu nie ulegają zmianie. "}



u: ([about happen] * "history of moral reflection") ^repeat() ^keep()
    {"Prowadzący: dr Marcin Drofiszyn   Katedra Logiki i Metodologii Nauk UWr "}
    a: (!~my_negation * more)
        {"marcin.drofiszyn@uni.wroc.pl  W trakcie wykładów zostaną omówione najważniejsze szkoły i koncepcje etyki filozoficznej. Prezentacja będzie się odbywać w porządku historycznym. Każda koncepcja zostanie omówiona w trzech krokach. Pierwszy krok, to wyjaśnienie pytania na które jest ona odpowiedzią. Do czego dążyć? Jak dobrze żyć i dobrze się mieć? Co powinienem? W drugim kroku zostanie przedstawiona główna teza oraz argumenty, które za nią przemawiają. Poznaj siebie! Spełniaj obowiązki! Maksymalizuj przyjemność! W ostatnim kroku przedstawione argumenty zostaną skonfrontowane z krytycznymi głosami komentatorów. Ćwiczenia będą polegały na wspólnym czytaniu i dyskutowaniu źródłowych tekstów dla koncepcji omawianych na wykładach. "}



u: ([about happen] * "team management") ^repeat() ^keep()
    {"Przedmiot proponowany przez dr Alicję Lisowską z Instytutu Politologii UWr. "}
    a: (!~my_negation * more)
        {"GRUPA JAKO ZESPÓŁ PROJEKTOWY Grupa. Problemy współpracy i godzenie interesów: grupa - pojęcie, spójność, normy, problemy międzygrupowe, role w grupie. Mniejszości w grupie. Kwestionariusz samooceny.   ZESPÓŁ PROJEKTOWY Dynamika zespołu. Cechy dobrego zespołu. Proces decyzyjny w zespole. Wady i zalety pracy zespołowej.  KIEROWNIK PROJEKTU - ROLE W ZESPOLE PROJEKTOWYM  Kierownik projektu - zadania, wiedza i umiejętności. Kompetencje społeczne. Style kierowania. Idealny kierownik. Test.   MOTYWACJA, SATYSFAKCJA Z PRACY I ZAANGAŻOWANIE Motywacja i składniki motywacji - teorie. Proces motywowania - teorie. Satysfakcja z pracy - pomiar i uwarunkowania indywidualne. Czynniki określające zaangażowanie w pracę. Wynagrodzenie.   PATOLOGIE W ZESPOLE PROJEKTOWYM "}



u: ([about happen] * "machine learning") ^repeat() ^keep()
    {"Wyklucza się&nbsp;z przedmiotem Sieci Neuronowe i Deep Learning zaliczonym do 2018 19. "}
    a: (!~my_negation * more)
        {"Informations for enrolled prospective students: all information is on SKOS please self-enroll into Machine Learning 2020https:  skos.ii.uni.wroc.pl enrol index.php?id=331, materials are on GitHubhttps:  github.com janchorowski ml uwr, lectures will in-class, streamed and recorded.  This course provides the fundamentals Machine Learning, i.e. of designing programs that implement a data-driven, rather than hand-implemented behavior. The course provides a gentle introduction of the topic, but strives to provide enough details and intuitions to explain state-of-the-art ML approaches: ensembles of Decision Trees Boosted Trees, Random Forests and Neural Networks. Starting with simple linear and Bayesian models, we proceed to learn the concepts of trainable models, selecting the best model based on data, practical and theoretical ways of estimating model performance on new data, and the difference between discriminative and generative training. The course introduces mainstream algorithms for classification and regression including linear models, Naive Bayes, trees, ensembles, and matrix factorizations for recommendation systems. Practical sessions provide a hands-on experience with the methods. "}



u: ([about happen] * "logical methods in computer science") ^repeat() ^keep()
    {"Proponowany przedmiot jest kontynuacją Logiki dla Informatyków przeznaczoną dla studentów zainteresowanych teorią informatyki. Naszym celem jest rozszerzenie podstaw wiedzy z zakresu logiki matematycznej i dziedzin pokrewnych o narzędzia potrzebne do zaawansowanych studiów w obszarach związanych z logiką i weryfikacją czy teorią języków programowania. W tym celu chcemy skoncentrować się na podstawowych zagadnieniach trzech aspektów logiki matematycznej: algebry uniwersalnej, teorii dowodu i teorii modeli, z naciskiem na perspektywę i użyteczność w informatyce w odróżnieniu od perspektyw matematycznej czy filozoficznej. "}
    a: (!~my_negation * more)
        {"Przedmiot polecamy dla studentów pierwszego roku którzy  dobrze  zdali LdI i zainteresowanych studentów wyższych lat studiów I stopnia; w wybranych przypadkach może też być właściwy dla studentów II stopnia pragnących wyrównać pewne braki materiału tu konkretne zasady do ustalenia - FS.  W edycji 2021 przedmiot ma charakter ściśle eksperymentalny. "}



u: ([about happen] * "i/o-efficient algorithms and data structures") ^repeat() ^keep()
    {"Traditional algorithms courses teach us that data is stored linearly, with each access costing constant time, regardless of its position and previous memory accesses. This is a major simplification of modern processors, where in fact memory consists of several levels where data might reside and with different access times for each one: fast but small caches, to RAM, to slow disks, where even modern caching consists of multiple levels. "}
    a: (!~my_negation * more)
        {"In this course we will learn how to design algorithms and data structures taking advantage of this hierarchical structure. We will learn approaches such as: External Memory Cache Oblivious Write Optimized algorithms and data structures. Additionally, the course will have an applied element in the form of C++ library for external memory algorithms: STXXL. Students will be required to implement a selected algorithms, in the form of a project. "}



u: ([about happen] * "seminar on internet of things") ^repeat() ^keep()
    {"Celem seminarium jest zgłębienie tematyki Internet of Things. Celem seminarium jest zgłębienie tematyki Internet of Things. "}
    a: (!~my_negation * more)
        {" "}



u: ([about happen] * "seminar: combinatorial theory of finite automata") ^repeat() ^keep()
    {"Jest to seminarium badawcze, na którym będziemy omawiać głównie najnowsze prace dotyczące automatów skończonych takich jak DFA i NFA i ich własności matematycznych. Będą to przede wszystkim zagadnienia związane z problemami otwartymi. "}
    a: (!~my_negation * more)
        {"Zapraszam przy tym chętnych do wspólnego rozwiązywania problemów. Będę proponować włączenie się do badań, co może zaowocować dobrą pracą magisterską licencjacką cokolwiek. Będzie też miejsce na przeprowadzenie paru eksperymentów obliczeniowych.  Tematyka obejmuje automaty, języki regularne, algorytmy, złożoność obliczeniową problemów, metody matematyczne aplikowane do automatów algebra, kombinatoryka, teoria grafów, teoria grup, teoria macierzy. Seminarium powinno być interesujące między innymi dla osób którym podobała się pierwsza część wykładu z języków formalnych. Poziom trudności będzie bardzo zróżnicowany, tak żeby każdy mógł znaleźć coś dla siebie. Konkretne propozycje będą pochodzić ode mnie, ale można zaproponować własny temat.  Nie trzeba posiadać głębokiej wiedzy z tych tematów, przede wszystkim jednak trzeba radzić sobie z czytaniem i rozumieniem prac naukowych. "}



u: ([about happen] * "seminar: front-end programming frameworks") ^repeat() ^keep()
    {"Celem seminarium jest danie uczestnikom możliwości wglądu w burzliwie  rozwijający się obszar technologii wytwarzania interfejsów użytkownika "}
    a: (!~my_negation * more)
        {"aplikacji przemysłowych, z naciskiem na technologie przeglądarkowe i mobilne. Ostatnie lata to nie tylko bardzo szybki rozwój standardów przemysłowych HTML5, CSS3 i platform technologicznych Android, iOS ale również - języków programowania tychże Swift, Kotlin, Typescript, Dart.  Prezentacja przygotowana przez studenta powinna obejmować przygotowanie makiety technologicznej w wybranej technologii. Prezentacja makiety będzie podstawą do szerszego przedstawienia konkretnego rozwiązania, jego zalet i perspektyw jak również potencjalnych ograniczeń. "}



u: ([about happen] * "seminar on blockchain and its applications") ^repeat() ^keep()
    {"Celem seminarium jest zgłębienie technologii Blockchain i obszarów jej zastosowania w znacznie szerszym kontekście niż tylko w kryptowalutach. Celem seminarium jest zgłębienie technologii Blockchain i obszarów jej zastosowania w znacznie szerszym kontekście niż tylko w kryptowalutach. "}
    a: (!~my_negation * more)
        {" "}



u: ([about happen] * "innovative projects by nokia") ^repeat() ^keep()
    {"Projekty zespołowe zaproponowane przez pracowników Nokia i prowadzone przez  nich. Spotkania będą się odbywać w siedzibie firmy. Za zaliczenie projektu "}
    a: (!~my_negation * more)
        {"student może otrzymać punkty ECTS co najmniej 4 oraz zaliczenie wymogu projektu zespołowego z programu studiów. "}



u: ([about happen] * "deductive verification") ^repeat() ^keep()
    {"This is a half-semester course offered in the second half of the spring  semester. "}
    a: (!~my_negation * more)
        {"The course is an introduction to deductive verification building on the foundational principles of Hoare logic and extending them to modern applications of separation logic state of the art is Facebook's Infer verifier. Apart from theoretical exercises, we will spend some time working with Why3 - a tool for deductive program verification.  Topics covered:     Hoare logic: foundations, formulation for an ML-like language, application to practical automated verification of programs "}



u: ([about happen] * "project: mimiker operating system") ^repeat() ^keep()
    {"Na zajęciach będziemy kontynuować rozwój uniksopodobnego systemu operacyjnego Mimikerhttps:  github.com cahirwpz mimiker dla platformy Raspberry Pihttps:  en.wikipedia.org wiki Raspberry Pi.   Postępy prac będą dokumentowane i publicznie udostępniane z pomocą rzutnika w holu koło sali 119 i na stronie internetowej mimiker.ii.uni.wroc.plhttps:  mimiker.ii.uni.wroc.pl . "}
    a: (!~my_negation * more)
        {"Ogólnie celem zajęć jest dodanie do jądra funkcji, które pozwolą na uruchomienie szerszego zestawu oprogramowania o otwartych źródłach, np. popularnych bibliotek, interpreterów języków programowania, gier. Będziemy się zajmować różnymi aspektami systemu w tym:     komunikacją międzyprocesową,    zarządzaniem procesami,    planowaniem procesów,    zarządzaniem pamięcią wirtualną,    wirtualnym systemem plików,    stosem sieciowym TCP IP,    sterownikami urządzeń, "}



u: ([about happen] * "algorithmic seminar") ^repeat() ^keep()
    {"Przedmiot nie będzie się odbywać w trybie zdalnym "}
    a: (!~my_negation * more)
        {"Seminarium poswięcone będzie bieżącym osiągnięciom algorytmicznym. W jego ramach omawiane będą wybrane wyniki zaprezentowane w ostatnich latach na wiodących konferencjach algorytmicznych. W celu umożliwienia w miarę szerokiego wyboru tematów, zajęcia te mają dwóch prowadzących: Marcina Bieńkowskiego i Jarosława Byrkę.  UWAGA: Seminarium odbywa się corocznie i można w nim brać udział wielokrotnie.   Przedmiot dostępny również dla doktorantów.  Wymagania wstępne  Zrealizowane przedmioty: "}



u: ([about happen] * "word equations") ^repeat() ^keep()
    {"Consider equations over words over an alphabet Σ. This problem was initially studied due to its connection with Hilbert's 10th problem and connections with  group theory. Contrary to early intuitions, it was shown to be decidable "}
    a: (!~my_negation * more)
        {"by Makanin in his seminal result. Modern approach to this problem are based on  compression which leads to much simpler solution and in particular does not depend on word combinatorics.  Over the years, several generalisations of the problem were considered, those include description of all solutions, equations with regular constraints, equations with inversion, equations in free group, generalisation to term equations context unification, etc. In most cases the known algorithms generalise to those setting, sometimes trivially and sometimes in an involved way.  On the other hand, simplified variants were also investigated, those include equations with one or two variables for which polynomial-time algorithms are known or quadratic word equations which have a very simple linear-space algorithm.  Lastly, combinatorial properties of solutions of word equations were also investigated, mostly in the case of equations without constants. Several characterizations of various equations classes were obtained. "}



u: ([about happen] * "practical aspects of computer networks") ^repeat() ^keep()
    {"Kurs jest uzupełnieniem wiedzy zdobytej na przedmiocie Sieci Komputerowe i lub CCNA o wiedzę praktyczną z zastosowań wybranych technologii sieciowych z dużym naciskiem na bezpieczeństwo omawianych technologii. Większość omawianych zagadnień będzie do zaimplementowania na specjalnie do tego celu przygotowanych maszynach wirtualnych oraz zajęciowych urządzeniach, żeby jak najlepiej pokazać ich praktyczne zastosowania w firmach i instytucjach.  Podczas kursu omawiane będą między innymi zagadnienia budowania i administracji sieciami i systemami takie jak: "}
    a: (!~my_negation * more)
        {"\- Bezpieczeństwo sieci   \-- zagadnienia takie jak: SIEM, IEEE 802.1x, Radius, VLANy, port-security, MACsec, xyz-snooping, IDS, IPS, itp.    \- Sieci bezprzewodowe   \-- WiFi 6 802.11ax, WPA3, PMF, punkty dostępu, zarządzanie, zabezpieczenia, problemy, standardy, bezpieczeństwo      \- Wirtualne sieci prywatne   \-- VPN IPsec, pptp, OpenVpn, WireGuard, IKEv2, ... "}



u: ([about happen] * "computational learning theory") ^repeat() ^keep()
    {"The lecture presents theory behind machine learning. We will cover the following topics: "}
    a: (!~my_negation * more)
        {"Introduction to PAC: 1. Introduction to PAC. Learnability of particular classes of concepts DNF formulas, automata 2. Occam's razor in the PAC context. PAC-reducibility.  Which concepts are lernable:  3. Growth functions and the VC-dimension.  4. Rademacher's complexity and the margin theory.  Leraning methods: "}



u: ([about happen] * "text mining") ^repeat() ^keep()
    {"Eksploracja tekstów jest dziedziną, w której badamy sposoby i możliwości efektywnej analizy dużych zbiorów danych tekstowych. Znajduje się ona na przecięciu wyszukiwania informacji, eksploracji danych oraz przetwarzania języka naturalnego takiego jak polski czy angielski.  Z racji tego, że coraz więcej danych jest dostępnych w postaci kolekcji dokumentów, eksploracja tekstów ma coraz większe znaczenie. "}
    a: (!~my_negation * more)
        {"Na wykładzie będziemy zajmować się wszystkimi etapami eksploracji tekstów i wyszukiwania informacji, kładąc nacisk na przedstawienie praktycznych i efektywnych rozwiązań, sczególnie w sytuacji, w której analizowany zbiór dokumentów ma rozmiar rzędu kilku gigabajtów tekstu na przykład cała Wikipedia.  Omówimy wstępne przetwarzanie tekstów, sposoby wyszukiwania pełnotekstowego, budowę efektywnego silnika, tworzącego dla zapytań rankingi relewantnych dokumentów. Omówimy sposoby zadawania zapytań, z dużym naciskiem na automatyczną korektę błędów spelling correction.  Zajmiemy się również zadaniem klasyfikacji. Na wykładzie zostaną też omówione pewne współczesne mechanizmy związane ze znajdywaniem reprezentacji wektorowej słów wywodzące się z sieci neuronowych m.in. word2vec oraz GloVe i praktyczne konsekwencje użycia tych reprezentacji w różnych zadaniach eksploracji tekstów. Będą również omówione metody wizualizacji tekstów i słów.   W przypadku konieczności organizowania zajęć w formie zdalnej, studenci otrzymają nagrane wykłady, ćwiczenia będą w przeprowadzone z deklaracjami i wspólną pracą nad Raportem z ćwiczeń, zadania na pracownie będą konsultowane i odbierane przy użyciu systemu telekonferencyjnego. "}



u: ([about happen] * "discrete mathematics") ^repeat() ^keep()
    {"Cel zajęć : zapoznanie z podstawowymi pojęciami i technikami matematyki dyskretnej. "}
    a: (!~my_negation * more)
        {"Program: 1. Asymptotyka funkcji liczbowych w zastosowaniu do szacowania złożoności algorytmów. 2. Elementy kombinatoryki: permutacje, podziały, wariacje z powtórzeniami i bez powtórzeń, współczynniki dwumianowe, liczby Catalana. 3. Metody zliczania, w tym zasada włączeń-wyłączeń oraz zasada Dirichleta. 4. Rekurencje i rozwiązywanie równań rekurencyjnych. Metoda anihilatorów. 5. Elementarna teoria liczb: podzielność, liczby pierwsze, rozkład na czynniki pierwsze, NWD i algorytm Euklidesa. 6. Arytmetyka modularna: małe twierdzenie Fermata i twierdzenie Eulera, chińskie twierdzenie o resztach. 7. Funkcje tworzące. 8. Teoria grafów: grafy dwudzielne, grafy skierowane, ścieżki i spójność, drzewa, obliczanie drzewa rozpinającego o minimalnej wadze, metody przeszukiwania grafów, skojarzenia, twierdzenie Halla, cykle Eulera i Hamiltona, planarność, kolorowalność wierzchołkowa grafu, znajdowanie najkrótszych ścieżek, przepływy w sieciach. "}



u: ([about happen] * "digital archeology") ^repeat() ^keep()
    {"Nanos gigantum humeris insidentes  - Bernard z Chartres "}
    a: (!~my_negation * more)
        {"Proseminarium jest poświęcone omówieniu technologii informatycznych w tym systemów, języków programowania, architektur komputerów itp. oraz teorii, które odegrały ważną rolę w rozwoju informatyki, ale odeszły już w niepamięć lub mają obecnie tylko niszowe znaczenie. Każde poruszane zagadnienie powinno być starsze niż przedstawiający je prelegent. Wybór tematów zależy od preferencji słuchaczy. Mogą to być krótkie kursy klasycznych języków programowania np. Algol 60, Cobol, Fortran, PL 1, omówienie architektury słynnych systemów komputerowych np. CDC Cyber, IBM 360, IBM PC XT i systemów operacyjnych np. OS 360, RSX-11, CP M, MS DOS, BeOS lub ważne prace teoretyczne np.  On "}



u: ([about happen] * "seminar: artificial intelligence for games") ^repeat() ^keep()
    {"Seminarium jest w pewnym sensie kontynuacją wykładu Artificial Intelligence for Games. "}
    a: (!~my_negation * more)
        {"Po pierwsze, chciałbym abyśmy przedstawiali na nim tematy zaawansowane, które z różnych względów nie zmieściły się na wykładzie. Po drugie, seminarium ma umożliwić bycie na bieżąco z najważniejszymi osiągnięciami w dziedzinie - będziemy więc na nim referować najciekawsze prace publikowane na konferencjach i w czasopismach związanych z tematyką GECCO, CEC, COG, IJCAI, ACG, EvoSTAR, AIIDE, Transactions on Games, GAme AI Pro oraz omawiać wyniki i prezentować algorytmy z zawodów AI odbywających się w ramach tych konferencji.  W szczególności, w tegorocznej edycji chciałbym poświęcić trochę miejsca na Procedural Content Generation oraz wykorzystanie AI w grach komercyjnych no chyba, że znów nam zejdzie na MCTS i spółkę ;.  Zainteresowani będą mieli okazję włączenia się do badań, co może stanowić podstawę do pracy magisterskiej lub licencjackiej inżynierskiej. "}



u: ([about happen] * "information systems security") ^repeat() ^keep()
    {"Celem zajeć jest przegląd różnych aspektów bezpieczeństwa systemów  informatycznych głównie od strony ich tworzenia i rozwoju, ale również z "}
    a: (!~my_negation * more)
        {"punktu widzenia ich utrzymania. Wszystkie prezentowane zagadnienia będą podparte stroną praktyczną, czyli przeglądem produktów dostępnych na rynku wraz, jeśli będzie to uzasadnione, przykładowymi aplikacjami.   Program    1. Bezpieczeństwo informacji      wprowadzenie do zagadnienia      podstawy kryptografii   2. Certyfikaty, podpisy elektroniczne, znaczniki czasu "}



u: ([about happen] * "fine-grained complexity") ^repeat() ^keep()
    {"Przedmiot będzie prowadzony przez dwie osoby: Bartłomieja Dudka i Pawła Gawrychowskiego. "}
    a: (!~my_negation * more)
        {"Złożoność drobnoziarnista fine-grained complexity jest aktualnie jednym z najbardziej dynamicznie rozwijających się kierunków algorytmiki. Prace poświęcone tej tematyce regularnie pojawiają się na topowych konferencjach typu STOC FOCS SODA ICALP, a poświęcone jej wykłady są prowadzone na najlepszych uczelniach zarówno w Europie ETH, Saarbruecken, jak i w USA MIT, Stanford, Harvard. Celem tych zajęć będzie wprowadzenie i przedstawienie najciekawszych w naszej ocenie wyników w tej dziedzinie.  Celem fine-grained complexity jest klasyfikacja problemów rozwiązywalnych w czasie wielomianowym. Przykładowo, w problemie APSP chcemy znaleźć odległość między każdą parą wierzchołków w danym ważonym grafie skierowanym. Nie jest trudno rozwiązać ten problem w czasie On^3, co być może zaskakujące nie znamy istotnie szybszego algorytmu. Ale jednocześnie nie potrafimy udowodnić, że takiego nie ma! Naturalne jest więc rozważanie całej klasy problemów, które są równoważne APSP w odpowiednio zdefiniowanym sensie: rozwiązanie dowolnego z nich w czasie On^3-eps sprawi, że uzyskamy istotnie szybsze rozwiązanie dla wszystkich innych.  Wśród technik przedstawianych na wykładzie znajdzie się sporo takich, które powinny być przystępne już dla studentów, którzy zaliczyli zajęcia z Matematyki Dyskretnej a z całą pewnością dla tych, którzy zaliczyli Algorytmy i Struktury Danych. Pojawią się jednak także szczególnie na ćwiczeniach pomysły nieco trudniejsze, których zrozumienie może być dobrym wstępem do ambitnej pracy magisterskiej. "}



u: ([about happen] * "seminar: reinforcement learning for games") ^repeat() ^keep()
    {"Jest to seminarium badawcze, na którym będziemy omawiać najnowsze prace dotyczące uczenia ze wzmocnieniem w szczególności Deep Q Learning do tworzenia agentów dla gier.  Będziemy zajmować się głównie grami klasycznymi, ale mogą pojawić się też współczesne gry czasu rzeczywistego. Oprócz zastosowania do konkretnych gier, pojawią się też takie tematy jak Mu Zero, Deep Learning w General Game Playing i obecnie rozwijane frameworki. "}
    a: (!~my_negation * more)
        {" "}



u: ([about happen] * "programming languages") ^repeat() ^keep()
    {"Język programowania stanowi podstawowe narzędzie informatyka. Teoria  języków programowania dostarcza środków umożliwiających obiektywną ocenę i porównanie istniejących języków programowania oraz poszczególnych konstrukcji w nich występujących, a także projektowanie i implementację nowych języków z zapewnieniem pewnych własności, które są kluczowe z punktu widzenia poprawności implementacji oraz pragmatyki programistycznej. Wspiera ona także wnioskowanie o samych programach, pozwalając na ich mniej lub bardziej sformalizowaną weryfikację i optymalizację. "}
    a: (!~my_negation * more)
        {"Przedmiot ten jest wprowadzeniem do fundamentalnych zagadnień związanych z projektowaniem, semantyką i implementacją języków programowania, prezentowanych w systematyczny i rygorystyczny sposób przy użyciu wybranego formalizmu matematycznego. Przedmiot skupia się na opisie semantyki operacyjnej oraz systemów typów najważniejszych konstrukcji językowych występujących w popularnych językach programowania, jednocześnie wprowadzając niezbędny zestaw narzędzi pozwalający na formalne wnioskowanie o językach programowania i samych programach, konstruowanie nowych języków z zapewnieniem semantycznej poprawności ich definicji, a także implementację języków programowania opartą na ich matematycznej definicji. "}



u: ([about happen] * "discrete mathematics") ^repeat() ^keep()
    {"Celem przedmiotu jest przedstawienie elementów matematyki, które są szczególnie użyteczne dla informatyków i nie są częścią standardowego wykładu algebry, analizy czy rachunku prawdopodobieństwa. W szczególności są to przydatne informatykowi elementy teorii liczb, kombinatoryki i teorii grafów. Wiedza w tym zakresie jest przydatna w konstruowaniu i analizie algorytmów, w tym weryfikacji poprawności i szacowaniu złożoności obliczeniowej. Celem przedmiotu jest przedstawienie elementów matematyki, które są szczególnie użyteczne dla informatyków i nie są częścią standardowego wykładu algebry, analizy czy rachunku prawdopodobieństwa. W szczególności są to przydatne informatykowi elementy teorii liczb, kombinatoryki i teorii grafów. Wiedza w tym zakresie jest przydatna w konstruowaniu i analizie algorytmów, w tym weryfikacji poprawności i szacowaniu złożoności obliczeniowej. "}
    a: (!~my_negation * more)
        {" "}



u: ([about happen] * "unix kernel design") ^repeat() ^keep()
    {"Celem wykładu jest przedstawienie organizacji wewnętrznej jądra systemu operacyjnego FreeBSDhttps:  www.freebsd.org, który wyrósł ze źródeł oryginalnego systemu Unix z początku lat '80. FreeBSD znajduje zastosowanie np. w konsolach  Sony Playstation  i chmurze  Netflix . W trakcie naszej przygody będziemy zaglądać do pozostałych jąder z rodziny BSD, tj: OpenBSDhttps:  www.openbsd.org , NetBSDhttps:  www.netbsd.org , DragonFlyBSDhttps:  www.dragonflybsd.org . Nauka programowania sterowników dla systemu  FreeBSD  nie jest częścią tych zajęć. "}
    a: (!~my_negation * more)
        {"Na ćwiczeniach będziemy omawiać wybrane podsystemy jądra oraz najciekawsze algorytmy i struktury danych bazując na źródłach FreeBSDhttp:  bxr.su FreeBSD sys kern .   Celem pracowni programistycznej jest otrzymanie małego systemu z prostą uniksową powłoką, kilkoma użytecznymi programami `grep`, `cat`, `kill`, ... i edytorem pełnoekranowym. Będziecie uzupełniać wybrane podsystemy istniejącego szkoleniowego systemu operacyjnego:    sterownik terminala,   zarządzanie procesami,   wywołania systemowe,   system plików,   komunikacja z użyciem potoków,   obsługa sygnałów. "}



u: ([about happen] * "embedded systems") ^repeat() ^keep()
    {"Wykład jest wprowadzeniem do programowania systemów wbudowanych. W ramach  wykładu student zapozna się z architekturą popularnych mikrokontrolerów, "}
    a: (!~my_negation * more)
        {"nauczy się wykorzystywać ich peryferia do sterowania różnorodnymi urządzeniami zewnętrznymi, a także pozna popularne magistrale używane w systemach wbudowanych.   Wymagania     Znajomość języka ANSI C    Wskazana znajomość podstaw architektur systemów komputerowych   Program "}



u: ([about happen] * "eu economic policy") ^repeat() ^keep()
    {"Przedmiot będzie prowadzony przez dra hab. Radosława Kupczyka z Katedry Studiów Europejskich WNS UWr. "}
    a: (!~my_negation * more)
        {"Celem zajęć jest zapoznanie studentów z problematyką prowadzenia polityki gospodarczej,  która pozwala zrozumieć decyzje podejmowane przez instytucje krajowe rząd, bank centralny w celu zarządzania gospodarką. Przedmiot tłumaczy również funkcjonowanie systemu gospodarczego Unii Europejskiej ze szczególnym uwzględnieniem roli wspólnej waluty funkcjonującej na poziomie strefy euro. Celem przedmiotu jest również zdobycie wiedzy i zrozumienie mechanizmów rządzących kształtowaniem głównych polityk makroekonomicznych: budżetowej i monetarnej. Studenci poznają również zasady funkcjonowania banków centralnych odpowiedzialnych za prowadzenie polityki pieniężnej, a także zrozumieją korelację pomiędzy polityką podatkową, polityką pieniężną i walutową. Dzięki temu będą potrafili przewidzieć skutki prowadzonej przez rząd i Unię Europejską polityki gospodarczej, co pomoże im zmniejszyć ryzyko podejmowania błędnych decyzji finansowych, szczególnie w zakresie prowadzenia własnej firmy. "}



u: ([about happen] * "clone: eu economic policy") ^repeat() ^keep()
    {"Przedmiot będzie prowadzony przez dra hab. Radosława Kupczyka z Katedry Studiów Europejskich WNS UWr. "}
    a: (!~my_negation * more)
        {"Celem zajęć jest zapoznanie studentów z problematyką prowadzenia polityki gospodarczej,  która pozwala zrozumieć decyzje podejmowane przez instytucje krajowe rząd, bank centralny w celu zarządzania gospodarką. Przedmiot tłumaczy również funkcjonowanie systemu gospodarczego Unii Europejskiej ze szczególnym uwzględnieniem roli wspólnej waluty funkcjonującej na poziomie strefy euro. Celem przedmiotu jest również zdobycie wiedzy i zrozumienie mechanizmów rządzących kształtowaniem głównych polityk makroekonomicznych: budżetowej i monetarnej. Studenci poznają również zasady funkcjonowania banków centralnych odpowiedzialnych za prowadzenie polityki pieniężnej, a także zrozumieją korelację pomiędzy polityką podatkową, polityką pieniężną i walutową. Dzięki temu będą potrafili przewidzieć skutki prowadzonej przez rząd i Unię Europejską polityki gospodarczej, co pomoże im zmniejszyć ryzyko podejmowania błędnych decyzji finansowych, szczególnie w zakresie prowadzenia własnej firmy. "}



u: ([about happen] * "design and implementation of systems in the cloud") ^repeat() ^keep()
    {"Minęły już czasy, kiedy do uruchomienia aplikacji sieciowych wynajmowało się  prosty serwer dedykowany. Dzięki szerokiej ofercie usług chmurowych każdy może "}
    a: (!~my_negation * more)
        {"przygotować wysoce niezawodną, globalną infrastrukturę gotową przyjąć ogromny ruch na setkach serwerów. Rola administratora serwerów traci na ważności, a coraz bardziej potrzebni są programiści specjalizujący się w chmurach.       Zajęcia objaśnią podstawy projektowania, wdrażania i utrzymywania aplikacji w środowisku chmurowym - zarówno małych, jak i większych systemów. Duży nacisk będzie położony na wysoką dostępność i skalowalność. Przedstawimy nowe możliwości oraz usługi dostępne u wiodących dostawców usług chmurowych. Przyjrzymy się także jak zaplanować architekturę aplikacji, by jak najbardziej "}



u: ([about happen] * "parallel computing with cuda (q2)") ^repeat() ^keep()
    {"Półsemestralny kurs 15h wyklad + 15h pracowni obejmuje naukę podstaw programowania równoległego kart graficznych w oparciu o bibliotekę CUDA firmy NVIDIA. Zajęcia będą w nietypowym półsemestralnym wymiarze i rozpoczną się w połowie semestru w listopadzie, o szczegółach zapisani zostaną powiadomieni mailowo na początku semestru. "}
    a: (!~my_negation * more)
        {"Współczesne karty graficzne zawierają coraz większą moc obliczeniową w postaci wielu równoległych jednostek obliczeniowych i są wykorzystywane nie tylko do generowania grafiki. Biblioteka CUDA umożliwia programowanie kart graficznych przy pomocy rozszerzeń języka C. W ten sposób możemy wykonywać obliczenia często szybciej niż na CPU. Wymaga to jednak niskopoziomowego programowania w oparciu o bardziej skomplikowany model pamięci.  Głównym celem kursu jest nabycie umiejętności programowania równoległego w technologii CUDA zagadnień nie tylko związanych z grafiką komputerową. W tym celu konieczne jest poznanie architektury współczesnych kart graficznych i ograniczeń które wpływają na wybór algorytmu i sposób implementacji na karcie graficznej. "}



u: ([about happen] * "term logic") ^repeat() ^keep()
    {"Przedmiot jest prowadzony przez dr.  Elżbietę Magner z Katedry Logiki i Metodologii Nauk UWr. "}
    a: (!~my_negation * more)
        {"Program:     co to jest nazwa, wybrane podziały nazw, stosunki zakresowe między nazwami;    język a metajęzyk;    nazwy a definicje;   zdania kategoryczne; "}



u: ([about happen] * "project: demoscene production") ^repeat() ^keep()
    {"Demoscena to międzynarodowa subkultura komputerowa - powstała w latach 80 ubiegłego wieku - zajmująca się tworzeniem dem, czyli programów komputerowych generujących w czasie rzeczywistym prezentacje audiowizualne. Celem dema jest zaprezentowanie umiejętności programistycznych, graficznych i muzycznych członków grupy demoscenowej. Produkcje demoscenowe wystawia się w konkursach na festiwalach zwanych  demoparty , na których uczestnicy głosują na najlepsze produkcje w kilku kategoriach. Jeśli chcesz się dowiedzieć na ten temat więcej, to koniecznie obejrzyj polski film dokumentalny  Sztuka przekraczania https:  www.youtube.com watch?v=NVEBWUM8lko. "}
    a: (!~my_negation * more)
        {"Celem projektu jest przygotowanie dema na komputer Amiga 500https:  pl.wikipedia.org wiki Amiga 500 pod szyldem grupy Ghostownhttp:  www.pouet.net groups.php?which=10931, która wielokrotnie zajmowała pierwsze miejsce na podium, np.: Sushi Boyzhttps:  www.youtube.com watch?v=ZQ3-nnoXGng czy Human Traffichttps:  www.youtube.com watch?v=mZTWdzJMiJA. Produkcję chcielibyśmy wystawić na Revisionhttps:  en.wikipedia.org wiki Revision demoparty - najbardziej prestiżowym i największym demoparty na świecie - odbywającym się co roku na przełomie marca i kwietnia. Grupa w swoich szeregach ma wysokiej klasy grafików Slayerhttp:  artcity.bitfellas.org index.php?a=artist&id=467'a i DKLhttp:  artcity.bitfellas.org index.php?a=artist&id=894'a oraz świetnego muzyka Jazzcathttps:  soundcloud.com jazzcat-2 popular-tracks'a. Lubimy eksperymenty i nowe wyzwania, dlatego chcielibyśmy zaprosić do współpracy programistów niezwiązanych z demosceną i zobaczyć dokąd nas to zaprowadzi. A nuż będzie to strzał w dziesiątkę?  W projekcie wykorzystujemy szereg nowoczesnych technologii do tworzenia narzędzi, grafiki 2D, modeli 3D, muzyki i efektów audiowizualnych:   - język Pythonhttps:  www.python.org , GoLanghttps:  golang.org  i TypeScripthttps:  www.typescriptlang.org   - shadery GLSL ShaderToyhttps:  www.shadertoy.com   - środowisko Processinghttps:  processing.org   - Photoshophttps:  www.adobe.com pl products photoshop.html  - Modo3Dhttps:  www.foundry.com products modo i Blenderhttps:  www.blender.org   - instrumenty i efekty VSThttps:  en.wikipedia.org wiki Virtual Studio Technology "}



u: ([about happen] * "intelligence services in state security system and international relations") ^repeat() ^keep()
    {"Przedmiot jest prowadzony przez dr. Jarosława Stróżyka z  Instytutu Studiów Międzynarodowych. "}
    a: (!~my_negation * more)
        {"Kurs dotyczy zagadnień związanych z funkcjonowaniem służb specjalnych w systemie bezpieczeństwa państwa oraz stosunkach międzynarodowych. Wywiad i kontrwywiad. Definicje i terminologia. Pojęcie procesu informacyjnego w wywiadzie, metody i techniki pozyskiwania informacji. Analiza wywiadowcza. Wywiad i rozpoznanie wojskowe.   Celem przedmiotu jest nabycie przez studentów wiedzy na temat roli odgrywanej przez służby specjalne wywiadowcze i kontrwywiadowcze w systemie bezpieczeństwa państwa, zarówno w aspekcie bezpieczeństwa wewnętrznego jak i zewnętrznego, a także poznanie zadań i uprawnień polskich wojskowych oraz cywilnych służb specjalnych. Istotnym elementem będzie także opis wybranych elementów współpracy międzynarodowej służb specjalnych., w tym na forum NATO oraz UE. "}



u: ([about happen] * "decision problems in logic") ^repeat() ^keep()
    {"Prace Churcha, Turing i Goedla z początków XX w. pokazały, że problem spełnialności czy dana formuła ma model? dla logiki pierwszego rzędu jest nierozstrzygalny. Wyniki te zapoczątkowały duży program badawczy, którego celem było ustalenie, które naturalne fragmenty logiki pierwszego rzędu są rozstrzygalne. Nieco później dodatkowym bodźcem dla tego programu stały się potencjalne zastosowania w informatyce bazy danych, reprezentacja wiedzy,  automatyczna weryfikacja programów i sprzętu, sztuczna inteligencja, itd.. Oczywiście, zwiększyły one też zainteresowanie badaczy dokładną złożonością obliczeniową problemu spełnialności w przypadku fragmentów rozstrzygalnych. "}
    a: (!~my_negation * more)
        {"Na wykładzie przedstawię szereg wyników dotyczących rozstrzygalności nierozstrzygalności i złożoności obliczeniowej logik motywowanych teorią informatyki.  W programie m.in.: logiki modalne,  temporalne i deskrypcyjne, logiki z dwiema zmiennymi, fragmenty strzeżone, logika z unarną negacją. Wykład będzie oparty głównie na pracach opublikowanych w ciągu ostatnich dwudziestu kilku lat, choć opowiem oczywiście również o paru klasycznych wynikach, sięgając m.in. do prac Kurta Gödla.  Wymagania: Logika dla informatyków, Zalecane: Języki formalne i złożoność obliczeniowa   W razie konieczności prowadzenia zajęć zdalnie: wykłady "}



u: ([about happen] * "software engineering") ^repeat() ^keep()
    {"Przedmiot zapoznaje z podstawowymi: wiedzą i umiejętnościami dotyczącymi  wytwarzania oprogramowania. Obejmuje zwinny i i wodospadowego model "}
    a: (!~my_negation * more)
        {"wytwarzania oprogramowania oraz związane z nimi procesy . Zmusza do wymaganej przez pracodawców pracy zespołowej na wszystkich podstawowych etapach produkcji oprogramowania.  Wykonywane praktyczne zadania uczą podejmować i uzasadniać decyzje projektowe oraz prezentować opracowane rozwiązania.  Przedmiot pozwala zrozumieć pracę inżyniera oprogramowania oraz praktycznie przygotowuje do pracy na tym stanowisku. "}



u: ([about happen] * "probability theory for computer scientists") ^repeat() ^keep()
    {"Serdecznie zapraszam na wykład z rachunku prawdopodobieństwa. Na wykładzie  zapoznamy się z podstawowymi pojęciami i technikami probabilistycznymi. Wiele "}
    a: (!~my_negation * more)
        {"z nich posiada zastosowania w analizie i konstruowaniu wspołczesnych algorytmow, co będzie ilustrowane licznymi przykładami zastosowania rachunku prawdopodobieństwa do zagadnień typowo informatycznych. Wykład dedykowany jest studentom informatyki, ktorzy chcieliby poznać arkana rachunku prawdopodobieństwa, by stosować je w analizie i konstruowaniu algorytmow grafowych, programowaniu liniowym, geometrii obliczeniowej, algorytmow teorio- liczbowych.    Program: "}



u: ([about happen] * "course: modeling 3d and visualization in sketchup") ^repeat() ^keep()
    {"Kurs modelowania 3D w programie SketchUp i wizualizacji za pomocą pluginu brighter3d, z elementami pisania wtyczek w języku Ruby. "}
    a: (!~my_negation * more)
        {"Wykład:   modelowanie scen 3D  modelowanie organiczne  wizualizacja i animacja scen 3D  podstawy języka Ruby  pisanie własnych pluginów  photo matching  Zaliczenie na podstawie punktów z pracowni około 12. "}



u: ([about happen] * "introduction to computer science") ^repeat() ^keep()
    {"Celem przedmiotu jest przedstawienie struktury logicznej i zasad działania komputera, cyfrowej reprezentacji informacji oraz sposobu wykonywania programów przez komputer. Istotnym celem jest też umożliwienie studentom nabycia podstawowych umiejętności z zakresu konstruowania i analizy algorytmów, w tym weryfikacji poprawności i szacowania złożoności obliczeniowej. W ramach przedmiotu umożliwia się poznanie podstawowych struktur danych i ich implementacji, a także nabycie umiejętności stosowania takich struktur danych do rozwiązywanych problemów. "}
    a: (!~my_negation * more)
        {"Program:   Pojęcia: problem, specyfikacja, algorytm, program komputerowy. Budowa komputera - schemat logiczny.  Elementy programowania w języku niskopoziomowym na przykładzie maszyny RAM  Reprezentacja danych w pamięci komputera: binarna stałopozycyjna i zmiennopozycyjna reprezentacja liczb, arytmetyka binarna; reprezentacja tekstu, obrazu, dźwięku.  Programowanie w wysokopoziomowym języku strukturalnym, zstępująca metoda programowania.  Kompilacja, translacja, interpretacja programów. Zarządzanie pamięcią podczas uruchamiania programu.  Podstawowe konstrukcje programistyczne: iteracja, zagnieżdżanie, licznik, sumator, rekurencja.  Elementy analizy algorytmów: poprawność, własność stopu, złożoność czasowa i pamięciowa, miary złożoności; notacja asymptotyczna.  Podstawowe struktury danych i ich zastosowania: tablica, lista wiązana, stos, kolejka; drzewo przeszukiwań binarnych. Abstrakcyjne typy danych. "}



u: ([about happen] * "c minicourse") ^repeat() ^keep()
    {"Wstęp, czyli jak się ma Wstęp do programowania w języku C do Wstępu do  programowania w języku Python "}
    a: (!~my_negation * more)
        {"Studenci 1-go roku studiów 1-go stopnia mogą rozpocząć naukę programowania i podstaw informatyki w jednym z dwóch języków: C albo Python można wybrać tylko jeden z tych dwóch kursów!. Każdy z tych kursów pozwala opanować podstawy informatyki i programowania a w dalszych semestrach doskonalić się w programowaniu w innych lub tych samych językach. W szczególności zaczynając od Kursu: Wstęp do programowania w języku C, nie skazujecie się na zawsze na ten język i nieznajomość Pythona oraz  vice versa . W drugim semestrze studiów i kolejnych pojawiają się kursy języków programowania C++, Java, Ruby, Python, które pozwalają opanować różne języki, przy założeniu, że "}



u: ([about happen] * "logic for computer science (advanced)") ^repeat() ^keep()
    {"Przedmiot jest adresowany do słuchaczy, co do których nie ma wątpliwości, że dobrze rozumieją co to jest rozumowanie matematyczne, i którzy zetknęli się wcześniej z wieloma pojęciami objętymi programem przedmiotu ,,Logika dla  informatyków. Dlatego program nie tylko obejmuje wszystkie elementy programu przedmiotu ,,Logika dla informatyków, ale znacznie poza niego wychodzi ku kwestiom bardziej zaawansowanym. "}
    a: (!~my_negation * more)
        {" "}



u: ([about happen] * "computational complexity in practice") ^repeat() ^keep()
    {"Celem przedmiotu jest zaznajomienie słuchaczy z podstawowymi zagadnieniami teorii obliczeń oraz omówienie praktycznych zastosowań tej teorii, ze szczególnym uwzględnieniem implementowania algorytmów korzystających z narzędzi takich, jak SAT solvery, SMT solvery czy QBF solvery. "}
    a: (!~my_negation * more)
        {"Program przedmiotu obejmuje: modele obliczeń automaty i maszyny, praktyczne klasy złożoności obliczeniowej LogSpace, P, NP, PSpace, dyskusję o problemach nienależących do tych klas oraz omówienie narzędzi i technik wykorzystywanych do radzenia sobie z problemami o dużej złożoności.  Przedmiot ten nie będzie trudny: powinien być przystępny dla studentów trzeciego semestru. Zajęcia pomocnicze będą składały się z list zadań rozwiązywanych w trakcie zajęć oraz z zadań domowych implementacyjnych oraz teoretycznych. "}



u: ([about happen] * "photorealistic computer graphics") ^repeat() ^keep()
    {"The goal of the subject is to get inside knowledge of the range of problems connected with generating photorealistic images by simulation of light transport. Some people say that everyone should implement a ray tracer and although a simple one can be done in one afternoon we will devote the whole subject to do it nicely and to have more satisfaction and deeper understanding. "}
    a: (!~my_negation * more)
        {"The lecture will present theoretical background and during the lab we will implement the ray tracer starting from simple one, than adding accelerations structures and up to the physically correct one with Monte Carlo methods to solve light transport equations.   Program:     Ray tracing methods from visibility to simple light transport simulation    Acceleration structures to make it fast    Physical foundations of light transport     Monte Carlo methods    Ray tracing Monte Carlo methods: path tracing, photon maps, bidirectional path tracing, Metropolis, ...     Radiosity method "}



u: ([about happen] * "artificial intelligence for games") ^repeat() ^keep()
    {"This lecture aims to present game-related Artificial Intelligence from three perspectives: solving games, procedural content generation, and in-game AIs. I would like to show how many diverse roles AI can play when applied to the games domain, both from research and industry perspective. "}
    a: (!~my_negation * more)
        {"Also, this will be a perfect opportunity to clash theory with practice and see how many unpredicted situations happen when you program an entity to behave intelligently. The lab exercises will mainly require implementing various agents aimed to solve small-to-medium-sized problems. Finally, group projects will be an opportunity to develop something bigger.  The course will be split between presenting recent developments in AI research branch, and methods that are more commonly used in video games, including more advanced versions of standard AI techniques like A or minmax.  We will cover recent advancements in Computation Intelligence methods, their successful applications, and their limitations. This part of the program is based on a selection of publications from the leading AI conferences AAAI, IJCAI, GECCO and smaller venues closely related to this topic MCS IJCAI Workshop, COG. On the other hand, we will talk about some basic techniques omitted during the AI course, which, due to their simplicity and reliability, are the core of nearly every video game AI.   Example project topics: - implementing AI agent for one of the competitions hosted by AI conferences, e.g. COGhttp:  ieee-cog.org 2020 competitions conference, CEChttps:  wcci2020.org competitions  - developing PCG system that will produce interesting presumably game-related objects, e.g., maps, levels, items, sprites etc. - performing an extensive study of a chosen AI method on a number of different testbeds, e.g., using problems available at CodinGamehttps:  www.codingame.com  platform "}



u: ([about happen] * "algorithms for big data") ^repeat() ^keep()
    {"The course presents the mathematical and algorithmical ways of dealing with very large data sets. The need to process such large datasets is ubiquitous now, and arises in Internet search, machine learning, network traffic monitoring, scientific computing, signal processing, and other areas.  In such datasets, even linear complexity is simply not feasible. This invalidates many classical approaches to algorithm and data structure design, and creates the need to represent the data in a fashion that preserves some selected structural properties, but otherwise is highly compressed, and the need for new algorithmmic approaches. "}
    a: (!~my_negation * more)
        {"Example 1:   High-dimensional bit-vectors think of: for each user of a social network, we store which items they liked disliked. Surprisingly, instead of storing each bit-vector explicitly which would take gigabytes  per user , we can design relevant sketches. Each sketch takes logarithmic space, and we can query bit-vectors for similarity in logarithmic time!    Example 2:   Approximate matrix multiplication: we can multiply matrices much faster, if we are fine with output being a close approximation in some sense of the actual product.     Note:   This will be a rather math heavy course. However, the mathematical tools used will be rather basic basic probability and linear algebra. "}



u: ([about happen] * "seminar: numerical and computer graphics algorithms") ^repeat() ^keep()
    {"Seminarium jest rozszerzeniem wykładu z analizy numerycznej. Jego celem jest zapoznanie uczestników z nowymi oraz z klasycznymi, ale nieomawianymi na wykładzie z analizy numerycznej, metodami i algorytmami numerycznymi rozwiązywania różnego rodzaju zadań matematyki obliczeniowej i grafiki komputerowej. Do zaliczenia zajęć konieczne będzie wygłoszenie referatu na temat ustalonej z prowadzącym seminarium metody numerycznej, w tym również jej zaimplementowanie oraz przetestowanie. Pomysłów na referaty można szukać m.in. przeglądając w miarę świeże podręczniki czy artykuły opublikowane w czasopismach związanych z tematyką seminarium, np.: "}
    a: (!~my_negation * more)
        {"Numerical Algorithmshttps:  www.springer.com journal 11075,  Numerische Mathematikhttps:  www.springer.com journal 211,  BIT Numerical Mathematicshttps:  www.springer.com journal 10543,  Applied Numerical Mathematicshttps:  www.journals.elsevier.com applied-numerical-mathematics,  Applied Mathematics and Computationhttps:  www.journals.elsevier.com applied-mathematics-and-computation,  SIAM Journal on Numerical Analysishttps:  www.siam.org publications journals siam-journal-on-numerical-analysis-sinum,  Journal of Computational and Applied Mathematicshttps:  www.journals.elsevier.com journal-of-computational-and-applied-mathematics,  Journal of Approximation Theoryhttps:  www.journals.elsevier.com journal-of-approximation-theory,  International Journal for Numerical Methods in Engineeringhttps:  onlinelibrary.wiley.com journal 10970207,  Computer-Aided Designhttps:  www.journals.elsevier.com computer-aided-design, "}



u: ([about happen] * "distributed algorithms") ^repeat() ^keep()
    {"Wykład ma na celu zaznajomienie studentów z podstawowymi algorytmami i  protokołami występującymi w obliczeniach rozproszonych. Rozważane są modele "}
    a: (!~my_negation * more)
        {"synchroniczne i asynchroniczne bez wspólnej pamięci. Główny model komunikacji, to wymiana komunikatów.  Program:    1. Synchroniczne i asynchroniczne modele obliczeń rozproszonych.   2. Rozproszone algorytmy wykrywania zakleszczenia, wyboru lidera i uzgadniania wspólnej decyzji.   3. Podstawowe algorytmy grafowe w protokołach rozproszonych: algorytmy wyznaczania drzewa rozpinającego i przeszukiwania grafu.   4. Odporność protokołów rozproszonych na uszkodzenia elementów sieci.   5. Przydział zasobów w sieciach. "}



u: ([about happen] * "olympic algorithms") ^repeat() ^keep()
    {"Niektórzy studenci mają doświadczenie w startach w zawodach Olimpiady Informatycznej lub nawet zawodach ACM ICPC. Niewielu jednak wie, jak wygląda proces przygotowania takiego konkursu przez organizatorów. Czasami, a może  nawet często, przygotowanie zadania jest trudniejsze od jego rozwiązania. Celem tego kursu jest pokazanie świata zawodów algorytmicznych od strony kuchni, co być może będzie też pomocne w przygotowaniach do startów. Zainteresowane osoby uzyskają też informacje o tym jak wziąć udział w pracach nad konkursami organizowanymi na naszej uczelni i poza nią. "}
    a: (!~my_negation * more)
        {"Drugą częścią przedmiotu jest przygotowanie studentów do dydaktyki informatyki, szczególnie w szkołach podstawowych i liceach. Studenci poznają metody nauczania uczniów, a na ćwiczeniach będą prezentowali również własne pomysły i adaptacje metod z wykładu. Zainteresowane osoby uzyskają też informacje o tym jak włączyć się w działania edukacyjne w szkołach koordynowane przez naszą uczelnię.    Program wykładu  ===============   Pierwsza część kursu obejmować będzie przegląd zagadnień związanych z przygotowaniem zadania konkursowego: właściwe przygotowanie treści, dobór limitów na rozmiar danych wejściowych, dobór ograniczeń czasu i pamięci, przygotowanie danych testowych, przygotowanie programów pomocniczych, dobór punktacji za rozwiązania częściowe, wymyślanie własnych zadań, omówienie potencjalnych błędów podczas przygotowania zadania. "}



u: ([about happen] * "workshops: linux device drivers programming") ^repeat() ^keep()
    {"Zajęcia będą prowadzone przez pracownika firmy AntMicrohttps:  antmicro.com  w cyklu dwutygodniowym. "}
    a: (!~my_negation * more)
        {"Na warsztatach będziemy rozwijać sterownik do sensora podłączonego przez magistralę I²C IMU lub temperatury i wilgotności. Każde spotkanie zaczniemy od wprowadzenia do tematu, a dalej przełączymy się na pisanie kodu. Po każdych zajęciach sterownik będzie implementował coraz więcej funkcjonalności. System Linux będziemy uruchamiać pod kontrolą Renode symulującego płytkę rozwojową na procesorze ARM. Ambitni studenci w ramach projektu końcowego mogą spróbować podpiąć jakiś sensor do prawdziwego sprzętu, np. Raspberry Pi. "}



u: ([about happen] * "fpga programming") ^repeat() ^keep()
    {"Wykład jest wprowadzeniem do projektowania układów cyfrowych przy użyciu  języka opisu sprzętu SystemVerilog oraz ich implementacji na układach FPGA. W ramach "}
    a: (!~my_negation * more)
        {"zajęć student nauczy się również metod testowania sprzętu oraz zapozna się z podstawami formalnej weryfikacji układów cyfrowych.  Wymagania:  Wysoce wskazana jest znajomość zasad projektowania układów cyfrowych np. przez zaliczenie przedmiotu Logika cyfrowa, mile widziana jest znajomość języka C i idąca za tym umiejętność programowania niskopoziomowego.  Program: "}



u: ([about happen] * "principles of program analysis") ^repeat() ^keep()
    {"Program analysis offers static compile-time techniques for reasoning about behaviors of computer programs. The main application domain is in optimizing compilers, but the techniques are also useful in automatic error detection, verification of properties of software used in safety-critical computer systems, locating vulnerable code etc. "}
    a: (!~my_negation * more)
        {"This course gives an overview of main approaches to program analysis and the theory behind them.   The course may be mathematically quite demanding, so overall fluency in mathematics is required.  Topics covered:   Data-flow analysis  Control-flow analysis  Abstract interpretation "}



u: ([about happen] * "computing for computer scientists") ^repeat() ^keep()
    {"Celem przedmiotu jest przybliżenie studentom pierwszego roku podstawowych narzędzi do współtworzenia, kompilowania, uruchamiania, publikowania oraz dokumentowania swoich oraz cudzych programów. "}
    a: (!~my_negation * more)
        {"Ten kurs jest planowany na 10 godzin wykładu, 10 godzin pracowni oraz 3 punkty ECTS.  Program przedmiotu:     Praca w systemie Linux: pliki, procesy, użytkownicy, potoki i strumienie, kompilowanie i uruchamianie programów.     Polecenie ssh oraz podstawy kryptografii.    Systemy kontroli wersji na przykładzie systemu git.    Narzędzia do wyszukiwania informacji.    LaTeX. "}



u: ([about happen] * "advanced data structures") ^repeat() ^keep()
    {"Na obowiązkowym wykładzie z Algorytmów i Struktur Danych zapoznajemy się głównie z klasycznymi strukturami danych, które w dość ograniczony sposób operują na danych wejściowych. Na przykład, do zaimplementowania struktury słownikowej opartej na dowolnych drzewach przeszukiwań binarnych potrzebujemy być w stanie tylko porównywać dwa elementy. Plusem takiego założenia jest to, że w często nietrudny sposób można udowodnić, że skonstruowana struktura jest optymalna. Należy się jednak zastanowić, czy ograniczenie się do porównywania elementów jest rozsądne. "}
    a: (!~my_negation * more)
        {"Głównym celem wykładu będzie przedstawienie słuchaczom szeregu wyników w tak zwanym modelu Word RAM, w którym pozwalamy na wykonywanie operacji takich jak dodawanie, odejmowanie, przesunięcia bitowe, mnożenie czy też dzielenie na elementach liczbach przechowywanych w strukturze. Dla wspomnianego powyżej przykładu pozwala to na skonstruowanie słownika przechowującego zbiór liczb z przedziału 1,n^2 tak, aby każda operacja działała w czasie Ologlogn. Co ciekawe, pokażemy że nie da się lepiej!  Ze względu na częstą nieobecność prowadzącego we Wrocławiu, niektóre wykłady będą być może prowadzone w formie online lub jako 4h wykładu na miejscu raz na dwa tygodnie i 4h ćwiczeń raz na dwa tygodnie. Szczegóły zostaną ustalone ze słuchaczami na początku semestru. "}



u: ([about happen] * "proseminar: blockchain beyond buzzwords") ^repeat() ^keep()
    {"O blockchainie mówi i pisze się dużo, ale niekoniecznie z sensem. To proseminarium powinno choć trochę zbliżyć uczestniczki i uczestników do rzetelnego zrozumienia przynajmniej pewnych aspektów tej technologii. "}
    a: (!~my_negation * more)
        {"Sugerowane źródła dla wystąpień to fragmenty książek uchodzących za podręczniki w tej tematyce przy okazji będzie można ocenić, czy opinia jest trafna, różne  white papery  a także te w inne kolory czy wzorki poszczególnych projektów, i ew. artykuły naukowe bądź do takich aspirujące; lista ta wszelako nie jest zamknięta.   Informacja uzupełniająca dla zapisujących się w zimie 21 22 w związku z brakiem spotkań przed końcem wypisów zapisów:  Jako proseminarium przedmiot jest przeznaczony zasadniczo dla słuchaczy studiów I stopnia. Lista proponowanych tematów pojawi się na pierwszym spotkaniu 20 października, oczywiście można przedstawić swój własny pomysł. Zgodnie z nazwą i opisem przedmiotu, zależy mi na krytycznym spojrzeniu na to, co o okołoblockchainowych kwestiach się mówi - może to zainspiruje Państwa do znalezienia ciekawych tematów. "}



u: ([about happen] * "combinatorics") ^repeat() ^keep()
    {"Wykład opisuje podstawowe zagadnienia kombinatoryczne nie zawarte w programie przedmiotu: matematyka dyskretna. Wykład opisuje podstawowe zagadnienia kombinatoryczne nie zawarte w programie przedmiotu: matematyka dyskretna. "}
    a: (!~my_negation * more)
        {" "}



u: ([about happen] * "selected aspects of practical software development") ^repeat() ^keep()
    {"Przedmiot dostępny w dwóch wersjach: kurs inżynierski za 5 ECTS oraz  przedmiot I1 z egzaminem za 6 ECTS oba zaliczają te same grupy efektów "}
    a: (!~my_negation * more)
        {"kształcenia. Wybór kursu bez egzaminu zaznacza się poprzez dodatkowe zapisanie się do grupy ćwiczeniowej z etykietą wykład okrojony.   Celem zajęć jest przedstawienie studentom praktyki projektowania obiektowego oprogramowania. Zajęcia w zwięzły sposób łączą podstawową wiedzę z zakresu baz danych i inżynierii oprogramowania w obszarze projektowania obiektowego w wybranych współczesnych realiach technologicznych.  Wymagania: przyda się znajomość paradygmatu obiektowego, pojęć obiektu, konstruktora, dziedziczenia, polimorfizmu i jego realizacji we współczesnych "}



u: ([about happen] * "human-computer interaction or computer-human interaction (hci or chi)") ^repeat() ^keep()
    {"Cel zajęć. Przedmiot jest poświęcony wszechstronnemu przeglądowi  zagadnień związanych z interakcją na styku człowiek-komputer ang.  Human-Computer Interaction  oraz projektowaniem rzeczy użytecznych i ładnych ang. "}
    a: (!~my_negation * more)
        {"design  . Celem zajęć jest poznanie zasad rządzących procesem projektowania, oceny i realizacji interaktywnych interfejsów systemów komputerowych spełniających postulaty użyteczności ang.  usability . Na ćwiczeniach studentki i studenci omawiają tematy przedstawiane na wykładzie i wskazane w literaturze, prezentują i utrwalają samodzielnie zdobytą wiedzę. W ramach pracowni  projektują i wykonują w zespołach dwu- lub trzyosobowych interfejs wybranej przez siebie aplikacji lub witryny sieciowej, działając etapowo, zgodnie z zasadami sztuki w tej dziedzinie.  Wymagania. Przedmiot „Komunikacja człowiek-komputer” jest wybitnie interdyscyplinarny. Interfejsy komputerowe są poddawane analizie i refleksji w zetknięciu z rzeczywistym, typowym lub wyrafinowanym użytkownikiem. Prócz oczywistych kwalifikacji informatycznych, w tym technik inżynierii oprogramowania osobny wykład i niektórych aspektów AI odrębny wykład, szerzej - aplikacji zainteresowania psychologią, socjologią, antropologią, lingwistyką, fizjologią, ergonomią, wzornictwem przemysłowym, a nawet filozofią i sztuką dają osobie studiującej KCK HCI przewagę twórczą i produkcyjną. Jeśli chodzi o narzędzia warsztatowe, wskazane jest elementarne rozeznanie w posługiwaniu się którymś z języków tworzenia interaktywnych stron WWW np. HTML, osobny wykład, aplikacji okienkowych inny wykład, a także - być może najważniejsze - wprawne operowanie którymś z systemów konstruowania makiet interfejsów; jego uboczne, samodzielne opanowanie nie przysparza trudności, a znajomość ta stanowi swoistą „wartość dodaną”.   Cele szczegółowe. Uczestnik kursu ma okazję poznać elementy składające się na dobry interfejs, w rozumieniu wywierania jak najkorzystniejszych wrażeń na użytkowniku docelowym, opanować podstawową wiedzę psychologiczną i socjologiczną w zakresie przydatnym w projektowaniu GUI, zrozumieć związki między udanym interfejsem a sukcesem ekonomicznym, poznać podstawowe zasady ergonomii i komunikacji werbalnej i wizualnej a także dźwiękowej z zastosowaniem w interfejsach komputerowych, reguły operowania przestrzenią, barwą, krojami pisma i innymi materiałami do budowy interfejsów oraz prześledzić techniki designerskie pomocne w tworzeniu interfejsów nowoczesnych komputerów i skomputeryzowanych urządzeń. Opanowuje praktycznie wybrane narzędzie projektowania makiet interfejsów graficznych. "}



u: ([about happen] * "seminar: advanced topics in semantics of programming languages") ^repeat() ^keep()
    {"Seminarium stanowi przegląd zaawansowanych zagadnień dotyczących semantyki języków programowania, takich jak: "}
    a: (!~my_negation * more)
        {"teoria dziedzin PCF, full abstraction, relacje logiczne, równania na dziedzinach    równoważność programów bisymulacje, relacje logiczne    semantyka typów częściowe relacje równoważności, parametryczność    game semantics    Literatura:    1. Domain-Theoretic Foundations of Functional Programming. Thomas Streicher. World Scientific Publishing Co. Pte. Ltd., 2006.   2. Domains and Lambda-Calculi. Martin Abadi and Pierre-Louis Curien. Cambridge University Press, 1998.   3. Theories of Programming Languages. John C. Reynolds. Cambridge University Press, 1998. "}



u: ([about happen] * "distributed systems") ^repeat() ^keep()
    {"Klasyczny temat, akademickie podejście. Powiedzieć że Internet jest przykładem systemu rozproszonego A. Silberschatz i in. to powiedzieć niepodważalną prawdę i zarazem nic nie powiedzieć. Wykład z systemów rozproszonych drąży problematykę SR w pół drogi między jej abstrakcjami a zagadnieniami realizacyjnymi zob. algorytmy rozproszone, sieci komputerowe. Wykład jest oparty na podręczniku Maartena van Steena i Andrew S. Tanenbauma:   Distributed Systems 3rd edition 2017 , łatwo dostępnym w Sieci, stanowiącym trzecie wydanie książki wymienionych autorów autorem pierwszego wydania jest tylko prof. Tanenbaum, oba wcześniejsze wydania mają polskie przekłady. Zaangażowani i samodzielni studenci mogą studiować SR bez specjalnego przygotowania, jest jednak wskazane, aby elementarne zagadnienia działania sprzętu komputerowego i systemów operacyjnych, a także pracy sieciowej zainteresowanym studentom nie były całkiem obce. "}
    a: (!~my_negation * more)
        {"Uwaga dotycząca sposobu prowadzenia zajęć. Podobnie jak w przypadku  Seminarium z systemów  praktyka semestru letniego roku akademickiego 2019-2020 wykazuje, że zajęcia z SR można poprowadzić zdalnie. Niemniej, podkreślam to za każdym razem, zajęcia prowadzone w trybie zdalnym są pewną namiastką zajęć prowadzonych konwencjonalnie. Niewykluczone że obie strony odczuwają pewien niedosyt. Powtarzam argumenty: zdalnie prowadzone zajęcia stępiają i ograniczają proces dydaktyczny,  eliminują możliwość prawdziwie bezpośredniego dyskursu, utrudniają ocenę w aspekcie osobowościowym, psychologicznym. Obecnie istnieją jednak przesłanki, że w nadchodzącym, nowym roku akademickim, praca zdalna nie będzie koniecznym surogatem.     20-05-04, 20-05-25, 21-02-19, 22-04-24 zpl..IIUWr   Przegląd zagadnień  1\. Wstęp  2\. Architektury "}



u: ([about happen] * "algorithms for planar graphs") ^repeat() ^keep()
    {"Wiele problemów grafowych, dla których istnieją algorytmy wielomianowe, można  rozwiązywać w czasie bliskim liniowego jeśli dany graf jest planarny. Na "}
    a: (!~my_negation * more)
        {"przykład, minimalne cięcie rozdzielające dane dwa wierzchołki w planarnym grafie nieskierowanym może być znalezione w czasie Onlogn, podczas gdy czas działania najlepszego znanego algorytmu dla dowolnego grafu nieskierowanego to On^3. Celem wykładu jest zapoznanie studentów z technikami używanymi do konstruowania efektywnych algorytmów dla grafów planarnych, między innymi:    1. Kombinatoryczna definicja grafu planarnego.   2. Dualność.   3. Separatory. "}



u: ([about happen] * "theory of argumentation and elements of logical semiotics") ^repeat() ^keep()
    {"Przedmiot prowadzony przez dr. hab. Marcina Selingera z Katedry Logiki i Metodologii Nauk WNS UWr. "}
    a: (!~my_negation * more)
        {"I. Przedmiot i podstawowe zagadnienia teorii argumentacji 6, 10, 12, 14. 1. Problematyka argumentacji w filozofii i nauce. 2. Współczesne nurty i tematyka badań. 3. Semiotyka i jej podstawowe działy: syntaktyka, semantyka i pragmatyka.  II. Struktura argumentacji potocznej 9, 10, 12, 14. 1. Wypowiedź argumentacyjna i pojęcie argumentu. Perswazyjno-performatywny charakter wypowiedzi argumentacyjnej. Austina-Searle’a teoria aktów mowy. 2. Budowa argumentów I. Struktury standardowe argumenty proste, szeregowe, równoległe, seryjne. 3. Budowa argumentów II. Elementy dialektyczne argumenty kondukcyjne i zdania podcinające. 4. Budowa argumentów III. Rozumowania założeniowe i klasyfikacja rozumowań. "}



u: ([about happen] * "project: artifical intelligence for regular boardgames") ^repeat() ^keep()
    {"W ramach projektu będziemy rozwijać projekt języka regularnych gier planszowych RBG.  W szczególności będzie to polegało na opracowaniu i implementacji ogólnych algorytmów sztucznej inteligencji potrafiących grać w dowolną opisaną grę w tym języku. "}
    a: (!~my_negation * more)
        {"Wykorzystywać będziemy różne podejścia takie jak: klasyczne heurystyki, metody specyficzne dla języka, uczenie się.  Są też dostępne zadania związane z interfejsem dla gracza oraz projektowaniem gier i generatorów gier stanowiących wyzwanie dla naszych algorytmów.  Implementacje będziemy wykorzystywać do celów badawczych, co może zaowocować pracą naukową z dziedziny AI Game Playing.  Projekt będzie realizowany razem z Jakubem Kowalskim.  Wymagania:  C++; "}



u: ([about happen] * "decidability and complexity of logics motivated by computer science") ^repeat() ^keep()
    {"Na seminarium czytać będziemy prace dotyczące rozstrzygalności i złożoności problemów spełnialności czy dana formuła ma model,  skończonej spełnialności czy dana formuła ma model skończony oraz związanych z nimi problemów odpowiadania na zapytania do baz danych baz wiedzy dla danej bazy D, teorii logicznej T i zapytania q, czy prawdą jest, że każdy model skończony model D i T spełnia q? "}
    a: (!~my_negation * more)
        {"Interesować nas będą fragmenty logiki pierwszego rzędu two-variable fragment, guarded fragment, unary negation fragment, guarded negation fragment, ... oraz logiki deskrypcyjne.  Materiał będzie się częściowo pokrywał z materiałem przedmiotu Problemy Decyzyjne w Logice, ale będzie też sporo innych rzeczy i osoby, które ten przedmiot zaliczyły mogą śmiało zapisać się na seminarium.   Niewykluczone, że spotkamy się z pewnymi problemami otwartymi, które będzie można próbować rozwiązać. "}



u: ([about happen] * "automata theory") ^repeat() ^keep()
    {"Wykład będzie dotyczył klasycznych wyników z teorii automatów skończonych oraz bardziej zaawansowanych modeli automatów. Część zagadnień pojawia się na JFiZO a na tych zajęciach zostaną omówione dogłębniej.   Na przykład: "}
    a: (!~my_negation * more)
        {"- Każdy NFA można przekształcić do równoważnego wyrażenia regularnego i vice versa. Jak się ma rozmiar NFA do rozmiaru wyrażenie regularnego? - Języki regularne spełniają lemat o pompowaniu. Czy zachodzi twierdzenie odwrotne?    Program:     Automaty skończone:     a Równoważne definicje języków regularnych: automaty, wyrażenie regularne, WMSO i monoidy.     b Twierdzenia Kleene'go, Myhilla-Neroda i ich zastosowania.     c Uczenie się automatów.      d Minimalizacja automatów. "}



u: ([about happen] * "selected aspects of practical software development") ^repeat() ^keep()
    {"Celem zajęć jest przedstawienie studentom praktyki projektowania obiektowego  oprogramowania. Zajęcia w zwięzły sposób łączą podstawową wiedzę z zakresu baz "}
    a: (!~my_negation * more)
        {"danych i inżynierii oprogramowania w obszarze projektowania obiektowego w wybranych współczesnych realiach technologicznych.  Wymagania: przyda się znajomość paradygmatu obiektowego, pojęć obiektu, konstruktora, dziedziczenia, polimorfizmu i jego realizacji we współczesnych językach programowania.  Zajęcia są pomyślane jako zamiennik dla następujących kanonicznych zajęć:     w części dotyczącej baz danych - Bazy danych "}



u: ([about happen] * "seminar: advanced algorithmics") ^repeat() ^keep()
    {"Celem seminarium jest zapoznanie studentów z wybranymi wynikami publikowanymi  na konferencjach algorytmicznych typu SODA ICALP ESA ... oraz wprowadzenie ich "}
    a: (!~my_negation * more)
        {"do własnych badań. Większość z prezentowanych prac będzie pochodzić z kilku ostatnich lat, ale niektóre z nich będą także okazją do uzupełnienia wiedzy z zakresu klasyki AiSD.  Ubocznym lecz istotnym dla studentów efektem zajęć może być wyników, które legną u podstaw pracy magisterskiej.  Niektóre zajęcia będą miały formę spotkania online, na którym referat wygłoszą goście spoza Wrocławia. W związku z tym zajęcia będą prowadzone w języku angielskim. "}



u: ([about happen] * "numerical analysis (b)") ^repeat() ^keep()
    {"Celem zajęć jest przedstawienie podstawowych metod i algorytmów rozwiązywania  typowych zadań obliczeniowych. Omawiane zagadnienia mają wielorakie "}
    a: (!~my_negation * more)
        {"zastosowania m.in. w obliczeniach naukowych czy grafice komputerowej.  Uwaga COVID-19 20 21 22   W razie konieczności zajęcia lub ich część prowadzone będą w formie zdalnej lub hybrydowej przy użyciu Microsoft Teams oraz m.in. tabletu graficznego.  Wymagania     analiza matematyczna,    algebra. "}



u: ([about happen] * "competition protection in the market economy") ^repeat() ^keep()
    {"Przedmiot prowadzony przez dr hab. Darię Kostecką-Jurczyk  z  Instytutu Nauk Ekonomicznych. "}
    a: (!~my_negation * more)
        {"Celem przedmiotu jest przedstawienie studentom podstawowych zasad ochrony konkurencji w Polsce oraz Unii Europejskiej, w tym dozwolonych i zakazanych ograniczeń konkurencji przez przedsiębiorców, procesów monopolizacji gospodarki a także kontroli fuzji oraz przejęć spółek handlowych. "}



u: ([about happen] * "half-course: hacking for everyone") ^repeat() ^keep()
    {"Celem kursu jest zaznajomienie uczestników z technikami hakowania różnych elementów systemów informatycznych. Przedmiot będzie miał charakter zadań typu CTF i będzie oparty o platformę CyberQ od EC Council. Zakres tematyczny będzie zbliżony do określonego przez certyfikację Certified Ethical Hacker CEH. "}
    a: (!~my_negation * more)
        {"W pierwszej edycji kurs będzie oparty głównie o pracę studentów, którzy przy wsparciu prowadzącego będą zbierać flagi w wybranych scenariuszach, a następnie przedstawiać rozwiązania pozostałym uczestnikom, wymieniając doświadczenia. "}



u: ([about happen] * "scheduling theory") ^repeat() ^keep()
    {"Scheduling theory investigates the assignment of tasks to resources with the intent of minimizing some cost.  A classical example is assigning jobs of various lengths to machines, so that the load of the machines "}
    a: (!~my_negation * more)
        {"is as balanced as possible, for example by minimizing the load of the busiest machine. Naturally, scheduling has a myriad of applications both inside and outside of computing, including logistics, operation management, worker allocation as well as scheduling CPU-bound tasks and scheduling virtual machines in a cloud environment.  This course focuses on scheduling theory as a branch of theoretical computer science, and our main goal is to design optimal algorithms -- or, if not optimal, then at least provably efficient ones.   Throughout the course, we shall introduce the main algorithmic tools used for in the area of scheduling theory, and present select major results in the area which use these tools. In particular, we will focus on  optimal polynomial-time algorithms for scheduling problems, approximation algorithms, and online algorithms. "}



u: ([about happen] * "computer systems") ^repeat() ^keep()
    {"Elementarny wykład z architektury komputerów i struktury systemów  operacyjnych, ze szczególnym uwzględnieniem interakcji pomiędzy tymi dwoma "}
    a: (!~my_negation * more)
        {"komponentami systemów komputerowych. Oprócz zrozumienia najważniejszych idei, studenci nabędą praktyczne umiejętności niezbędne współczesnemu programiście: podstawy programowania niskopoziomowego na przykładzie asemblera x86-64, programowania systemowego obsługa plików, procesów, komunikacji międzyprocesowej i współbieżnego synchronizacja, współdzielenie zasobów. Zrozumieją, jak używane przez nich konstrukty językowe wpływają na wydajność programów. Wykładowi towarzyszy ćwiczenio-pracownia.  Studenci będą zachęcani do kontynuowania przygody z budową i organizacją systemów komputerowych na bardziej zaawansowanych wykładach: “Architektury systemów komputerowych”,“Systemy operacyjne”  uwaga: za te dwa przedmioty nie będzie można wtedy uzyskać punktów ECTS , “Struktura jądra systemu UNIX”, “Projekt: System operacyjny Mimiker“. "}



u: ([about happen] * "operating systems") ^repeat() ^keep()
    {"Celem wykładu jest zapoznanie słuchaczy z wybranymi aspektami systemu uniksowego z punktu widzenia programisty. Na przykładzie wywołań systemowych i narzędzi systemu  Linux  zostaną przedstawione najważniejsze osiągnięcia w dziedzinie systemów operacyjnych. "}
    a: (!~my_negation * more)
        {"Organizacja oraz algorytmy i struktury danych jądra systemu operacyjnego będą omawiane na przedmiocie  „Struktura jądra UNIX” .   Lista tematów  1. Wprowadzenie     jądro systemu operacyjnego     przestrzeń adresowa     izolacja przestrzeni jądra i użytkownika     zmiana kontekstu i przestrzeni adresowej     przerwania sprzętowe i wywłaszczanie "}



u: ([about happen] * "introduction to linear optimization") ^repeat() ^keep()
    {"The course will be given jointly by:   Martin Böhm and "}
    a: (!~my_negation * more)
        {"Jarosław Byrka  Linear optimization, or linear programming, is a study of encoding mathematical problems -- from the very fundamental in computer science, such as flow and matching problems, to problems central to supply chain and logistics -- as problems described by a set of linear equalities, where the quality of a solution is also measured by a linear function.  The centerpoint of linear optimization is the fact that efficient "}



u: ([about happen] * "course: game development in unity3d") ^repeat() ^keep()
    {"Program kursu będzie obejmować tworzenie gier w silniku Unity3D.    Rozpocznie się kilkoma wykładami dotyczącymi podstaw silnika Unity oraz ogólnego wprowadzenia do branży gier. "}
    a: (!~my_negation * more)
        {"Tematyką kolejnych wykładów będzie m.in.:   tworzenie skryptów c, i łączenie ich z głównym silnikiem GameObject, Component, MonoBehaviour, zmienne publiczne edytowalne,  prefaby, instancjonowanie, Update FixedUpdate Start, wyszukiwanie obiektów z kodu  modelowanie, teksturowanie, import assetów  fizyka soft, rigid body, systemy cząsteczek  animacje, maszyna stanów, animacja menu, animacja ludzi  oświetlenie, bakowanie lightmap, daylight, artificial light  shadery  testowanie w tym testy automatyczne, TDD test driven development "}



u: ([about happen] * "seminar: competitive artificial intelligence") ^repeat() ^keep()
    {"Seminarium ma dwa podstawowe cele: "}
    a: (!~my_negation * more)
        {"Po pierwsze zaprezentować istniejące zawody w dziedzinie Sztucznej Inteligencji w grach - zarówno komercyjne jak i akademickie. Interesują nas zasady zawodów, dostepne języki i protokoły, jak wyglądała gra gry w poprzednich edycjach oraz analiza zwycięskich botów.  Po drugie rozwinąć wiedzę na temat stosowanych algorytmów, ich efektywnej implementacji oraz synergii z innymi podejściami. Zazwyczaj zwycięskie podejścia są konglomeratem różnych algorytmów, heurystyk i zwyczajnej 'ifologii' - chcielibyśmy usystematyzować sobie wiedzę kiedy jakie podejście rokuje na osiągnięcie dobrych rezultatów.  Przeglądowe listy interesujących nas wydarzeń: - https:  www.gocoder.one blog ai-game-competitions-list - https:  ieee-cog.org 2022 COMPETITIONS - https:  icga.org ?page id=3468 - NeurIPS competitions "}



u: ([about happen] * "seminar: probability and algorithms") ^repeat() ^keep()
    {"Zamierzam poprowadzić seminarium o tematyce będącej  rozszerzeniem obecnie prowadzonego seminarium z protokołów "}
    a: (!~my_negation * more)
        {"populacyjnych, które są przykładem algorytmów, w których losowość wprowadzana jest przez losowe interakcje między agentami.  Seminarium planuję poprowadzić we współpracy z prof. Leszkiem Gąsieńcem z Uniwersytetu w Liverpoolu. Zajęcia będą prowadzone zdalnie. "}



u: ([about happen] * "manipulation and abuses on the financial market") ^repeat() ^keep()
    {"Przedmiot prowadzony przez dr hab., prof. UWr  Edytę Rutkowską z Instytutu Nauk Ekonomicznych. "}
    a: (!~my_negation * more)
        {"Cele przedmiotu 1. Zapoznanie studenta z różnymi formami i postaciami szeroko rozumianych nadużyć i manipulacji na rynku finansowym w Polsce. 2. Wyposażenie studenta w wiedzę na temat przestępstw na rynku finansowym. 3. Zapoznanie studenta z różnego rodzaju nadużyciami instytucji finansowych w relacjach umownych z klientami z niebezpiecznymi , strukturyzowanymi i skomplikowanymi produktami finansowymi o dużym ryzyku oraz nieuczciwymi praktykami rynkowymi wprowadzającymi w błąd, praktykami naruszających zbiorowe interesy konsumentów, missellingiem. 4. Wyposażenie studenta w wiedzę na temat zagrożeń wynikających z zastosowania nowych technologii oraz umiejętność ich diagnozowania i unikania ich negatywnych skutków. "}



u: ([about happen] * "seminar on cryptography and computer security") ^repeat() ^keep()
    {"Celem seminarium jest zgłębienie różnych aspektów kryptografii i okolic oraz jej zastosowanie w bezpieczeństwie komputerowym. Celem seminarium jest zgłębienie różnych aspektów kryptografii i okolic oraz jej zastosowanie w bezpieczeństwie komputerowym. "}
    a: (!~my_negation * more)
        {" "}



u: ([about happen] * "armies and wars: hybrid and conventional") ^repeat() ^keep()
    {"Przedmiot prowadzony przez dra Michała Piekarskiego z Instytutu Studiów Międzynarodowych UWr. "}
    a: (!~my_negation * more)
        {"Celem przedmiotu jest zapoznanie osób studiujących ze zjawiskiem współczesnych konfliktów, zarówno mających charakter konwencjonalny jak również zjawiska tzw. wojen hybrydowych, prowadzonych z użyciem innych środków niż siła militarna, oraz związanych z tymi zjawiskami wyzwań dla współczesnych społeczeństw.    Treści programowe Pojęcia wojny konwencjonalnej i hybrydowej, agresji konfliktu zbrojnego. Podstawowe pojęcia: strategia, sztuka operacyjna, taktyka. Omówienie roli i zadań poszczególnych elementów sił zbrojnych Ewolucja wojen nowoczesnych i postnowoczesnych - od wojen pomiędzy mocarstwami po wojny "}



u: ([about happen] * "introduction to philosophical logic") ^repeat() ^keep()
    {"Przedmiot prowaqdzony przez dra hab. Marka Magdziaka z Katedra Logiki i Metodologii Nauk, Wydział Nauk Społecznych. "}
    a: (!~my_negation * more)
        {"Przedstawienie podstawowych pojęć i wybranych problemów logicznych, uwzględniając filozoficzne podstawy logiki, z naciskiem na ich zastosowanie w ontologii, etyce i metodologii ogólnej. Nabycie przez słuchaczy umiejętności formułowania i oceny argumentacji filozoficznej oraz budowania poprawnych i trafnych definicji. Wykształcenie umiejętności konceptualizacji problemów oraz odróżniania problemów rzetelnych od pseudo-problemów i sporów przedmiotowych od sporów słownych. "}



u: ([about happen] * "soft power and its tools in international") ^repeat() ^keep()
    {"Przedmiot prowadzony przez prof. dr hab. Beatę Ociepkę z Instytutu Studiów Międzynarodowych UWr. "}
    a: (!~my_negation * more)
        {"Pozyskanie wiedzy z zakresu stosunków międzynarodowych, w tym na temat roli i znaczenia miękkiej siły jako zasobu państwa i sposobu zachowania w stosunkach międzynarodowych. Pogłębienie wiedzy dotyczącej relacji pomiędzy wymiarem wewnętrznym i zewnętrznym polityki zagranicznej poprzez poznanie analizy polityki zagranicznej. Wskazanie na wpływ strategii rządowych i działań NGO na pozycję międzynarodową państwa. Wypracowanie umiejętności tworzenia podstaw strategii zastosowania narzędzi miękkiej siły na różnych poziomach relacji międzynarodowych. Wskazanie na udział i znaczenie aktorów niepaństwowych i obywateli w stosunkach międzynarodowych i na zagrożenia, wynikające z procesów de-demokratyzacji i kurczenia się sfery publicznej, dla tego udziału.  Treści programowe "}



u: ([about happen] * "project: martian rover analog construction and development") ^repeat() ^keep()
    {"Celem projektu jest skonstruowanie i oprogramowanie analogu łazika  marsjańskiego, który będzie brał udział w zawodach University Rover Challenge URC, European Rover Challenge ERC i innych. Zadania do zrealizowania w ramach projektu "}
    a: (!~my_negation * more)
        {"obejmują:  - Oprogramowanie sterowników silników oraz modułów pomocniczych, - Algorytmy planowania trasy i rozpoznawania przeszkód, - Algorytmy sterowania manipulatorem, - Zarządzanie kamerami i transmisją obrazu, - Konfiguracja łączności bezprzewodowej, - Projekt mechaniczny komponentów łazika, dostosowanych do zadań wymaganych w konkretnych zawodach np. moduły pobierania, przechowywania i badania próbek, efektor przeznaczony do pisania na klawiaturze.  Do programowania łazika wykorzystywany jest system ROS Robot Operating System, http:  www.ros.org . Wbrew nazwie, ROS nie jest systemem operacyjnym, a raczej frameworkiem, zbiorem narzędzi i modułów przeznaczonych do programowania rozproszonego systemu sterowania robotami. Wcześniejsza znajomość ROS nie jest wymagana. "}



u: ([about happen] * "introduction to programming in c") ^repeat() ^keep()
    {"Wstęp, czyli jak się ma Wstęp do programowania w języku C do Wstępu do programowania w języku Python "}
    a: (!~my_negation * more)
        {"Studenci 1-go roku studiów 1-go stopnia mogą rozpocząć naukę programowania i podstaw informatyki w jednym z dwóch języków: C albo Python można wybrać tylko jeden z tych dwóch kursów!. Każdy z tych kursów pozwala opanować podstawy informatyki i programowania a w dalszych semestrach doskonalić się w programowaniu w innych lub tych samych językach. W szczególności zaczynając od Kursu: Wstęp do programowania w języku C, nie skazujecie się na zawsze na ten język i nieznajomość Pythona oraz  vice versa . W drugim semestrze studiów i kolejnych pojawiają się kursy języków programowania C++, Java, Ruby, Python, które pozwalają opanować różne języki, przy założeniu, że studenci mają ogólne pojęcie o programowaniu, które zdobywają na obu przedmiotach Kurs: Wstęp do programowania w języku C Python.  O samym kursie Wstęp do programowania w języku C       Celem tego kursu jest nauczenie i rozwinięcie podstawowych umiejętności programowania w jednym z najbardziej rozpowszechnionych języków imperatywnych - języku C. Wykład jest ilustrowany wieloma przykładami, a towarzyszące mu zajęcia w pracowniach uczą poprzez wiele drobnych zadań i końcowy projekt praktyki dobrego programowania. Nie wymaga on od uczestników żadnych wcześniejszych umiejętności programowania, ale studenci startujący od zera będą musieli poświęcić mu więcej pracy w domu, aby szybko wyrównać poziom. Elementy języka są wprowadzane stopniowo, zaczynając od konstrukcji podstawowych, a kończąc na bardziej zaawansowanych zagadnieniach, jak wskaźniki i dynamiczne struktury danych, operacje na plikach czy funkcje rekurencyjne. Ostatnie wykłady poświęcone są obiektowym elementom języka C++.   Pochód języków programowania trwa od zarania informatyki. Studium języków C i C++ ułatwia start w naturalną ich kontynuację, do której obecnie zaliczają się ważne z komercyjnego punktu widzenia języki i środowiska: Java Sun oraz C .NET Microsoft.  Wymagane przygotowanie: Brak, chociaż przydatna będzie podstawowa umiejętność programowania. "}



u: ([about happen] * "advanced techniques in c++ and stl") ^repeat() ^keep()
    {"C++ to obiektowy język programowania z długą i bogatą historią.  Stworzony przez Bjarne Stroustrupa w roku 1983, doczekał się pierwszego standardu ISO IEC 14882:1998 w 1998 roku, znanego jako C++98. "}
    a: (!~my_negation * more)
        {"Następnie kilkukrotnie standard ten był aktualizowany: C++03, C++11  oraz C++14. Ostatnia, najnowsza wersja standardu ISO IEC 14882:2017, nazwana C++17, opublikowana została w grudniu 2017 roku. Obecnie trwają prace nad kolejną wersją standardu, na razie roboczo nazywanego C++2a.  Język C++ jest jednym z najpopularniejszych obecnie języków programowania, przeznaczonych do tworzenia programów o charakterze systemowym, inżynierskim oraz do pisania gier komputerowych.  Umożliwia pisanie przenośnych aplikacji zarówno pod Windowsa, Linuxa oraz inne systemy operacyjne. Język ten oferuje potężne możliwości - pozwala ukrywać skomplikowane rozwiązania pod prostymi interfejsami wysokiego poziomu i jednocześnie tworzyć kod działający na niskim poziomie, gdy wymagane są wysoka wydajność i niskie obciążenie.  Biblioteka standardowa języka C++ jest jego częścią i należy do standardu. Uzupełnia sam język logicznymi strukturami, czyniąc go łatwiejszym w używaniu. "}



u: ([about happen] * "advanced python programming") ^repeat() ^keep()
    {"Python jest eleganckim obiektowo-zorientowanym językiem skryptowym,  wykorzystywanym zarówno do tworzenia serwisów interentowych jak i do tworzenia "}
    a: (!~my_negation * more)
        {"narzędzi do administrowania systemami operacyjnymi Linux Redhat. Składnia Pythona jest dość oryginalna: zakres pętli czy instrukcji warunkowej jest wyznaczony za pomocą wcięć, jednak dzięki temu programy są przejrzyste i czytelne. Silną stroną Pythona są listy będące częścią języka, dzięki czemu operacje na listach mają zwartą notację. Programujący w Pythonie mają do swojej dyspozycji obszerną i rozwijaną bibliotekę standardową, dzięki czemu można np. napisać klienta prostej sieci P2P w siedemnastowierszowym programie. "}



u: ([about happen] * "databases 2") ^repeat() ^keep()
    {"Wykład będzie poświęcony implementacji systemów zarządzania bazami danych. W ramach pracowni - projekt w C++, we współpracy z teamem Oracle MySQL https:  blogs.oracle.com mysql . "}
    a: (!~my_negation * more)
        {"Peter Bailis, Joseph M. Hellerstein, Michael Stonebraker  Readings in Database Systems, 5th Edition, http:  www.redbook.io   Raghu Ramakrishnan and Johannes Gehrke,  Database Management Systems . Third Edition McGraw-Hill.  Program:     Implementacja SZBD.      Przechowywanie danych,      Indeksy,      Sortowanie zewnętrzne, "}



u: ([about happen] * "modeling financial derivatives using the f# functional language") ^repeat() ^keep()
    {"Przedmiot prowadzony przez pracowników "}
    a: (!~my_negation * more)
        {"Czy zastanawiałaś\zastanawiałes się jak wygląda praca analityka lub programisty w dziale modelowania instrumentów finansowych? Co to jest i czym się zajmuje bank inwestycyjny albo co to jest Fintech? Jeśli chcesz nabyć praktycznych umiejętności w tej dziedzinie, porządanych na całym świecie, to podejmij wyzwanie i zapisz się na wykład prowadzony przez zespół doświadczonych programistów i “quantów” międzynarodowego banku inwestycyjnego Credit Suisse. Dowiesz się czym są i do czego służą instrumenty pochodne, jak banki je wyceniają, oraz jak praktycznie zaimplementować ich "}



u: ([about happen] * "calculus") ^repeat() ^keep()
    {"Program: "}
    a: (!~my_negation * more)
        {"1. Liczby rzeczywiste i zespolone 4 godz. : kresy, aksjomat ciągłości, liczby zespolone jako punkty płaszczyzny, postać biegunowa.   2. Ciągi i szeregi liczbowe rzeczywiste i zespolone 10 godz.: ciągi zbieżne, warunek Cauchy'ego zbieżności, ciągi rekurencyjne przykłady, twierdzenie Bolzano-Weierstrassa, kryteria zbieżności szeregow, szeregi potęgowe.   3. Funkcje jednej zmiennej 12 godz.: granica funkcji w punkcie, granice jednostronne, ciągłość funkcji definicja Cauchy'ego i Heinego, własności funkcji ciągłej na odcinku domkniętym, własność Darboux.   4. Pochodna funkcji 12 godz.: interpretacja geometryczna pochodnej, pochodna funkcji złożonej i odwrotnej, twierdzenie o wartości średniej, pochodne wyższych rzędow, wzor Taylora, ekstrema i badanie przebiegu funkcji, wzór Stirlinga.   5. Całkowanie 12 godz.: funkcja pierwotna, całka oznaczona interpretacja geometryczna funkcji pierwotnej, całka Riemanna, zastosowania całek, podstawowe algorytmy numeryczne    6. Ciągi i szeregi funkcyjne 10 godz.: zbieżność jednostajna norma jednostajna, szeregi potęgowe, szereg Taylora, funkcje analityczne wielomiany, funkcja wykładnicza itp..  Wymagania: matematyka w zakresie szkoły średniej "}



u: ([about happen] * "clone: seminar on systems") ^repeat() ^keep()
    {"Rozejrzyj się wokół siebie okiem informatyka. Stajemy się stopniowo „włączkami” do Systemu. Niektórzy niektórzy?, zob. jeden z proponowanych tematów już się stali. I nie są tylko to moje przewidywania i straszenie sprzed lat. To zjawisko potwierdzają obecnie inni, fachowi obserwatorzy. Z drugiej strony spróbujmy dziś żyć bez systemów!.... Te dwa spostrzeżenia wyznaczają ramy referatów, które studenci mogą przygotowywać na seminarium z systemów - ramy praktycznie bez granic. Liczy się sposób prezentacji, własny wkład studenta w temat, twórcze spojrzenie na wybrany system i zdolność  wnioskowania o skutkach jego rozwoju lub zaniechania. "}
    a: (!~my_negation * more)
        {"Praktyka minionych edycji seminarium z systemów wskazuje, że studenci wolą wybierać tematy dotyczące systemów w bardzo szeroko rozumianym zakresie. Oto kilka przykładów tematów z ostatnich lat:  „Systemy zarządzania prawami autorskimi” MZI, „Systemy dystrybucji gier” MBR, „Przez Big Data do Wielkiego Brata” FCH, „E-wybory” BWL, „KLM58C, wind 280 degrees” KWR, „LEGO - jeden patent, aby wszystkie klocki połączyć” MWO, „Międzynarodowa Stacja Kosmiczna” MRO, „Fundusze inwestycyjne” MZA, „System pisma w Korei” MKO, „Przegląd mechanizmów manipulacji i wykorzystywania w grupach religijnych” LKL.  Powracając do systemów osadzonych bardziej bezpośrednio w informatyce, referaty studentów mogą w szczególności dotyczyć ośmiu „przestrzeni informatycznych” odpowiadających ośmiu książkom ostatnio przetłumaczonym przez proponującego to seminarium. Ujmując swobodnie:  Algorytmy na sposób inżynierski "}



u: ([about happen] * "ideas of post-humanism: the artificial intelligence project and the problem of possible minds") ^repeat() ^keep()
    {"Przedmiot prowadzony przez dra Piotra Łukomskiego z  Instytutu Politologii, Wydziału Nauk Społecznych. "}
    a: (!~my_negation * more)
        {"1. Metafora komputera w badaniach nad umysłem i świadomością oraz jej konsekwencje dla rozumienia kultury i człowieka. 2. Post-humanizm czy humanizm rozszerzony - komu lub czemu możemy przypisać cechę umysłu. 3. Kultura jako rzeczywistość wirtualna: problem znaczenia, sensu i komunikacji w teorii informacji. 4. Humanistyka jako artefakt kultury w świecie technologii informacyjnych. 5. Mózg Boltzmanna i inne eksperymenty myślowe czyli rzeczywistość z punktu widzenia możliwego umysłu. 6. Umysł świadomy czyli jaki? Stopniowalność świadomości i idea panpsychizmu. "}



u: ([about happen] * "seminar: finite and algorithmic model theory") ^repeat() ^keep()
    {"Seminarium skupia się na bardziej zaawansowanych tematach skończonej i algorytmicznej teorii modeli. Skierowane jest do słuchaczy przedmiotów ,,Wybrane tematy teorii modeli skończonych i złożoności opisowej'' oraz ,,Problemy decyzyjne w logice'', ale mogą w nim też wziąć osoby zainteresowane logiką, które we własnym zakresie nadrobią podstawowe pojęcia gry Erenfauhta Fraisego, nierozstrzygalność logiki pierwszego rzędu. "}
    a: (!~my_negation * more)
        {"Termin i tryb seminarium:  Termin seminarium zostanie ustalony podczas pierwszego  spotkania. Seminarium będzie prowadzone online. Seminarium będzie prowadzone przez Bartosza Bednarczyka oraz Piotra Ostropolskiego-Nalewaję. "}



u: ([about happen] * "seminar: fine-grained complexity") ^repeat() ^keep()
    {"Złożoność drobnoziarnista fine-grained complexity jest aktualnie jednym z najbardziej dynamicznie rozwijających się kierunków algorytmiki. Prace poświęcone tej tematyce regularnie pojawiają się na topowych konferencjach typu STOC FOCS SODA ICALP, a poświęcone jej wykłady są prowadzone na najlepszych uczelniach zarówno w Europie ETH, Saarbruecken, jak i w USA MIT, Stanford, Harvard. Celem tych zajęć będzie wprowadzenie i przedstawienie najciekawszych w naszej ocenie wyników w tej dziedzinie. "}
    a: (!~my_negation * more)
        {"Celem fine-grained complexity jest klasyfikacja problemów rozwiązywalnych w czasie wielomianowym. Przykładowo, w problemie APSP chcemy znaleźć odległość między każdą parą wierzchołków w danym ważonym grafie skierowanym. Nie jest trudno rozwiązać ten problem w czasie On^3, co być może zaskakujące nie znamy istotnie szybszego algorytmu. Ale jednocześnie nie potrafimy udowodnić, że takiego nie ma! Naturalne jest więc rozważanie całej klasy problemów, które są równoważne APSP w odpowiednio zdefiniowanym sensie: rozwiązanie dowolnego z nich w czasie On^3-eps sprawi, że uzyskamy istotnie szybsze rozwiązanie dla wszystkich innych.  Seminarium będzie złożone z dwóch części. Podczas pierwszej z nich prowadzonej online zapoznamy się z podstawowymi technikami używanymi w tej dziedzinie, na podstawie materiałów z wykładów prowadzonych na innych uczelniach, a później już w formie stacjonarnej zajmiemy się czytaniem i omawianiem aktualnych prac.  Wśród technik omawianych na pierwszej części znajdzie się sporo takich, które powinny być przystępne już dla studentów, którzy zaliczyli zajęcia z Matematyki Dyskretnej a z całą pewnością dla tych, którzy zaliczyli Algorytmy i Struktury Danych. W pracach przedstawianych na drugiej części pojawią się pomysły nieco trudniejsze, których zrozumienie może być dobrym wstępem do ambitnej pracy magisterskiej. "}



u: ([about happen] * "project: machine learning for recommender systems") ^repeat() ^keep()
    {"Celem projektu jest opracowanie wykorzystanie rozszerzenie algorytmów uczenia maszynowego dla systemów rekomendujących i wykorzystanie ich do konstrukcji prototypu systemu rekomendującego dla wybranego problemu zbioru danych. "}
    a: (!~my_negation * more)
        {"Poza podstawowymi algorytmami  Collaborative Filtering  i  Matrix Factorization , chciałbym skupić się na nowych podejściach m.in.  Factorization Machines ,  Neural Collaborative Filtering ,  Neural Graph Collaborative Filtering  i ich rozszerzeniach, a także rozważyć takie aspekty jak: zmienność charakterystyki danych użytkowników produktów interakcji w czasie, różne modele implicite i explicite ratings, różne modele wektorowych zanurzeń produktów, zgodność wektorowych zanurzeń produktów z ich kategoryzacją i product feedem.  Prototyp systemu będzie uczony i testowany na wybranym zbiorze danych, takim jak  Movie-Lens ,  Yelp ,  Amazon-Books  lub innym dostępnym publicznie m.in. na Kaggle.  UWAGA: Projekt jest przeznaczony dla osób posiadających wiedzę z eksploracji danych i uczenia maszynowego w zakresie potrzebnym do realizacji projektu oraz umiejętności techniczne w tym zakresie. Część prac może być wykonywana przez osoby z mniejszym doświadczeniem, ale zalecałbym kontakt emailem i ustalenie tego przed zapisaniem się. "}



u: ([about happen] * "course: technical writing (q2)") ^repeat() ^keep()
    {"Ten przedmiot:  - będzie prowadzony w drugiej połowie semestru letniego, "}
    a: (!~my_negation * more)
        {"- jest przeznaczony dla osób odbywających studia zarówno I, jak i II stopnia - w związku z tym musi być zaklasyfikowany jako kurs „zaawansowany”, ale w tym przypadku jest to kwestia terminologii, która nie powinna nikogo odstraszać.  ---  Pisanie tekstów technicznych w tym prac dyplomowych czy zaliczeniowych, ale też jakichkolwiek opracowań, które powinny cechować się precyzją i uporządkowaniem wypowiedzi to umiejętność tyleż cenna, co trudna do pozyskania w zorganizowany sposób. W ofercie mało jest przedmiotów poświęconych bezpośrednio tej umiejętności, a w trakcie studiów informatycznych nabywa się ją bądź nie niejako przy okazji. Ten kurs powinien przynajmniej częściowo zapełnić tę lukę.  Zasadnicza część kursu będzie poświęcona organizacji, podziałowi i składowi tekstu - zarówno ich ogólnym zasadom, jak i realizacją tych zasad w systemie składu LaTeX. Nie jest to jednak kurs LaTeXa  per se  - o ile na pewno będzie pomocny w rozwoju umiejętności oraz dobrych praktyk w tym systemie, ważniejsze będzie omówienie zasad, które będzie można stosować w dowolnych systemach składu, także tych popularnych z kategorii WYSIWYG.  Kurs będzie ponadto obejmował wiedzę językową - pewnie siłą rzeczy dość fragmentaryczną - przydatną w pisaniu tekstów technicznych. Jeśli starczy czasu, sił i ochoty, pojawi się też analogiczna tematyka dla języka angielskiego, przy czym oczywiście do odbycia kursu wystarczy tylko podstawowa jego znajomość. "}



u: ([about happen] * "freebsd device drivers") ^repeat() ^keep()
    {"Celem kursu jest przygotowanie studentów do pracy z jądrem  FreeBSD , a w szczególności do implementacji sterowników. Po drodze nauczymy się również korzystać z  DTrace  i zajrzymy do tematów, które zostały pominięte na przedmiocie  Struktura Jądra UNIX . "}
    a: (!~my_negation * more)
        {"Zajęcia będą prowadzone raczej luźnym tempem. W pierwszej edycji wykład będzie niedopracowany, a prowadzący będzie się uczył niektórych rzeczy wraz ze studentami. Na pracowni będziemy pisać sterowniki urządzeń. Na ćwiczeniach będziemy czytać kod i uruchamiać skrypty DTrace.  UWAGA! Prowadzący zakłada dobre przygotowanie teoretyczne z zakresu organizacji jąder systemów operacyjnych.   Tematy wykładów   Instalacja i praca z systemem FreeBSD.  Kompilacja jądra i sterowników.  DTrace i śledzenie jądra.  Debugowanie w przestrzeni jądra. "}



u: ([about happen] * "modern web development") ^repeat() ^keep()
    {"Przedmiot będzie prowadzony przez pracowników firmy FINGO. "}
    a: (!~my_negation * more)
        {"Na wykładach opowiemy jak budować aplikacje webowe przy użyciu popularnych bibliotek i framework-ów: ReactJS, TypeScript, Spring Boot, Java.  Organizacja pracowni: Pracowania będzie podzielona na 2 etapy. Pierwszy, trwający ok. 4 tygodni będzie polegał na samodzielnym implementowaniu zadań powiązanych z wykładami. Następnie przez ok. 10 tygodni studenci będą w grupach 3-4 osobowych implementować prostą aplikację webową. Praca będzie podzielona na dwutygodniowe sprinty, a pracownia będzie miała formę demo, na którym każdy zespół będzie prezentował postęp prac.  Wymagania: Zalecamy wcześniejsze zaliczenie Kursu WWW oraz Kursu języka Java. Od uczestników kursu wymagać będziemy znajomości Javy, JavaScriptu oraz podstaw CSS. Mile będzie widziana także znajomość TypeScriptu.  Program przedmiotu:  1. Git  2. Agile "}



u: ([about happen] * "seminar: advances in computer systems") ^repeat() ^keep()
    {"Computer architecture is the science and art of selecting and interconnecting hardware components to create a computer that meets functional, performance and cost goals. We will learn advanced concepts of the different parts of modern computing system that are subject of the recent research in Industry and Academia. We will cover: memory technologies, processing in memory, memory scheduling, caches, branch prediction, speculative execution, parallel computing systems, heterogeneous computing, interconnection networks, etc. "}
    a: (!~my_negation * more)
        {"The goal of this seminar is to explore space of computer architecture research. We want to go broad, not deep. Each talk should highlight the most important aspects of given publication - we don't want to dive into details. We need to cover some of the tools listed on GitHubhttps:  github.com CMU-SAFARI that SAFARI group uses for research.  Before you give first talk you should familiarize with the following:   The Task of the Refereehttps:  www.cs.utexas.edu users mckinley notes reviewing-smith.pdf, Smith, IEEE Computer 1990   Notes on Constructive and Positive Reviewinghttps:  www.cs.utexas.edu users mckinley notes reviewing.html, Hill & McKinley, 2005   How and How Not to Write a Good Systems Paperhttps:  www.seltzer.com margo teaching CS508.19 background p264-levin.pdf, Levin & Redell, OSR 1983   How to Write a Great Research Paperhttps:  www.microsoft.com en-us research academic-program write-great-research-paper , Jones, 2016  Any publication recommended by Onur Mutluhttps:  people.inf.ethz.ch omutlu , renowned researcher in the area of computer systems, will do. However you're free to choose a paper published in recent years on conferences listed below:    MICRO: IEEE ACM International Symposium on Microarchitecturehttps:  www.microarch.org "}



u: ([about happen] * "linux device drivers") ^repeat() ^keep()
    {"Zajęcia będą przez Krystiana Bacławskiego z Instytutu Informatyki UWr i Karola Gugałę z firmy Antmicrohttps:  antmicro.com . Krystian będzie odpowiadał za część teoretyczną, a Karol za część praktyczną zajęć. Zajęcia będą prowadzone zgodnie z poniższą tabelką: "}
    a: (!~my_negation * more)
        {"| godziny | tydzień nieparzysty | tydzień parzysty     | |:-------:|:-------------------:|:--------------------:| |  xx-yy  | pracownia Karol   | wykład Karol       | |  yy-zz  | wykład Krystian   | ćwiczenia Krystian |  Na ćwiczeniach będziemy omawiać najważniesze zagadnienia wprowadzające w świat jądra Linux. Omówimy tematy, których nie poruszono na przedmiocie ASK, tj. model uprzywilejowany procesora, kontrolery przerwań, MMIO, DMA, modele spójności pamięci, komunikację międzyprocesorową. Wprowadzimy Was w ograniczenia pracy w jądrze. Opowiemy o podziale jądra na dolną i górną połówkę, metodach delegacji zadań, synchronizacji wątków, algorytmach przydziału pamięci i wirtualnym systemie plików.  Na pracowniach będziemy rozwijać sterownik do sensora podłączonego przez magistralę I²C IMU lub temperatury i wilgotności. Każde spotkanie zaczniemy od wprowadzenia do tematu, a dalej przełączymy się na pisanie kodu. Po każdych zajęciach sterownik będzie implementował coraz więcej funkcjonalności. System Linux będziemy uruchamiać pod kontrolą Renode symulującego płytkę rozwojową na procesorze RISC-V. Studenci w ramach projektu końcowego będą podpinać wybrany sensor do prawdziwego sprzętu, np. Arty-A7 100. "}



u: ([about happen] * "an introduction to finite and classical model theory") ^repeat() ^keep()
    {"Przedmiot zostanie uruchomiony przy przynajmniej 10ciu chętnych. Docelowa godzina wykładu to poniedziałek 16:15-18:00. "}
    a: (!~my_negation * more)
        {"Finite model theory is a vital area of mathematical logic, which, from our perspective, serves as the foundation of relational database theory. The classes will be about some selected topics from classical and finite model theory, which I found interesting or and important. The lecture will be quite theoretical and the difficulty level of the presented content will vary.  The classes are dedicated to students interested in theoretical computer science and math. Nevertheless, they should be accessible to students after their 3rd semester of bachelor studies.  For students interested in doing research or writing a thesis on related topics, the classes are a good opportunity to kick-start something.  The lecture will contain:  1. An introduction + a few examples. The compactness theorem with a proof via Gödel's theorem. Some consequences of Compactness Theorem with application to inexpressibility in FO.   2. Some important model-theoretic properties of FO: Craig Interpolation, Projective Beth Definability, Łoś-Tarski preservation theorem, Homomorphism preservation theorem. "}



u: ([about happen] * "introduction to algorithms in telecommunication") ^repeat() ^keep()
    {"The course consists of 4 blocks taught by Nokia employees. "}
    a: (!~my_negation * more)
        {"With this block of courses we would like to introduce students to signal processing algorithms in telecommunications. It would be an example of application of mathematical methods in engineering problems. However, these algorithms are in themselves an interesting scientific element which is being developed and are an engaging object of research.    The course is structured in four independent blocks. Each block focuses on different real word use case that can be formulated as a fundamental mathematical problem.  Altogether, that will allow you to become familiar with a variety of issues related to mathematical methods in telecommunications. "}



u: ([about happen] * "algorithmic causality with applications") ^repeat() ^keep()
    {"The course is given by Maciej Liśkiewicz. "}
    a: (!~my_negation * more)
        {"Discovering and understanding causal relationships is an important task of empirical sciences. For example, recognising the causes of diseases or economic crises is of great social interest. However, for ethical or economic reasons questions as “Does smoking cause lung cancer?” can be difficult to examine through direct experimentation. On the other hand, there are often available large amounts of observed data that can provide relevant information about these issues. The goal of causal inference - a quickly growing sub-area of AI - is to establish cause-effect relationships combining observed data with existing knowledge. The main focus of this course is on the algorithmic issues of causality that enable broad applications of the causal theory in AI and empirical sciences.  A tentative schedule is to have three Friday meetings 28.10, 18.11, 2.12.2022. "}



u: ([about happen] * "seminar: modern data mining") ^repeat() ^keep()
    {"UWAGA: W przypadku takiej konieczności, w roku akademickim 2020 21 zajęcia mogą być prowadzone zdalnie przez Google Meet lub podobne narzędzie interaktywnej komunikacji. "}
    a: (!~my_negation * more)
        {"This seminar focuses on advanced data mining algorithms for processing big, complex and unstructured data. It mainly concerns recommendation systems, dimensionality reduction with neighborhood embedding, temporal data mining and decision support systems. In recommendation systems, various approaches from simple collaborative filtering to advanced matrix factorization are presented and discussed in the context of their practical relevance, concerning not only the popular MSE or MAE measures, but also the coverage, diversity, and novelty of recommendations. In temporal data mining, beside the analysis of regular time series with machine learning methods, such as Support Vector Regression and Neural Networks, unstructured temporal data are studied. Additional topics may concern unstructured datasets, such as irregular multidimensional time series, GPS tracks or medical images. "}



u: ([about happen] * "machine learning") ^repeat() ^keep()
    {"This course provides the fundamentals of Machine Learning, i.e. of designing programs that implement a data-driven, rather than hand-implemented behavior.   The course provides a gentle introduction of the topic, but strives to provide enough details and intuitions to explain state-of-the-art ML approaches: ensembles of Decision Trees Boosted Trees, Random Forests and Neural Networks. "}
    a: (!~my_negation * more)
        {"Starting with simple linear and Bayesian models, we proceed to learn the concepts of trainable models, selecting the best model based on data, practical and theoretical ways of estimating model performance on new data, and the difference between discriminative and generative training. The course introduces mainstream algorithms for classification and regression including linear models, Naive Bayes, trees, ensembles. Practical sessions provide a hands-on experience on building models together with familiarizing Students with popular python-based tools like numpy, pandas and pytorch. "}



u: ([about happen] * "proseminar: data visualisation") ^repeat() ^keep()
    {"Seminarium ma się skupić na omawianiu różnych zasad i technik wizualizacji danych. Będzie to przegląd wszerz różnych zasad i rozwiązań, z akcentem rozłożonym równomiernie pomiędzy kwestiami estetycznymi, a praktycznymi. "}
    a: (!~my_negation * more)
        {"Konkretniej, będziemy wspólnie czytać książkę 1. Każdy ze uczestników będzie miał za zadanie zreferować temat przedstawiony w jednym z rozdziałów, uzupełniając treści tam przedstawione informacjami o tym, jak obecnie można tego typu wizualizacje implementować.  Na koniec każdy uczestnik będzie miał za zadanie przygotować 3 wizualizacje wybranych przez siebie danych na podstawie zdobytej wiedzy.  1 Steele, J., & Iliinsky, N. 2010. Beautiful visualization: Looking at data through the eyes of experts.  O'Reilly Media, Inc.. "}



u: ([about happen] * "information and coding theory") ^repeat() ^keep()
    {"Teoria informacji bada zagadnienia takie jak:   mierzenie ilości informacji w ciągu danych, "}
    a: (!~my_negation * more)
        {"ograniczenia na przetwarzanie danych  ograniczenia komunikacji.  Powstała jako próba odpowiedzi na pytania typu:  jaki jest optymalny kompresor dla danego typu danych?  jak szybko możemy przesyłać informacje przez kanał komunikacji?  Pytania te dość szybko doprowadziły do dużo bardziej ogólnych pytań, typu:  jak mierzyć jakość kompresora?  jak mierzyć prędkość przesyłu danych przez kanał komunikacji? "}



u: ([about happen] * "introduction to cloud computing") ^repeat() ^keep()
    {"The course is aimed at students that would like to survey the basics of the services offered by the three main cloud providers AWS, GCP, Azure. "}
    a: (!~my_negation * more)
        {"Students are supposed to self-study the topics using the  free teaching materials provided by Google, AWS or some other available tutorials.  The labs 15h offer an opportunity for the students  to discuss any problems they have encountered during the self-study and also to demonstrate their progress and get the ECTS points.    This course is also a good choice as the first course  taught in English. "}



u: ([about happen] * "online algorithms") ^repeat() ^keep()
    {"Przedmiot nie będzie odbywać się w trybie zdalnym "}
    a: (!~my_negation * more)
        {"W przypadku niektórych rzeczywistych zagadnień, takich jak szeregowanie zadań scheduling, zarządzanie pamięcią podręczną, routing pakietów czy buforowanie danych w internecie web caching, algorytm je rozwiązujacy musi działać w sposób online i dokonywać decyzji bez wiedzy lub z częściową wiedzą o przyszłości. Tematem wykładu będą takie właśnie zagadnienia i ich analiza. Podobnie jak w przypadku algorytmów aproksymacyjnych, interesować nas będą rozwiązania przybliżone. Pokażemy, jak dowodzić konkretnych gwarancji o jakości takich przybliżeń. Wykład prowadzony będzie w oparciu o podane poniżej książki i aktualne prace naukowe.  Wymagania:   Algorytmy i struktury danych M  Rachunek prawdopodobieństwa  UWAGA: Osoby, które nie spełniają powyższych wymagań, będą musiały zaliczyć niepunktowany egzamin wstępny i zostaną zapisane tylko w przypadku wolnych miejsc. "}



u: ([about happen] * "history of philosophy") ^repeat() ^keep()
    {"W przypadku konieczności prowadzenia zajęć zdalnie, ten przedmiot będzie prowadzony przez MS Teams. "}
    a: (!~my_negation * more)
        {"Tematy, problematyka i materiały na zajęcia z informatyki, w rok. akadem. 2018-2019, sem. letni.  Zakładane efekty kształcenia: student wykazuje się znajomością podstawowych problemów z filozofii w proponowanym zakresie; relacji między filozofią a nauką oraz między różnymi typami wiedzy naukowej, w stopniu umożliwiającym interdyscyplinarny ogląd nauki. Zna i prawidłowo stosuje podstawową terminologię filozoficzną metodologiczną, logiczną itp.. Potrafi przedstawić podstawowe zagadnienia z zakresu logiki i filozofii języka, szczególnie w kontekście wiedzy naukowej; rozumie znaczenie i wpływ języka na procesy i "}



u: ([about happen] * "functional programming") ^repeat() ^keep()
    {"Do r. akad. 2016 17 Programowanie funkcyjne było przedmiotem I2.T JP Języki programowania i logika - 100%, od r. akad. 2017 18 - I1. "}
    a: (!~my_negation * more)
        {"Programowanie funkcyjne jest stylem programowania opartym na obliczaniu wartości wyrażeń, w przeciwieństwie do programowania imperatywnego, wykorzystującego modyfikacje stanu programu przez instrukcje. Studenci znają już ten paradygmat z przedmiotu Metody programowania, gdzie był wykorzystywany język Scheme, w którym jest stosowana typizacja dynamiczna.            Celem tego wykładu jest pogłębiona prezentacja programowania funkcyjnego. Paradygmat ten obecnie staje się bardzo popularny również w językach imperatywnych, ponieważ wysoki poziom abstrakcji ułatwia składanie komponentów, a bezstanowość jest wykorzystywana w wysokopoziomowych mechanizmach programowania współbieżnego, które pozwalają pisać efektywne programy, wykorzystujące procesory wielordzeniowe.     W trakcie wykładu będą przedstawione pojęcia i techniki programowania funkcyjnego z wykorzystaniem dwóch języków z typizacją statyczną. OCaml język z rodziny ML wykorzystuje ewaluację gorliwą, najpopularniejszą w implementacjach języków programowania. Pozwala też programować imperatywnie i obiektowo.&nbsp; Język F z platformy .Net jest w znacznym stopniu kompatybilny z językiem OCaml.        Haskell jest czystym językiem funkcyjnym z ewaluacją leniwą.          Będzie omawiany m.in. system typów z polimorfizmem parametrycznym, funkcje wyższych rzędów, rekursja ogonowa, mechanizm dopasowania do wzorca, sygnatury, struktury, funktory i monady, klasy typów, strategie ewaluacji wyrażeń.           Na zajęciach w pracowni studenci będą pisali proste programy, których tematyka będzie zsynchronizowana z zagadnieniami, omawianymi na wykładzie.&nbsp; "}



u: ([about happen] * "numerical analysis (m)") ^repeat() ^keep()
    {"Celem zajęć jest przedstawienie podstawowych metod i algorytmów rozwiązywania typowych zadań obliczeniowych. "}
    a: (!~my_negation * more)
        {"Analiza błędów           Arytmetyka numeryczna. Uwarunkowanie zadania. Algorytmy numerycznie poprawne.    Rozwiązywanie równań nieliniowych             Ogólna teoria metod iteracyjnych. Metody: bisekcji, Newtona             i siecznych. Równania algebraiczne.           Interpolacja funkcji                  Wzór interpolacyjny Lagrange'a. Reszta wzoru interpolacyjnego.             Wzór interpolacyjny Newtona. Interpolacja Hermite'a. "}



u: ([about happen] * "efficient implementation of algorithms") ^repeat() ^keep()
    {"Każde spotkanie ma dwie części. Podczas pierwszej studenci rozwiązują zadania  typowe w większym lub mniejszym stopniu dla zawodów programistycznych typu "}
    a: (!~my_negation * more)
        {"AMPPZ, CERC,… . W drugiej części dyskutujemy nad metodami ich rozwiązań.  Cel zajęć wybiega daleko poza przygotowania drużyn reprezentujących UWr na zawodach. Jak pokazuje wieloletnie doświadczenie, zajęcia w zasadniczy sposób pogłębiają zrozumienie algorytmów, poprawiają biegłość w programowaniu i umiejętność rozwiązywania problemów. To są umiejętności chyba najczęściej sprawdzane obecnie przy rekrutacji przez „topowe firmy” Google, Microsoft,…   Uwagi:  przedmiot przystępny już dla bardziej zaangażowanych studentów 1-go roku "}



u: ([about happen] * "front-end apps development") ^repeat() ^keep()
    {"Choć frontend jest nieodłączną częścią większości aplikacji webowych, to proces jego wytwarzania znacząco zmienił się w ostatnich latach. Gwałtowny rozwój frameworków, bibliotek i preprocesorów sprawił, że programiści borykają się dziś z zupełnie innymi problemami niż jeszcze dekadę temu. Za zmianami ciężko jest nadążyć, nic więc dziwnego, że wiele osób nie rozumie z czym wiąże się rola Frontend Developera. "}
    a: (!~my_negation * more)
        {"Wykład ma na celu przybliżyć słuchaczom tę rolę i związane z nią odpowiedzialności, a także przekazać wiedzę umożliwiającą wytworzenie pierwszych frontendowych aplikacji. Poruszymy zarówno aspekty techniczne jak i te bardziej teoretyczne, by nie zależeć od konkretnych rozwiązań.  Program przedmiotu będzie oparty na Roadmapie Frontendowejhttps:  roadmap.sh frontend. Przejdziemy przez interesujący podzbiór zagadnień, gdzieniegdzie dorzucając dodatkowe tematy.  Poniższa lista tematów jest orientacyjna. W zależności od potrzeb, na niektóre z nich poświęcimy więcej lub mniej czasu.  1. Podstawy działania Internetu 1. HTML      Podstawy HTML      Dobre praktyki i konwencje "}



u: ([about happen] * "computational complexity") ^repeat() ^keep()
    {"Celem wykładu jest przedstawienie kluczowych koncepcji i twierdzeń teorii  złożoności obliczeniowej, ktore powinien znać każdy dobrze wykształcony "}
    a: (!~my_negation * more)
        {"magister informatyki. Po uporządkowaniu wiedzy nabytej na JFiZ, przedstawimy trochę podstawowych pojęć i faktow, a następnie przejdziemy do omawiania zagadnień z poniższej listy.       Pamięć vs Czas      Twierdzenie Hopcrofta, Paula, Valianta:  o tym, że pamięć jest cenniejszym zasobem niż czas obliczeń i że można przekonać się o tym grając w kamyki    Dopełnienie vs Niedeterminizm      Twierdzenie Immermana-Szelepcsenyi'ego: o tym, że niedeterministycznie można nie tylko zgadywać istnienie rozwiązań, ale także ich nieistnienie "}
